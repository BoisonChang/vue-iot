{"remainingRequest":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\src\\assets\\js\\ckeditor.js","dependencies":[{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\src\\assets\\js\\ckeditor.js","mtime":1650418487253},{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\babel.config.js","mtime":1647853208515},{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Boison Chang\\Desktop\\connesia_cli_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var _defineProperty=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/defineProperty.js").default;var _objectSpread=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/objectSpread2.js").default;var _get=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/get.js").default;var _getPrototypeOf=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/getPrototypeOf.js").default;var _assertThisInitialized=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/assertThisInitialized.js").default;var _construct=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/construct.js").default;var _slicedToArray=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/slicedToArray.js").default;var _createForOfIteratorHelper=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js").default;var _toConsumableArray=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/toConsumableArray.js").default;var _inherits=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/inherits.js").default;var _createSuper=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/createSuper.js").default;var _wrapNativeSuper=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/wrapNativeSuper.js").default;var _createClass=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/createClass.js").default;var _classCallCheck=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/classCallCheck.js").default;var _typeof=require("C:/Users/Boison Chang/Desktop/connesia_cli_vue/node_modules/@babel/runtime/helpers/typeof.js").default;require("regenerator-runtime/runtime.js");require("core-js/modules/es.object.to-string.js");require("core-js/modules/es.array.join.js");require("core-js/modules/es.array.map.js");require("core-js/modules/es.array.concat.js");require("core-js/modules/es.error.cause.js");require("core-js/modules/es.array.slice.js");require("core-js/modules/es.function.name.js");require("core-js/modules/es.array.from.js");require("core-js/modules/es.string.iterator.js");require("core-js/modules/es.regexp.exec.js");require("core-js/modules/es.regexp.test.js");require("core-js/modules/es.symbol.js");require("core-js/modules/es.symbol.description.js");require("core-js/modules/es.symbol.iterator.js");require("core-js/modules/web.dom-collections.iterator.js");require("core-js/modules/web.dom-exception.constructor.js");require("core-js/modules/web.dom-exception.stack.js");require("core-js/modules/web.dom-exception.to-string-tag.js");require("core-js/modules/es.json.stringify.js");require("core-js/modules/web.atob.js");require("core-js/modules/web.dom-collections.for-each.js");require("core-js/modules/es.object.keys.js");require("core-js/modules/es.array.filter.js");require("core-js/modules/es.array.splice.js");require("core-js/modules/es.global-this.js");require("core-js/modules/es.array.fill.js");require("core-js/modules/es.regexp.to-string.js");require("core-js/modules/es.weak-set.js");require("core-js/modules/es.map.js");require("core-js/modules/es.regexp.constructor.js");require("core-js/modules/es.regexp.dot-all.js");require("core-js/modules/es.regexp.sticky.js");require("core-js/modules/es.string.replace.js");require("core-js/modules/es.set.js");require("core-js/modules/es.object.get-own-property-names.js");require("core-js/modules/es.object.get-own-property-descriptor.js");require("core-js/modules/es.array.find.js");require("core-js/modules/es.object.get-prototype-of.js");require("core-js/modules/es.array-buffer.constructor.js");require("core-js/modules/es.string.split.js");require("core-js/modules/es.weak-map.js");require("core-js/modules/es.number.constructor.js");require("core-js/modules/es.array.includes.js");require("core-js/modules/es.string.match.js");require("core-js/modules/es.object.entries.js");require("core-js/modules/es.array.sort.js");require("core-js/modules/es.string.trim.js");require("core-js/modules/es.string.includes.js");require("core-js/modules/es.string.anchor.js");require("core-js/modules/es.string.search.js");require("core-js/modules/es.object.from-entries.js");require("core-js/modules/es.string.ends-with.js");require("core-js/modules/es.string.repeat.js");require("core-js/modules/es.string.starts-with.js");require("core-js/modules/web.url.to-json.js");require("core-js/modules/es.array.flat.js");require("core-js/modules/es.array.unscopables.flat.js");require("core-js/modules/es.string.match-all.js");require("core-js/modules/es.array.find-index.js");require("core-js/modules/es.number.parse-int.js");(function(t){var e=t["en"]=t["en"]||{};e.dictionary=Object.assign(e.dictionary||{},{"%0 of %1":"%0 of %1",Aquamarine:"Aquamarine",Black:"Black",Blue:"Blue",Bold:"Bold","Bulleted List":"Bulleted List",Cancel:"Cancel","Change image text alternative":"Change image text alternative","Choose heading":"Choose heading","Dim grey":"Dim grey","Document colors":"Document colors","Dropdown toolbar":"Dropdown toolbar","Edit block":"Edit block","Editor toolbar":"Editor toolbar","Font Color":"Font Color",Green:"Green",Grey:"Grey",Heading:"Heading","Heading 1":"Heading 1","Heading 2":"Heading 2","Heading 3":"Heading 3","Heading 4":"Heading 4","Heading 5":"Heading 5","Heading 6":"Heading 6","image widget":"image widget","Insert paragraph after block":"Insert paragraph after block","Insert paragraph before block":"Insert paragraph before block",Italic:"Italic","Light blue":"Light blue","Light green":"Light green","Light grey":"Light grey",Next:"Next","Numbered List":"Numbered List",Orange:"Orange",Paragraph:"Paragraph",Previous:"Previous",Purple:"Purple",Red:"Red",Redo:"Redo","Remove color":"Remove color","Remove Format":"Remove Format","Rich Text Editor":"Rich Text Editor","Rich Text Editor, %0":"Rich Text Editor, %0",Save:"Save","Select all":"Select all","Show more items":"Show more items","Text alternative":"Text alternative",Turquoise:"Turquoise",Undo:"Undo",White:"White","Widget toolbar":"Widget toolbar",Yellow:"Yellow"});})(window.CKEDITOR_TRANSLATIONS||(window.CKEDITOR_TRANSLATIONS={}));/*!
 * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md.
 */(function t(e,n){if((typeof exports==="undefined"?"undefined":_typeof(exports))==="object"&&(typeof module==="undefined"?"undefined":_typeof(module))==="object")module.exports=n();else if(typeof define==="function"&&define.amd)define([],n);else if((typeof exports==="undefined"?"undefined":_typeof(exports))==="object")exports["BalloonEditor"]=n();else e["BalloonEditor"]=n();})(self,function(){return function(){"use strict";var t={390:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,'.ck.ck-editor__editable .ck.ck-clipboard-drop-target-position{display:inline;pointer-events:none;position:relative}.ck.ck-editor__editable .ck.ck-clipboard-drop-target-position span{position:absolute;width:0}.ck.ck-editor__editable .ck-widget:-webkit-drag>.ck-widget__selection-handle,.ck.ck-editor__editable .ck-widget:-webkit-drag>.ck-widget__type-around{display:none}:root{--ck-clipboard-drop-target-dot-width:12px;--ck-clipboard-drop-target-dot-height:8px;--ck-clipboard-drop-target-color:var(--ck-color-focus-border)}.ck.ck-editor__editable .ck.ck-clipboard-drop-target-position span{background:var(--ck-clipboard-drop-target-color);border:1px solid var(--ck-clipboard-drop-target-color);bottom:calc(var(--ck-clipboard-drop-target-dot-height)*-.5);margin-left:-1px;top:calc(var(--ck-clipboard-drop-target-dot-height)*-.5)}.ck.ck-editor__editable .ck.ck-clipboard-drop-target-position span:after{border-color:var(--ck-clipboard-drop-target-color) transparent transparent transparent;border-style:solid;border-width:calc(var(--ck-clipboard-drop-target-dot-height)) calc(var(--ck-clipboard-drop-target-dot-width)*.5) 0 calc(var(--ck-clipboard-drop-target-dot-width)*.5);content:"";display:block;height:0;left:50%;position:absolute;top:calc(var(--ck-clipboard-drop-target-dot-height)*-.5);transform:translateX(-50%);width:0}.ck.ck-editor__editable .ck-widget.ck-clipboard-drop-target-range{outline:var(--ck-widget-outline-thickness) solid var(--ck-clipboard-drop-target-color)!important}.ck.ck-editor__editable .ck-widget:-webkit-drag{zoom:.6;outline:none!important}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-clipboard/theme/clipboard.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-clipboard/clipboard.css"],names:[],mappings:"AASC,8DACC,cAAe,CAEf,mBAAoB,CADpB,iBAOD,CAJC,mEACC,iBAAkB,CAClB,OACD,CAWA,qJACC,YACD,CCzBF,MACC,yCAA0C,CAC1C,yCAA0C,CAC1C,6DACD,CAOE,mEAIC,gDAAiD,CADjD,sDAAuD,CAFvD,2DAA8D,CAI9D,gBAAiB,CAHjB,wDAqBD,CAfC,yEAWC,sFAAuF,CAEvF,kBAAmB,CADnB,qKAA0K,CAX1K,UAAW,CAIX,aAAc,CAFd,QAAS,CAIT,QAAS,CADT,iBAAkB,CAElB,wDAA2D,CAE3D,0BAA2B,CAR3B,OAYD,CA2DF,kEACC,gGACD,CAKA,gDACC,OAAS,CACT,sBACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-editor__editable {\n\t/*\n\t * Vertical drop target (in text).\n\t */\n\t& .ck.ck-clipboard-drop-target-position {\n\t\tdisplay: inline;\n\t\tposition: relative;\n\t\tpointer-events: none;\n\n\t\t& span {\n\t\t\tposition: absolute;\n\t\t\twidth: 0;\n\t\t}\n\t}\n\n\t/*\n\t * Styles of the widget being dragged (its preview).\n\t */\n\t& .ck-widget:-webkit-drag {\n\t\t& > .ck-widget__selection-handle {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t& > .ck-widget__type-around {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-clipboard-drop-target-dot-width: 12px;\n\t--ck-clipboard-drop-target-dot-height: 8px;\n\t--ck-clipboard-drop-target-color: var(--ck-color-focus-border)\n}\n\n.ck.ck-editor__editable {\n\t/*\n\t * Vertical drop target (in text).\n\t */\n\t& .ck.ck-clipboard-drop-target-position {\n\t\t& span {\n\t\t\tbottom: calc(-.5 * var(--ck-clipboard-drop-target-dot-height));\n\t\t\ttop: calc(-.5 * var(--ck-clipboard-drop-target-dot-height));\n\t\t\tborder: 1px solid var(--ck-clipboard-drop-target-color);\n\t\t\tbackground: var(--ck-clipboard-drop-target-color);\n\t\t\tmargin-left: -1px;\n\n\t\t\t/* The triangle above the marker */\n\t\t\t&::after {\n\t\t\t\tcontent: "";\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 50%;\n\t\t\t\ttop: calc(var(--ck-clipboard-drop-target-dot-height) * -.5);\n\n\t\t\t\ttransform: translateX(-50%);\n\t\t\t\tborder-color: var(--ck-clipboard-drop-target-color) transparent transparent transparent;\n\t\t\t\tborder-width: calc(var(--ck-clipboard-drop-target-dot-height)) calc(.5 * var(--ck-clipboard-drop-target-dot-width)) 0 calc(.5 * var(--ck-clipboard-drop-target-dot-width));\n\t\t\t\tborder-style: solid;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t// Horizontal drop target (between blocks).\n\t& .ck.ck-clipboard-drop-target-position {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 0;\n\t\tmargin: 0;\n\t\ttext-align: initial;\n\n\t\t& .ck-clipboard-drop-target__line {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\theight: 0;\n\t\t\tborder: 1px solid var(--ck-clipboard-drop-target-color);\n\t\t\tmargin-top: -1px;\n\n\t\t\t&::before {\n\t\t\t\tcontent: "";\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: calc(-1 * var(--ck-clipboard-drop-target-dot-size));\n\t\t\t\ttop: 0;\n\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t\tborder-color: transparent transparent transparent var(--ck-clipboard-drop-target-color);\n\t\t\t\tborder-width: var(--ck-clipboard-drop-target-dot-size) 0 var(--ck-clipboard-drop-target-dot-size) calc(2 * var(--ck-clipboard-drop-target-dot-size));\n\t\t\t\tborder-style: solid;\n\t\t\t}\n\n\t\t\t&::after {\n\t\t\t\tcontent: "";\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: calc(-1 * var(--ck-clipboard-drop-target-dot-size));\n\t\t\t\ttop: 0;\n\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t\tborder-color: transparent var(--ck-clipboard-drop-target-color) transparent transparent;\n\t\t\t\tborder-width: var(--ck-clipboard-drop-target-dot-size) calc(2 * var(--ck-clipboard-drop-target-dot-size)) var(--ck-clipboard-drop-target-dot-size) 0;\n\t\t\t\tborder-style: solid;\n\t\t\t}\n\t\t}\n\t}\n\t*/\n\n\t/*\n\t * Styles of the widget that it a drop target.\n\t */\n\t& .ck-widget.ck-clipboard-drop-target-range {\n\t\toutline: var(--ck-widget-outline-thickness) solid var(--ck-clipboard-drop-target-color) !important;\n\t}\n\n\t/*\n\t * Styles of the widget being dragged (its preview).\n\t */\n\t& .ck-widget:-webkit-drag {\n\t\tzoom: 0.6;\n\t\toutline: none !important;\n\t}\n}\n'],sourceRoot:""}]);var c=a;},894:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck .ck-placeholder,.ck.ck-placeholder{position:relative}.ck .ck-placeholder:before,.ck.ck-placeholder:before{content:attr(data-placeholder);left:0;pointer-events:none;position:absolute;right:0}.ck.ck-read-only .ck-placeholder:before{display:none}.ck.ck-reset_all .ck-placeholder{position:relative}.ck .ck-placeholder:before,.ck.ck-placeholder:before{color:var(--ck-color-engine-placeholder-text);cursor:text}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-engine/placeholder.css"],names:[],mappings:"AAMA,uCAEC,iBAWD,CATC,qDAIC,8BAA+B,CAF/B,MAAO,CAKP,mBAAoB,CANpB,iBAAkB,CAElB,OAKD,CAKA,wCACC,YACD,CAQD,iCACC,iBACD,CC5BC,qDAEC,6CAA8C,CAD9C,WAED",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* See ckeditor/ckeditor5#936. */\n.ck.ck-placeholder,\n.ck .ck-placeholder {\n\tposition: relative;\n\n\t&::before {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tcontent: attr(data-placeholder);\n\n\t\t/* See ckeditor/ckeditor5#469. */\n\t\tpointer-events: none;\n\t}\n}\n\n/* See ckeditor/ckeditor5#1987. */\n.ck.ck-read-only .ck-placeholder {\n\t&::before {\n\t\tdisplay: none;\n\t}\n}\n\n/*\n * Rules for the `ck-placeholder` are loaded before the rules for `ck-reset_all` in the base CKEditor 5 DLL build.\n * This fix overwrites the incorrectly set `position: static` from `ck-reset_all`.\n * See https://github.com/ckeditor/ckeditor5/issues/11418.\n */\n.ck.ck-reset_all .ck-placeholder {\n\tposition: relative;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* See ckeditor/ckeditor5#936. */\n.ck.ck-placeholder, .ck .ck-placeholder {\n\t&::before {\n\t\tcursor: text;\n\t\tcolor: var(--ck-color-engine-placeholder-text);\n\t}\n}\n"],sourceRoot:""}]);var c=a;},401:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-editor__editable span[data-ck-unsafe-element]{display:none}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-engine/theme/renderer.css"],names:[],mappings:"AAMA,qDACC,YACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* Elements marked by the Renderer as hidden should be invisible in the editor. */\n.ck.ck-editor__editable span[data-ck-unsafe-element] {\n\tdisplay: none;\n}\n"],sourceRoot:""}]);var c=a;},585:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck .ck-button.ck-color-table__remove-color{align-items:center;display:flex;width:100%}label.ck.ck-color-grid__label{font-weight:unset}.ck .ck-button.ck-color-table__remove-color{border-bottom-left-radius:0;border-bottom-right-radius:0;padding:calc(var(--ck-spacing-standard)/2) var(--ck-spacing-standard)}.ck .ck-button.ck-color-table__remove-color:not(:focus){border-bottom:1px solid var(--ck-color-base-border)}[dir=ltr] .ck .ck-button.ck-color-table__remove-color .ck.ck-icon{margin-right:var(--ck-spacing-standard)}[dir=rtl] .ck .ck-button.ck-color-table__remove-color .ck.ck-icon{margin-left:var(--ck-spacing-standard)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-font/theme/fontcolor.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-font/fontcolor.css"],names:[],mappings:"AAKA,4CAEC,kBAAmB,CADnB,YAAa,CAEb,UACD,CAEA,8BACC,iBACD,CCNA,4CAEC,2BAA4B,CAC5B,4BAA6B,CAF7B,qEAiBD,CAbC,wDACC,mDACD,CAEA,kEAEE,uCAMF,CARA,kEAME,sCAEF",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-button.ck-color-table__remove-color {\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n}\n\nlabel.ck.ck-color-grid__label {\n\tfont-weight: unset;\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n.ck .ck-button.ck-color-table__remove-color {\n\tpadding: calc(var(--ck-spacing-standard) / 2 ) var(--ck-spacing-standard);\n\tborder-bottom-left-radius: 0;\n\tborder-bottom-right-radius: 0;\n\n\t&:not(:focus) {\n\t\tborder-bottom: 1px solid var(--ck-color-base-border);\n\t}\n\n\t& .ck.ck-icon {\n\t\t@mixin ck-dir ltr {\n\t\t\tmargin-right: var(--ck-spacing-standard);\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\tmargin-left: var(--ck-spacing-standard);\n\t\t}\n\t}\n}\n\n'],sourceRoot:""}]);var c=a;},230:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-heading_heading1{font-size:20px}.ck.ck-heading_heading2{font-size:17px}.ck.ck-heading_heading3{font-size:14px}.ck[class*=ck-heading_heading]{font-weight:700}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__panel .ck-list__item{min-width:18em}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-heading/heading.css"],names:[],mappings:"AAKA,wBACC,cACD,CAEA,wBACC,cACD,CAEA,wBACC,cACD,CAEA,+BACC,eACD,CCZC,2EACC,SACD,CAEA,uEACC,cACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-heading_heading1 {\n\tfont-size: 20px;\n}\n\n.ck.ck-heading_heading2 {\n\tfont-size: 17px;\n}\n\n.ck.ck-heading_heading3 {\n\tfont-size: 14px;\n}\n\n.ck[class*="ck-heading_heading"] {\n\tfont-weight: bold;\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* Resize dropdown's button label. */\n.ck.ck-dropdown.ck-heading-dropdown {\n\t& .ck-dropdown__button .ck-button__label {\n\t\twidth: 8em;\n\t}\n\n\t& .ck-dropdown__panel .ck-list__item {\n\t\tmin-width: 18em;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},48:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck-content .image{clear:both;display:table;margin:.9em auto;min-width:50px;text-align:center}.ck-content .image img{display:block;margin:0 auto;max-width:100%;min-width:100%}.ck-content .image-inline{align-items:flex-start;display:inline-flex;max-width:100%}.ck-content .image-inline picture{display:flex}.ck-content .image-inline img,.ck-content .image-inline picture{flex-grow:1;flex-shrink:1;max-width:100%}.ck.ck-editor__editable .image>figcaption.ck-placeholder:before{overflow:hidden;padding-left:inherit;padding-right:inherit;text-overflow:ellipsis;white-space:nowrap}.ck.ck-editor__editable .image-inline.ck-widget_selected,.ck.ck-editor__editable .image.ck-widget_selected{z-index:1}.ck.ck-editor__editable .image-inline.ck-widget_selected ::selection{display:none}.ck.ck-editor__editable td .image-inline img,.ck.ck-editor__editable th .image-inline img{max-width:none}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-image/theme/image.css"],names:[],mappings:"AAMC,mBAEC,UAAW,CADX,aAAc,CAOd,gBAAkB,CAGlB,cAAe,CARf,iBAuBD,CAbC,uBAEC,aAAc,CAGd,aAAc,CAGd,cAAe,CAGf,cACD,CAGD,0BAYC,sBAAuB,CANvB,mBAAoB,CAGpB,cAoBD,CAdC,kCACC,YACD,CAGA,gEAGC,WAAY,CACZ,aAAc,CAGd,cACD,CAUD,gEASC,eAAgB,CARhB,oBAAqB,CACrB,qBAAsB,CAQtB,sBAAuB,CAFvB,kBAGD,CAWA,2GACC,SAUD,CAHC,qEACC,YACD,CAOA,0FACC,cACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck-content {\n\t& .image {\n\t\tdisplay: table;\n\t\tclear: both;\n\t\ttext-align: center;\n\n\t\t/* Make sure there is some space between the content and the image. Center image by default. */\n\t\t/* The first value should be equal to --ck-spacing-large variable if used in the editor context\n\t \tto avoid the content jumping (See https://github.com/ckeditor/ckeditor5/issues/9825). */\n\t\tmargin: 0.9em auto;\n\n\t\t/* Make sure the caption will be displayed properly (See: https://github.com/ckeditor/ckeditor5/issues/1870). */\n\t\tmin-width: 50px;\n\n\t\t& img {\n\t\t\t/* Prevent unnecessary margins caused by line-height (see #44). */\n\t\t\tdisplay: block;\n\n\t\t\t/* Center the image if its width is smaller than the content\'s width. */\n\t\t\tmargin: 0 auto;\n\n\t\t\t/* Make sure the image never exceeds the size of the parent container (ckeditor/ckeditor5-ui#67). */\n\t\t\tmax-width: 100%;\n\n\t\t\t/* Make sure the image is never smaller than the parent container (See: https://github.com/ckeditor/ckeditor5/issues/9300). */\n\t\t\tmin-width: 100%\n\t\t}\n\t}\n\n\t& .image-inline {\n\t\t/*\n\t\t * Normally, the .image-inline would have "display: inline-block" and "img { width: 100% }" (to follow the wrapper while resizing).\n\t\t * Unfortunately, together with "srcset", it gets automatically stretched up to the width of the editing root.\n\t\t * This strange behavior does not happen with inline-flex.\n\t\t */\n\t\tdisplay: inline-flex;\n\n\t\t/* While being resized, don\'t allow the image to exceed the width of the editing root. */\n\t\tmax-width: 100%;\n\n\t\t/* This is required by Safari to resize images in a sensible way. Without this, the browser breaks the ratio. */\n\t\talign-items: flex-start;\n\n\t\t/* When the picture is present it must act as a flex container to let the img resize properly */\n\t\t& picture {\n\t\t\tdisplay: flex;\n\t\t}\n\n\t\t/* When the picture is present, it must act like a resizable img. */\n\t\t& picture,\n\t\t& img {\n\t\t\t/* This is necessary for the img to span the entire .image-inline wrapper and to resize properly. */\n\t\t\tflex-grow: 1;\n\t\t\tflex-shrink: 1;\n\n\t\t\t/* Prevents overflowing the editing root boundaries when an inline image is very wide. */\n\t\t\tmax-width: 100%;\n\t\t}\n\t}\n}\n\n.ck.ck-editor__editable {\n\t/*\n\t * Inhertit the content styles padding of the <figcaption> in case the integration overrides `text-align: center`\n\t * of `.image` (e.g. to the left/right). This ensures the placeholder stays at the padding just like the native\n\t * caret does, and not at the edge of <figcaption>.\n\t */\n\t& .image > figcaption.ck-placeholder::before {\n\t\tpadding-left: inherit;\n\t\tpadding-right: inherit;\n\n\t\t/*\n\t\t * Make sure the image caption placeholder doesn\'t overflow the placeholder area.\n\t\t * See https://github.com/ckeditor/ckeditor5/issues/9162.\n\t\t */\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\n\t/*\n\t * Make sure the selected inline image always stays on top of its siblings.\n\t * See https://github.com/ckeditor/ckeditor5/issues/9108.\n\t */\n\t& .image.ck-widget_selected {\n\t\tz-index: 1;\n\t}\n\n\t& .image-inline.ck-widget_selected {\n\t\tz-index: 1;\n\n\t\t/*\n\t\t * Make sure the native browser selection style is not displayed.\n\t\t * Inline image widgets have their own styles for the selected state and\n\t\t * leaving this up to the browser is asking for a visual collision.\n\t\t */\n\t\t& ::selection {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t/* The inline image nested in the table should have its original size if not resized.\n\tSee https://github.com/ckeditor/ckeditor5/issues/9117. */\n\t& td,\n\t& th {\n\t\t& .image-inline img {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n}\n'],sourceRoot:""}]);var c=a;},831:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-text-alternative-form{display:flex;flex-direction:row;flex-wrap:nowrap}.ck.ck-text-alternative-form .ck-labeled-field-view{display:inline-block}.ck.ck-text-alternative-form .ck-label{display:none}@media screen and (max-width:600px){.ck.ck-text-alternative-form{flex-wrap:wrap}.ck.ck-text-alternative-form .ck-labeled-field-view{flex-basis:100%}.ck.ck-text-alternative-form .ck-button{flex-basis:50%}}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-image/theme/textalternativeform.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/mixins/_rwd.css"],names:[],mappings:"AAOA,6BACC,YAAa,CACb,kBAAmB,CACnB,gBAqBD,CAnBC,oDACC,oBACD,CAEA,uCACC,YACD,CCZA,oCDCD,6BAcE,cAUF,CARE,oDACC,eACD,CAEA,wCACC,cACD,CCrBD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_rwd.css";\n\n.ck.ck-text-alternative-form {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\n\t& .ck-labeled-field-view {\n\t\tdisplay: inline-block;\n\t}\n\n\t& .ck-label {\n\t\tdisplay: none;\n\t}\n\n\t@mixin ck-media-phone {\n\t\tflex-wrap: wrap;\n\n\t\t& .ck-labeled-field-view {\n\t\t\tflex-basis: 100%;\n\t\t}\n\n\t\t& .ck-button {\n\t\t\tflex-basis: 50%;\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@define-mixin ck-media-phone {\n\t@media screen and (max-width: 600px) {\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},499:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{align-items:center;display:inline-flex;justify-content:left;position:relative}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{display:none}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{opacity:1;visibility:visible}.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{-webkit-appearance:none;border:1px solid transparent;cursor:default;font-size:inherit;line-height:1;min-height:var(--ck-ui-component-min-height);min-width:var(--ck-ui-component-min-height);padding:var(--ck-spacing-tiny);text-align:center;transition:box-shadow .2s ease-in-out,border .2s ease-in-out;vertical-align:middle;white-space:nowrap}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0;outline:none}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{color:inherit;cursor:inherit;font-size:inherit;font-weight:inherit;vertical-align:middle}[dir=ltr] .ck.ck-button .ck-button__label,[dir=ltr] a.ck.ck-button .ck-button__label{text-align:left}[dir=rtl] .ck.ck-button .ck-button__label,[dir=rtl] a.ck.ck-button .ck-button__label{text-align:right}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{color:inherit}[dir=ltr] .ck.ck-button .ck-button__keystroke,[dir=ltr] a.ck.ck-button .ck-button__keystroke{margin-left:var(--ck-spacing-large)}[dir=rtl] .ck.ck-button .ck-button__keystroke,[dir=rtl] a.ck.ck-button .ck-button__keystroke{margin-right:var(--ck-spacing-large)}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{font-weight:700;opacity:.7}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__keystroke,a.ck.ck-button.ck-disabled .ck-button__keystroke{opacity:.3}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}[dir=ltr] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=ltr] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(var(--ck-spacing-small)*-1);margin-right:var(--ck-spacing-small)}[dir=rtl] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=rtl] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:var(--ck-spacing-small);margin-right:calc(var(--ck-spacing-small)*-1)}.ck.ck-button.ck-button_with-keystroke .ck-button__label,a.ck.ck-button.ck-button_with-keystroke .ck-button__label{flex-grow:1}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/mixins/_unselectable.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/mixins/_tooltip.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/button/button.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/mixins/_button.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_focus.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_disabled.css"],names:[],mappings:"AAQA,6BCCC,qBAAsB,CACtB,wBAAyB,CACzB,oBAAqB,CACrB,gBD6BD,CE/BC,qDACC,aAqBD,CAHC,oBAnBD,qDAoBE,YAEF,CADC,CFvBF,6BAOC,kBAAmB,CADnB,mBAAoB,CAEpB,oBAAqB,CAHrB,iBA4BD,CAvBC,iEACC,YACD,CAGC,yGACC,oBACD,CAID,iFACC,sBACD,CEkBA,iEAEC,SAAU,CADV,kBAED,CAbA,yFACC,YACD,CC7BD,6BCAC,oDD0ID,CCvIE,6EACC,0DACD,CAEA,+EACC,2DAA4C,CAC5C,uEACD,CAID,qDACC,6DACD,CDhBD,6BEDC,eF2ID,CA1IA,wIEGE,qCFuIF,CA1IA,6BA6BC,uBAAwB,CANxB,4BAA6B,CAjB7B,cAAe,CAcf,iBAAkB,CAHlB,aAAc,CAJd,4CAA6C,CAD7C,2CAA4C,CAJ5C,8BAA+B,CAC/B,iBAAkB,CAiBlB,4DAA8D,CAnB9D,qBAAsB,CAFtB,kBAqID,CA3GC,oFGhCA,2BAA2B,CCF3B,2CAA8B,CDC9B,YHqCA,CAIC,kJAEC,aACD,CAGD,iEAIC,aAAc,CACd,cAAe,CAHf,iBAAkB,CAClB,mBAAoB,CAMpB,qBASD,CAlBA,qFAYE,eAMF,CAlBA,qFAgBE,gBAEF,CAEA,yEACC,aAYD,CAbA,6FAIE,mCASF,CAbA,6FAQE,oCAKF,CAbA,yEAWC,eAAiB,CACjB,UACD,CAIC,oIIrFD,oDJyFC,CAEA,uFK3FD,kCL6FC,CAGA,yFKhGD,kCLkGC,CAEA,iGACC,UACD,CAGD,qEACC,yDAcD,CAXC,2HAEE,4CAA+C,CAC/C,oCAOF,CAVA,2HAQE,mCAAoC,CADpC,6CAGF,CAKA,mHACC,WACD,CAID,yCC/HA,+CDiIA,CC9HC,yFACC,qDACD,CAEA,2FACC,sDAA4C,CAC5C,kEACD,CAID,iEACC,wDACD,CDmHA,2DACC,iCACD,CAEA,+DACC,mCACD,CAID,2CC7IC,mDDkJD,CC/IE,2FACC,yDACD,CAEA,6FACC,0DAA4C,CAC5C,sEACD,CAID,mEACC,4DACD,CD6HD,2CAIC,wCACD,CAEA,uCAEC,eACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../mixins/_unselectable.css";\n@import "../tooltip/mixins/_tooltip.css";\n\n.ck.ck-button,\na.ck.ck-button {\n\t@mixin ck-unselectable;\n\t@mixin ck-tooltip_enabled;\n\n\tposition: relative;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: left;\n\n\t& .ck-button__label {\n\t\tdisplay: none;\n\t}\n\n\t&.ck-button_with-text {\n\t\t& .ck-button__label {\n\t\t\tdisplay: inline-block;\n\t\t}\n\t}\n\n\t/* Center the icon horizontally in a button without text. */\n\t&:not(.ck-button_with-text)  {\n\t\tjustify-content: center;\n\t}\n\n\t&:hover {\n\t\t@mixin ck-tooltip_visible;\n\t}\n\n\t/* Get rid of the native focus outline around the tooltip when focused (but not :hover). */\n\t&:focus:not(:hover) {\n\t\t@mixin ck-tooltip_disabled;\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Makes element unselectable.\n */\n@define-mixin ck-unselectable {\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Enables the tooltip, which is the tooltip is in DOM but\n * not yet displayed.\n */\n@define-mixin ck-tooltip_enabled {\n\t& .ck-tooltip {\n\t\tdisplay: block;\n\n\t\t/*\n\t\t * Don't display tooltips in devices which don't support :hover.\n\t\t * In fact, it's all about iOS, which forces user to click UI elements twice to execute\n\t\t * the primary action, when tooltips are enabled.\n\t\t *\n\t\t * Q: OK, but why not the following query?\n\t\t *\n\t\t *   @media (hover) {\n\t\t *       display: block;\n\t\t *   }\n\t\t *\n\t\t * A: Because FF does not support it and it would completely disable tooltips\n\t\t * in that browser.\n\t\t *\n\t\t * More in https://github.com/ckeditor/ckeditor5/issues/920.\n\t\t */\n\t\t@media (hover:none) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n/**\n * Disables the tooltip making it disappear from DOM.\n */\n@define-mixin ck-tooltip_disabled {\n\t& .ck-tooltip {\n\t\tdisplay: none;\n\t}\n}\n\n/**\n * Shows the tooltip, which is already in DOM.\n * Requires `ck-tooltip_enabled` first.\n */\n@define-mixin ck-tooltip_visible {\n\t& .ck-tooltip {\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_focus.css";\n@import "../../../mixins/_shadow.css";\n@import "../../../mixins/_disabled.css";\n@import "../../../mixins/_rounded.css";\n@import "../../mixins/_button.css";\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n.ck.ck-button,\na.ck.ck-button {\n\t@mixin ck-button-colors --ck-color-button-default;\n\t@mixin ck-rounded-corners;\n\n\twhite-space: nowrap;\n\tcursor: default;\n\tvertical-align: middle;\n\tpadding: var(--ck-spacing-tiny);\n\ttext-align: center;\n\n\t/* A very important piece of styling. Go to variable declaration to learn more. */\n\tmin-width: var(--ck-ui-component-min-height);\n\tmin-height: var(--ck-ui-component-min-height);\n\n\t/* Normalize the height of the line. Removing this will break consistent height\n\tamong text and text-less buttons (with icons). */\n\tline-height: 1;\n\n\t/* Enable font size inheritance, which allows fluid UI scaling. */\n\tfont-size: inherit;\n\n\t/* Avoid flickering when the foucs border shows up. */\n\tborder: 1px solid transparent;\n\n\t/* Apply some smooth transition to the box-shadow and border. */\n\ttransition: box-shadow .2s ease-in-out, border .2s ease-in-out;\n\n\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/189 */\n\t-webkit-appearance: none;\n\n\t&:active,\n\t&:focus {\n\t\t@mixin ck-focus-ring;\n\t\t@mixin ck-box-shadow var(--ck-focus-outer-shadow);\n\t}\n\n\t/* Allow icon coloring using the text "color" property. */\n\t& .ck-button__icon {\n\t\t& use,\n\t\t& use * {\n\t\t\tcolor: inherit;\n\t\t}\n\t}\n\n\t& .ck-button__label {\n\t\t/* Enable font size inheritance, which allows fluid UI scaling. */\n\t\tfont-size: inherit;\n\t\tfont-weight: inherit;\n\t\tcolor: inherit;\n\t\tcursor: inherit;\n\n\t\t/* Must be consistent with .ck-icon\'s vertical align. Otherwise, buttons with and\n\t\twithout labels (but with icons) have different sizes in Chrome */\n\t\tvertical-align: middle;\n\n\t\t@mixin ck-dir ltr {\n\t\t\ttext-align: left;\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\ttext-align: right;\n\t\t}\n\t}\n\n\t& .ck-button__keystroke {\n\t\tcolor: inherit;\n\n\t\t@mixin ck-dir ltr {\n\t\t\tmargin-left: var(--ck-spacing-large);\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\tmargin-right: var(--ck-spacing-large);\n\t\t}\n\n\t\tfont-weight: bold;\n\t\topacity: .7;\n\t}\n\n\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/70 */\n\t&.ck-disabled {\n\t\t&:active,\n\t\t&:focus {\n\t\t\t/* The disabled button should have a slightly less visible shadow when focused. */\n\t\t\t@mixin ck-box-shadow var(--ck-focus-disabled-outer-shadow);\n\t\t}\n\n\t\t& .ck-button__icon {\n\t\t\t@mixin ck-disabled;\n\t\t}\n\n\t\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/98 */\n\t\t& .ck-button__label {\n\t\t\t@mixin ck-disabled;\n\t\t}\n\n\t\t& .ck-button__keystroke {\n\t\t\topacity: .3;\n\t\t}\n\t}\n\n\t&.ck-button_with-text {\n\t\tpadding: var(--ck-spacing-tiny) var(--ck-spacing-standard);\n\n\t\t/* stylelint-disable-next-line no-descending-specificity */\n\t\t& .ck-button__icon {\n\t\t\t@mixin ck-dir ltr {\n\t\t\t\tmargin-left: calc(-1 * var(--ck-spacing-small));\n\t\t\t\tmargin-right: var(--ck-spacing-small);\n\t\t\t}\n\n\t\t\t@mixin ck-dir rtl {\n\t\t\t\tmargin-right: calc(-1 * var(--ck-spacing-small));\n\t\t\t\tmargin-left: var(--ck-spacing-small);\n\t\t\t}\n\t\t}\n\t}\n\n\t&.ck-button_with-keystroke {\n\t\t/* stylelint-disable-next-line no-descending-specificity */\n\t\t& .ck-button__label {\n\t\t\tflex-grow: 1;\n\t\t}\n\t}\n\n\t/* A style of the button which is currently on, e.g. its feature is active. */\n\t&.ck-on {\n\t\t@mixin ck-button-colors --ck-color-button-on;\n\t}\n\n\t&.ck-button-save {\n\t\tcolor: var(--ck-color-button-save);\n\t}\n\n\t&.ck-button-cancel {\n\t\tcolor: var(--ck-color-button-cancel);\n\t}\n}\n\n/* A style of the button which handles the primary action. */\n.ck.ck-button-action,\na.ck.ck-button-action {\n\t@mixin ck-button-colors --ck-color-button-action;\n\n\tcolor: var(--ck-color-button-action-text);\n}\n\n.ck.ck-button-bold,\na.ck.ck-button-bold {\n\tfont-weight: bold;\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements a button of given background color.\n *\n * @param {String} $background - Background color of the button.\n * @param {String} $border - Border color of the button.\n */\n@define-mixin ck-button-colors $prefix {\n\tbackground: var($(prefix)-background);\n\n\t&:not(.ck-disabled) {\n\t\t&:hover {\n\t\t\tbackground: var($(prefix)-hover-background);\n\t\t}\n\n\t\t&:active {\n\t\t\tbackground: var($(prefix)-active-background);\n\t\t\tbox-shadow: inset 0 2px 2px var($(prefix)-active-shadow);\n\t\t}\n\t}\n\n\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/98 */\n\t&.ck-disabled {\n\t\tbackground: var($(prefix)-disabled-background);\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A visual style of focused element's border.\n */\n@define-mixin ck-focus-ring {\n\t/* Disable native outline. */\n\toutline: none;\n\tborder: var(--ck-focus-ring)\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A class which indicates that an element holding it is disabled.\n */\n@define-mixin ck-disabled {\n\topacity: var(--ck-disabled-opacity);\n}\n"],sourceRoot:""}]);var c=a;},681:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px;--ck-switch-button-translation:calc(var(--ck-switch-button-toggle-width) - var(--ck-switch-button-toggle-inner-size) - var(--ck-switch-button-toggle-spacing)*2)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(var(--ck-spacing-large)*2)}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__label{margin-left:calc(var(--ck-spacing-large)*2)}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-right:auto}.ck.ck-button.ck-switchbutton .ck-button__toggle{background:var(--ck-color-switch-button-off-background);transition:background .4s ease;width:var(--ck-switch-button-toggle-width)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(var(--ck-border-radius)*.5)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{background:var(--ck-color-switch-button-inner-background);height:var(--ck-switch-button-toggle-inner-size);margin:var(--ck-switch-button-toggle-spacing);transition:all .3s ease;width:var(--ck-switch-button-toggle-inner-size)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover{background:var(--ck-color-switch-button-off-hover-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover .ck-button__toggle__inner{box-shadow:0 0 0 5px var(--ck-color-switch-button-inner-shadow)}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle:hover{background:var(--ck-color-switch-button-on-hover-background)}[dir=ltr] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(var( --ck-switch-button-translation ))}[dir=rtl] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(calc(var( --ck-switch-button-translation )*-1))}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/button/switchbutton.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_disabled.css"],names:[],mappings:"AASE,4HACC,aACD,CCCF,MAEC,8CAA+C,CAE/C,mDAAoD,CACpD,qCAAsC,CACtC,gKAKD,CAGC,0DAGE,4CAOF,CAVA,0DAQE,2CAEF,CAEA,iDC3BA,eDoEA,CAzCA,yICvBC,qCDgED,CAzCA,2DAKE,gBAoCF,CAzCA,2DAUE,iBA+BF,CAzCA,iDAiBC,uDAAwD,CAHxD,8BAAiC,CAEjC,0CAyBD,CAtBC,2EC9CD,eD2DC,CAbA,6LC1CA,qCAAsC,CD4CpC,8CAWF,CAbA,2EASC,yDAA0D,CAD1D,gDAAiD,CAFjD,6CAA8C,CAM9C,uBAA0B,CAL1B,+CAMD,CAEA,uDACC,6DAKD,CAHC,iFACC,+DACD,CAIF,6DExEA,kCF0EA,CAEA,uDACC,sDAkBD,CAhBC,6DACC,4DACD,CAEA,2FAKE,2DAMF,CAXA,2FASE,oEAEF",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-button.ck-switchbutton {\n\t& .ck-button__toggle {\n\t\tdisplay: block;\n\n\t\t& .ck-button__toggle__inner {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_disabled.css";\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n/* Note: To avoid rendering issues (aliasing) but to preserve the responsive nature\nof the component, floating–point numbers have been used which, for the default font size\n(see: --ck-font-size-base), will generate simple integers. */\n:root {\n\t/* 34px at 13px font-size */\n\t--ck-switch-button-toggle-width: 2.6153846154em;\n\t/* 14px at 13px font-size */\n\t--ck-switch-button-toggle-inner-size: 1.0769230769em;\n\t--ck-switch-button-toggle-spacing: 1px;\n\t--ck-switch-button-translation: calc(\n\t\tvar(--ck-switch-button-toggle-width) -\n\t\tvar(--ck-switch-button-toggle-inner-size) -\n\t\t2 * var(--ck-switch-button-toggle-spacing)\n\t);\n}\n\n.ck.ck-button.ck-switchbutton {\n\t& .ck-button__label {\n\t\t@mixin ck-dir ltr {\n\t\t\t/* Separate the label from the switch */\n\t\t\tmargin-right: calc(2 * var(--ck-spacing-large));\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\t/* Separate the label from the switch */\n\t\t\tmargin-left: calc(2 * var(--ck-spacing-large));\n\t\t}\n\t}\n\n\t& .ck-button__toggle {\n\t\t@mixin ck-rounded-corners;\n\n\t\t@mixin ck-dir ltr {\n\t\t\t/* Make sure the toggle is always to the right as far as possible. */\n\t\t\tmargin-left: auto;\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\t/* Make sure the toggle is always to the left as far as possible. */\n\t\t\tmargin-right: auto;\n\t\t}\n\n\t\t/* Gently animate the background color of the toggle switch */\n\t\ttransition: background 400ms ease;\n\n\t\twidth: var(--ck-switch-button-toggle-width);\n\t\tbackground: var(--ck-color-switch-button-off-background);\n\n\t\t& .ck-button__toggle__inner {\n\t\t\t@mixin ck-rounded-corners {\n\t\t\t\tborder-radius: calc(.5 * var(--ck-border-radius));\n\t\t\t}\n\n\t\t\t/* Leave some tiny bit of space around the inner part of the switch */\n\t\t\tmargin: var(--ck-switch-button-toggle-spacing);\n\t\t\twidth: var(--ck-switch-button-toggle-inner-size);\n\t\t\theight: var(--ck-switch-button-toggle-inner-size);\n\t\t\tbackground: var(--ck-color-switch-button-inner-background);\n\n\t\t\t/* Gently animate the inner part of the toggle switch */\n\t\t\ttransition: all 300ms ease;\n\t\t}\n\n\t\t&:hover {\n\t\t\tbackground: var(--ck-color-switch-button-off-hover-background);\n\n\t\t\t& .ck-button__toggle__inner {\n\t\t\t\tbox-shadow: 0 0 0 5px var(--ck-color-switch-button-inner-shadow);\n\t\t\t}\n\t\t}\n\t}\n\n\t&.ck-disabled .ck-button__toggle {\n\t\t@mixin ck-disabled;\n\t}\n\n\t&.ck-on .ck-button__toggle {\n\t\tbackground: var(--ck-color-switch-button-on-background);\n\n\t\t&:hover {\n\t\t\tbackground: var(--ck-color-switch-button-on-hover-background);\n\t\t}\n\n\t\t& .ck-button__toggle__inner {\n\t\t\t/*\n\t\t\t * Move the toggle switch to the right. It will be animated.\n\t\t\t */\n\t\t\t@mixin ck-dir ltr {\n\t\t\t\ttransform: translateX( var( --ck-switch-button-translation ) );\n\t\t\t}\n\n\t\t\t@mixin ck-dir rtl {\n\t\t\t\ttransform: translateX( calc( -1 * var( --ck-switch-button-translation ) ) );\n\t\t\t}\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A class which indicates that an element holding it is disabled.\n */\n@define-mixin ck-disabled {\n\topacity: var(--ck-disabled-opacity);\n}\n"],sourceRoot:""}]);var c=a;},923:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-color-grid{display:grid}:root{--ck-color-grid-tile-size:24px;--ck-color-color-grid-check-icon:#000}.ck.ck-color-grid{grid-gap:5px;padding:8px}.ck.ck-color-grid__tile{border:0;height:var(--ck-color-grid-tile-size);min-height:var(--ck-color-grid-tile-size);min-width:var(--ck-color-grid-tile-size);padding:0;transition:box-shadow .2s ease;width:var(--ck-color-grid-tile-size)}.ck.ck-color-grid__tile.ck-disabled{cursor:unset;transition:unset}.ck.ck-color-grid__tile.ck-color-table__color-tile_bordered{box-shadow:0 0 0 1px var(--ck-color-base-border)}.ck.ck-color-grid__tile .ck.ck-icon{color:var(--ck-color-color-grid-check-icon);display:none}.ck.ck-color-grid__tile.ck-on{box-shadow:inset 0 0 0 1px var(--ck-color-base-background),0 0 0 2px var(--ck-color-base-text)}.ck.ck-color-grid__tile.ck-on .ck.ck-icon{display:block}.ck.ck-color-grid__tile.ck-on,.ck.ck-color-grid__tile:focus:not(.ck-disabled),.ck.ck-color-grid__tile:hover:not(.ck-disabled){border:0}.ck.ck-color-grid__tile:focus:not(.ck-disabled),.ck.ck-color-grid__tile:hover:not(.ck-disabled){box-shadow:inset 0 0 0 1px var(--ck-color-base-background),0 0 0 2px var(--ck-color-focus-border)}.ck.ck-color-grid__label{padding:0 var(--ck-spacing-standard)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/colorgrid/colorgrid.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/colorgrid/colorgrid.css"],names:[],mappings:"AAKA,kBACC,YACD,CCAA,MACC,8BAA+B,CAK/B,qCACD,CAEA,kBACC,YAAa,CACb,WACD,CAEA,wBAOC,QAAS,CALT,qCAAsC,CAEtC,yCAA0C,CAD1C,wCAAyC,CAEzC,SAAU,CACV,8BAA+B,CAL/B,oCAyCD,CAjCC,oCACC,YAAa,CACb,gBACD,CAEA,4DACC,gDACD,CAEA,oCAEC,2CAA4C,CAD5C,YAED,CAEA,8BACC,8FAKD,CAHC,0CACC,aACD,CAGD,8HAIC,QACD,CAEA,gGAEC,iGACD,CAGD,yBACC,oCACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-color-grid {\n\tdisplay: grid;\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n\n:root {\n\t--ck-color-grid-tile-size: 24px;\n\n\t/* Not using global colors here because these may change but some colors in a pallette\n\t * require special treatment. For instance, this ensures no matter what the UI text color is,\n\t * the check icon will look good on the black color tile. */\n\t--ck-color-color-grid-check-icon: hsl(0, 0%, 0%);\n}\n\n.ck.ck-color-grid {\n\tgrid-gap: 5px;\n\tpadding: 8px;\n}\n\n.ck.ck-color-grid__tile {\n\twidth: var(--ck-color-grid-tile-size);\n\theight: var(--ck-color-grid-tile-size);\n\tmin-width: var(--ck-color-grid-tile-size);\n\tmin-height: var(--ck-color-grid-tile-size);\n\tpadding: 0;\n\ttransition: .2s ease box-shadow;\n\tborder: 0;\n\n\t&.ck-disabled {\n\t\tcursor: unset;\n\t\ttransition: unset;\n\t}\n\n\t&.ck-color-table__color-tile_bordered {\n\t\tbox-shadow: 0 0 0 1px var(--ck-color-base-border);\n\t}\n\n\t& .ck.ck-icon {\n\t\tdisplay: none;\n\t\tcolor: var(--ck-color-color-grid-check-icon);\n\t}\n\n\t&.ck-on {\n\t\tbox-shadow: inset 0 0 0 1px var(--ck-color-base-background), 0 0 0 2px var(--ck-color-base-text);\n\n\t\t& .ck.ck-icon {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t&.ck-on,\n\t&:focus:not( .ck-disabled ),\n\t&:hover:not( .ck-disabled ) {\n\t\t/* Disable the default .ck-button\'s border ring. */\n\t\tborder: 0;\n\t}\n\n\t&:focus:not( .ck-disabled ),\n\t&:hover:not( .ck-disabled ) {\n\t\tbox-shadow: inset 0 0 0 1px var(--ck-color-base-background), 0 0 0 2px var(--ck-color-focus-border);\n\t}\n}\n\n.ck.ck-color-grid__label {\n\tpadding: 0 var(--ck-spacing-standard);\n}\n'],sourceRoot:""}]);var c=a;},488:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,":root{--ck-dropdown-max-width:75vw}.ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;max-width:var(--ck-dropdown-max-width);position:absolute;z-index:var(--ck-z-modal)}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_n,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nme,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nmw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_s,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sme,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_smw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{bottom:auto;top:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_n,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_s{left:50%;transform:translateX(-50%)}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nmw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_smw{left:75%;transform:translateX(-75%)}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nme,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sme{left:25%;transform:translateX(-25%)}.ck.ck-toolbar .ck-dropdown__panel{z-index:calc(var(--ck-z-modal) + 1)}:root{--ck-dropdown-arrow-size:calc(var(--ck-icon-size)*0.5)}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{width:var(--ck-dropdown-arrow-size)}[dir=ltr] .ck.ck-dropdown .ck-dropdown__arrow{margin-left:var(--ck-spacing-standard);right:var(--ck-spacing-standard)}[dir=rtl] .ck.ck-dropdown .ck-dropdown__arrow{left:var(--ck-spacing-standard);margin-right:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}[dir=ltr] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-right:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{overflow:hidden;text-overflow:ellipsis;width:7em}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-dropdown__button_label-width_auto .ck-button__label{width:auto}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-off:active,.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on:active{box-shadow:none}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-off:active:focus,.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on:active:focus{box-shadow:var(--ck-focus-outer-shadow),0 0}.ck.ck-dropdown__panel{border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-dropdown__panel{background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;box-shadow:var(--ck-drop-shadow),0 0;min-width:100%}.ck.ck-dropdown__panel.ck-dropdown__panel_se{border-top-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_sw{border-top-right-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_ne{border-bottom-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_nw{border-bottom-right-radius:0}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/mixins/_tooltip.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/dropdown/dropdown.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_disabled.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAOA,MACC,4BACD,CAEA,gBACC,oBAAqB,CACrB,iBAqFD,CAnFC,oCACC,mBAAoB,CACpB,2BACD,CAGA,+CACC,UAOD,CCUA,iEACC,YACD,CDVA,oCAGC,kCAAmC,CAEnC,YAAa,CAEb,sCAAuC,CAEvC,iBAAkB,CAHlB,yBA4DD,CAvDC,+DACC,oBACD,CAEA,mSAKC,WACD,CAEA,mSAUC,WAAY,CADZ,QAED,CAEA,oHAEC,MACD,CAEA,oHAEC,OACD,CAEA,kHAGC,QAAS,CACT,0BACD,CAEA,sHAGC,QAAS,CACT,0BACD,CAEA,sHAGC,QAAS,CACT,0BACD,CAQF,mCACC,mCACD,CEhGA,MACC,sDACD,CAEA,gBAEC,iBA2ED,CAzEC,oCACC,mCACD,CAGC,8CAIC,sCAAuC,CAHvC,gCAID,CAIA,8CACC,+BAAgC,CAGhC,oCACD,CAGD,gDC/BA,kCDiCA,CAIE,mFAEC,oCACD,CAIA,mFAEC,qCACD,CAID,iEAEC,eAAgB,CAChB,sBAAuB,CAFvB,SAGD,CAGA,6EC1DD,kCD4DC,CAGA,qDACC,2BAA4B,CAC5B,4BACD,CAEA,sGACC,UACD,CAGA,yHAEC,eAKD,CAHC,qIE7EF,2CF+EE,CAKH,uBGlFC,eH8GD,CA5BA,qFG9EE,qCH0GF,CA5BA,uBAIC,oDAAqD,CACrD,sDAAuD,CACvD,QAAS,CE1FT,oCAA8B,CF6F9B,cAmBD,CAfC,6CACC,wBACD,CAEA,6CACC,yBACD,CAEA,6CACC,2BACD,CAEA,6CACC,4BACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import \"../tooltip/mixins/_tooltip.css\";\n\n:root {\n\t--ck-dropdown-max-width: 75vw;\n}\n\n.ck.ck-dropdown {\n\tdisplay: inline-block;\n\tposition: relative;\n\n\t& .ck-dropdown__arrow {\n\t\tpointer-events: none;\n\t\tz-index: var(--ck-z-default);\n\t}\n\n\t/* Dropdown button should span horizontally, e.g. in vertical toolbars */\n\t& .ck-button.ck-dropdown__button {\n\t\twidth: 100%;\n\n\t\t/* Disable main button's tooltip when the dropdown is open. Otherwise the panel may\n\t\tpartially cover the tooltip */\n\t\t&.ck-on {\n\t\t\t@mixin ck-tooltip_disabled;\n\t\t}\n\t}\n\n\t& .ck-dropdown__panel {\n\t\t/* This is to get rid of flickering when the tooltip is shown under the panel,\n\t\twhich looks like the panel moves vertically a pixel down and up. */\n\t\t-webkit-backface-visibility: hidden;\n\n\t\tdisplay: none;\n\t\tz-index: var(--ck-z-modal);\n\t\tmax-width: var(--ck-dropdown-max-width);\n\n\t\tposition: absolute;\n\n\t\t&.ck-dropdown__panel-visible {\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\t&.ck-dropdown__panel_ne,\n\t\t&.ck-dropdown__panel_nw,\n\t\t&.ck-dropdown__panel_n,\n\t\t&.ck-dropdown__panel_nmw,\n\t\t&.ck-dropdown__panel_nme {\n\t\t\tbottom: 100%;\n\t\t}\n\n\t\t&.ck-dropdown__panel_se,\n\t\t&.ck-dropdown__panel_sw,\n\t\t&.ck-dropdown__panel_smw,\n\t\t&.ck-dropdown__panel_sme,\n\t\t&.ck-dropdown__panel_s {\n\t\t\t/*\n\t\t\t * Using transform: translate3d( 0, 100%, 0 ) causes blurry dropdown on Chrome 67-78+ on non-retina displays.\n\t\t\t * See https://github.com/ckeditor/ckeditor5/issues/1053.\n\t\t\t */\n\t\t\ttop: 100%;\n\t\t\tbottom: auto;\n\t\t}\n\n\t\t&.ck-dropdown__panel_ne,\n\t\t&.ck-dropdown__panel_se {\n\t\t\tleft: 0px;\n\t\t}\n\n\t\t&.ck-dropdown__panel_nw,\n\t\t&.ck-dropdown__panel_sw {\n\t\t\tright: 0px;\n\t\t}\n\n\t\t&.ck-dropdown__panel_s,\n\t\t&.ck-dropdown__panel_n {\n\t\t\t/* Positioning panels relative to the center of the button */\n\t\t\tleft: 50%;\n\t\t\ttransform: translateX(-50%);\n\t\t}\n\n\t\t&.ck-dropdown__panel_nmw,\n\t\t&.ck-dropdown__panel_smw {\n\t\t\t/* Positioning panels relative to the middle-west of the button */\n\t\t\tleft: 75%;\n\t\t\ttransform: translateX(-75%);\n\t\t}\n\n\t\t&.ck-dropdown__panel_nme,\n\t\t&.ck-dropdown__panel_sme {\n\t\t\t/* Positioning panels relative to the middle-east of the button */\n\t\t\tleft: 25%;\n\t\t\ttransform: translateX(-25%);\n\t\t}\n\t}\n}\n\n/*\n * Toolbar dropdown panels should be always above the UI (eg. other dropdown panels) from the editor's content.\n * See https://github.com/ckeditor/ckeditor5/issues/7874\n */\n.ck.ck-toolbar .ck-dropdown__panel {\n\tz-index: calc( var(--ck-z-modal) + 1 );\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Enables the tooltip, which is the tooltip is in DOM but\n * not yet displayed.\n */\n@define-mixin ck-tooltip_enabled {\n\t& .ck-tooltip {\n\t\tdisplay: block;\n\n\t\t/*\n\t\t * Don't display tooltips in devices which don't support :hover.\n\t\t * In fact, it's all about iOS, which forces user to click UI elements twice to execute\n\t\t * the primary action, when tooltips are enabled.\n\t\t *\n\t\t * Q: OK, but why not the following query?\n\t\t *\n\t\t *   @media (hover) {\n\t\t *       display: block;\n\t\t *   }\n\t\t *\n\t\t * A: Because FF does not support it and it would completely disable tooltips\n\t\t * in that browser.\n\t\t *\n\t\t * More in https://github.com/ckeditor/ckeditor5/issues/920.\n\t\t */\n\t\t@media (hover:none) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n/**\n * Disables the tooltip making it disappear from DOM.\n */\n@define-mixin ck-tooltip_disabled {\n\t& .ck-tooltip {\n\t\tdisplay: none;\n\t}\n}\n\n/**\n * Shows the tooltip, which is already in DOM.\n * Requires `ck-tooltip_enabled` first.\n */\n@define-mixin ck-tooltip_visible {\n\t& .ck-tooltip {\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_disabled.css";\n@import "../../../mixins/_shadow.css";\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n:root {\n\t--ck-dropdown-arrow-size: calc(0.5 * var(--ck-icon-size));\n}\n\n.ck.ck-dropdown {\n\t/* Enable font size inheritance, which allows fluid UI scaling. */\n\tfont-size: inherit;\n\n\t& .ck-dropdown__arrow {\n\t\twidth: var(--ck-dropdown-arrow-size);\n\t}\n\n\t@mixin ck-dir ltr {\n\t\t& .ck-dropdown__arrow {\n\t\t\tright: var(--ck-spacing-standard);\n\n\t\t\t/* A space to accommodate the triangle. */\n\t\t\tmargin-left: var(--ck-spacing-standard);\n\t\t}\n\t}\n\n\t@mixin ck-dir rtl {\n\t\t& .ck-dropdown__arrow {\n\t\t\tleft: var(--ck-spacing-standard);\n\n\t\t\t/* A space to accommodate the triangle. */\n\t\t\tmargin-right: var(--ck-spacing-small);\n\t\t}\n\t}\n\n\t&.ck-disabled .ck-dropdown__arrow {\n\t\t@mixin ck-disabled;\n\t}\n\n\t& .ck-button.ck-dropdown__button {\n\t\t@mixin ck-dir ltr {\n\t\t\t&:not(.ck-button_with-text) {\n\t\t\t\t/* Make sure dropdowns with just an icon have the right inner spacing */\n\t\t\t\tpadding-left: var(--ck-spacing-small);\n\t\t\t}\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\t&:not(.ck-button_with-text) {\n\t\t\t\t/* Make sure dropdowns with just an icon have the right inner spacing */\n\t\t\t\tpadding-right: var(--ck-spacing-small);\n\t\t\t}\n\t\t}\n\n\t\t/* #23 */\n\t\t& .ck-button__label {\n\t\t\twidth: 7em;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t}\n\n\t\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/70 */\n\t\t&.ck-disabled .ck-button__label {\n\t\t\t@mixin ck-disabled;\n\t\t}\n\n\t\t/* https://github.com/ckeditor/ckeditor5/issues/816 */\n\t\t&.ck-on {\n\t\t\tborder-bottom-left-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\t}\n\n\t\t&.ck-dropdown__button_label-width_auto .ck-button__label {\n\t\t\twidth: auto;\n\t\t}\n\n\t\t/* https://github.com/ckeditor/ckeditor5/issues/8699 */\n\t\t&.ck-off:active,\n\t\t&.ck-on:active {\n\t\t\tbox-shadow: none;\n\t\t\t\n\t\t\t&:focus {\n\t\t\t\t@mixin ck-box-shadow var(--ck-focus-outer-shadow);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.ck.ck-dropdown__panel {\n\t@mixin ck-rounded-corners;\n\t@mixin ck-drop-shadow;\n\n\tbackground: var(--ck-color-dropdown-panel-background);\n\tborder: 1px solid var(--ck-color-dropdown-panel-border);\n\tbottom: 0;\n\n\t/* Make sure the panel is at least as wide as the drop-down\'s button. */\n\tmin-width: 100%;\n\n\t/* Disabled corner border radius to be consistent with the .dropdown__button\n\thttps://github.com/ckeditor/ckeditor5/issues/816 */\n\t&.ck-dropdown__panel_se {\n\t\tborder-top-left-radius: 0;\n\t}\n\n\t&.ck-dropdown__panel_sw {\n\t\tborder-top-right-radius: 0;\n\t}\n\n\t&.ck-dropdown__panel_ne {\n\t\tborder-bottom-left-radius: 0;\n\t}\n\n\t&.ck-dropdown__panel_nw {\n\t\tborder-bottom-right-radius: 0;\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A class which indicates that an element holding it is disabled.\n */\n@define-mixin ck-disabled {\n\topacity: var(--ck-disabled-opacity);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},875:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-bottom-left-radius:0;border-bottom-right-radius:0;border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/dropdown/listdropdown.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAOA,6CCIC,eDqBD,CAzBA,iICQE,qCAAsC,CDJtC,wBAqBF,CAfE,mFCND,eDYC,CANA,6MCFA,qCAAsC,CDKpC,2BAA4B,CAC5B,4BAA6B,CAF7B,wBAIF,CAEA,kFCdD,eDmBC,CALA,2MCVA,qCAAsC,CDYpC,wBAAyB,CACzB,yBAEF",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n\n.ck.ck-dropdown .ck-dropdown__panel .ck-list {\n\t/* Disabled radius of top-left border to be consistent with .dropdown__button\n\thttps://github.com/ckeditor/ckeditor5/issues/816 */\n\t@mixin ck-rounded-corners {\n\t\tborder-top-left-radius: 0;\n\t}\n\n\t/* Make sure the button belonging to the first/last child of the list goes well with the\n\tborder radius of the entire panel. */\n\t& .ck-list__item {\n\t\t&:first-child .ck-button {\n\t\t\t@mixin ck-rounded-corners {\n\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t}\n\t\t}\n\n\t\t&:last-child .ck-button {\n\t\t\t@mixin ck-rounded-corners {\n\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\tborder-top-right-radius: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},66:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,'.ck.ck-splitbutton{font-size:inherit}.ck.ck-splitbutton .ck-splitbutton__action:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button .ck-tooltip{display:none}:root{--ck-color-split-button-hover-background:#ebebeb;--ck-color-split-button-hover-border:#b3b3b3}[dir=ltr] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__action,[dir=ltr] .ck.ck-splitbutton:hover>.ck-splitbutton__action{border-bottom-right-radius:unset;border-top-right-radius:unset}[dir=rtl] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__action,[dir=rtl] .ck.ck-splitbutton:hover>.ck-splitbutton__action{border-bottom-left-radius:unset;border-top-left-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow{min-width:unset}[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-bottom-left-radius:unset;border-top-left-radius:unset}[dir=rtl] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-bottom-right-radius:unset;border-top-right-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow svg{width:var(--ck-dropdown-arrow-size)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover),.ck.ck-splitbutton:hover>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover){background:var(--ck-color-split-button-hover-background)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled):after,.ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled):after{background-color:var(--ck-color-split-button-hover-border);content:"";height:100%;position:absolute;width:1px}[dir=ltr] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled):after,[dir=ltr] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled):after{left:-1px}[dir=rtl] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled):after,[dir=rtl] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled):after{right:-1px}.ck.ck-splitbutton.ck-splitbutton_open{border-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__action,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__action{border-bottom-left-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__arrow{border-bottom-right-radius:0}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/splitbutton.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/mixins/_tooltip.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/dropdown/splitbutton.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAOA,mBAEC,iBAUD,CARC,iDACC,qCACD,CC0BA,8DACC,YACD,CClCD,MACC,gDAAyD,CACzD,4CACD,CAMC,oIAKE,gCAAiC,CADjC,6BASF,CAbA,oIAWE,+BAAgC,CADhC,4BAGF,CAEA,0CAGC,eAiBD,CApBA,oDAQE,+BAAgC,CADhC,4BAaF,CApBA,oDAcE,gCAAiC,CADjC,6BAOF,CAHC,8CACC,mCACD,CASA,0KACC,wDACD,CAIA,8JAKC,0DAA2D,CAJ3D,UAAW,CAGX,WAAY,CAFZ,iBAAkB,CAClB,SAGD,CAGC,kLACC,SACD,CAIA,kLACC,UACD,CAMF,uCC7EA,eDuFA,CAVA,qHCzEC,qCDmFD,CARE,qKACC,2BACD,CAEA,mKACC,4BACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../tooltip/mixins/_tooltip.css";\n\n.ck.ck-splitbutton {\n\t/* Enable font size inheritance, which allows fluid UI scaling. */\n\tfont-size: inherit;\n\n\t& .ck-splitbutton__action:focus {\n\t\tz-index: calc(var(--ck-z-default) + 1);\n\t}\n\n\t/* Disable tooltips for the buttons when the button is "open" */\n\t&.ck-splitbutton_open > .ck-button {\n\t\t@mixin ck-tooltip_disabled;\n\t}\n}\n\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Enables the tooltip, which is the tooltip is in DOM but\n * not yet displayed.\n */\n@define-mixin ck-tooltip_enabled {\n\t& .ck-tooltip {\n\t\tdisplay: block;\n\n\t\t/*\n\t\t * Don't display tooltips in devices which don't support :hover.\n\t\t * In fact, it's all about iOS, which forces user to click UI elements twice to execute\n\t\t * the primary action, when tooltips are enabled.\n\t\t *\n\t\t * Q: OK, but why not the following query?\n\t\t *\n\t\t *   @media (hover) {\n\t\t *       display: block;\n\t\t *   }\n\t\t *\n\t\t * A: Because FF does not support it and it would completely disable tooltips\n\t\t * in that browser.\n\t\t *\n\t\t * More in https://github.com/ckeditor/ckeditor5/issues/920.\n\t\t */\n\t\t@media (hover:none) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n/**\n * Disables the tooltip making it disappear from DOM.\n */\n@define-mixin ck-tooltip_disabled {\n\t& .ck-tooltip {\n\t\tdisplay: none;\n\t}\n}\n\n/**\n * Shows the tooltip, which is already in DOM.\n * Requires `ck-tooltip_enabled` first.\n */\n@define-mixin ck-tooltip_visible {\n\t& .ck-tooltip {\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n\n:root {\n\t--ck-color-split-button-hover-background: hsl(0, 0%, 92%);\n\t--ck-color-split-button-hover-border: hsl(0, 0%, 70%);\n}\n\n.ck.ck-splitbutton {\n\t/*\n\t * Note: ck-rounded and ck-dir mixins don\'t go together (because they both use @nest).\n\t */\n\t&:hover > .ck-splitbutton__action,\n\t&.ck-splitbutton_open > .ck-splitbutton__action {\n\t\t@nest [dir="ltr"] & {\n\t\t\t/* Don\'t round the action button on the right side */\n\t\t\tborder-top-right-radius: unset;\n\t\t\tborder-bottom-right-radius: unset;\n\t\t}\n\n\t\t@nest [dir="rtl"] & {\n\t\t\t/* Don\'t round the action button on the left side */\n\t\t\tborder-top-left-radius: unset;\n\t\t\tborder-bottom-left-radius: unset;\n\t\t}\n\t}\n\n\t& > .ck-splitbutton__arrow {\n\t\t/* It\'s a text-less button and since the icon is positioned absolutely in such situation,\n\t\tit must get some arbitrary min-width. */\n\t\tmin-width: unset;\n\n\t\t@nest [dir="ltr"] & {\n\t\t\t/* Don\'t round the arrow button on the left side */\n\t\t\tborder-top-left-radius: unset;\n\t\t\tborder-bottom-left-radius: unset;\n\t\t}\n\n\t\t@nest [dir="rtl"] & {\n\t\t\t/* Don\'t round the arrow button on the right side */\n\t\t\tborder-top-right-radius: unset;\n\t\t\tborder-bottom-right-radius: unset;\n\t\t}\n\n\t\t& svg {\n\t\t\twidth: var(--ck-dropdown-arrow-size);\n\t\t}\n\t}\n\n\t/* When the split button is "open" (the arrow is on) or being hovered, it should get some styling\n\tas a whole. The background of both buttons should stand out and there should be a visual\n\tseparation between both buttons. */\n\t&.ck-splitbutton_open,\n\t&:hover {\n\t\t/* When the split button hovered as a whole, not as individual buttons. */\n\t\t& > .ck-button:not(.ck-on):not(.ck-disabled):not(:hover) {\n\t\t\tbackground: var(--ck-color-split-button-hover-background);\n\t\t}\n\n\t\t/* Splitbutton separator needs to be set with the ::after pseudoselector\n\t\tto display properly the borders on focus */\n\t\t& > .ck-splitbutton__arrow:not(.ck-disabled)::after {\n\t\t\tcontent: \'\';\n\t\t\tposition: absolute;\n\t\t\twidth: 1px;\n\t\t\theight: 100%;\n\t\t\tbackground-color: var(--ck-color-split-button-hover-border);\n\t\t}\n\n\t\t@nest [dir="ltr"] & {\n\t\t\t& > .ck-splitbutton__arrow:not(.ck-disabled)::after {\n\t\t\t\tleft: -1px;\n\t\t\t}\n\t\t}\n\n\t\t@nest [dir="rtl"] & {\n\t\t\t& > .ck-splitbutton__arrow:not(.ck-disabled)::after {\n\t\t\t\tright: -1px;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Don\'t round the bottom left and right corners of the buttons when "open"\n\thttps://github.com/ckeditor/ckeditor5/issues/816 */\n\t&.ck-splitbutton_open {\n\t\t@mixin ck-rounded-corners {\n\t\t\t& > .ck-splitbutton__action {\n\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t}\n\n\t\t\t& > .ck-splitbutton__arrow {\n\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},75:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,":root{--ck-toolbar-dropdown-max-width:60vw}.ck.ck-toolbar-dropdown>.ck-dropdown__panel{max-width:var(--ck-toolbar-dropdown-max-width);width:max-content}.ck.ck-toolbar-dropdown>.ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/dropdown/toolbardropdown.css"],names:[],mappings:"AAKA,MACC,oCACD,CAEA,4CAGC,8CAA+C,CAD/C,iBAQD,CAJE,6DACC,qCACD,CCZF,oCACC,QACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-toolbar-dropdown-max-width: 60vw;\n}\n\n.ck.ck-toolbar-dropdown > .ck-dropdown__panel {\n\t/* https://github.com/ckeditor/ckeditor5/issues/5586 */\n\twidth: max-content;\n\tmax-width: var(--ck-toolbar-dropdown-max-width);\n\n\t& .ck-button {\n\t\t&:focus {\n\t\t\tz-index: calc(var(--ck-z-default) + 1);\n\t\t}\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-toolbar-dropdown .ck-toolbar {\n\tborder: 0;\n}\n"],sourceRoot:""}]);var c=a;},547:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,":root{--ck-color-editable-blur-selection:#d9d9d9}.ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0;outline:none}.ck.ck-editor__editable_inline{border:1px solid transparent;overflow:auto;padding:0 var(--ck-spacing-standard)}.ck.ck-editor__editable_inline[dir=ltr]{text-align:left}.ck.ck-editor__editable_inline[dir=rtl]{text-align:right}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-editor__editable_inline.ck-blurred ::selection{background:var(--ck-color-editable-blur-selection)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/editorui/editorui.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_focus.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AAWA,MACC,0CACD,CAEA,yDCJC,eDWD,CAPA,yJCAE,qCDOF,CAJC,oEEPA,2BAA2B,CCF3B,qCAA8B,CDC9B,YFWA,CAGD,+BAGC,4BAA6B,CAF7B,aAAc,CACd,oCA6BD,CA1BC,wCACC,eACD,CAEA,wCACC,gBACD,CAGA,4CACC,kCACD,CAGA,2CAKC,qCACD,CAGA,sDACC,kDACD,CAKA,gEACC,mDACD,CAIA,gEACC,gDACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_disabled.css";\n@import "../../../mixins/_shadow.css";\n@import "../../../mixins/_focus.css";\n@import "../../mixins/_button.css";\n\n:root {\n\t--ck-color-editable-blur-selection: hsl(0, 0%, 85%);\n}\n\n.ck.ck-editor__editable:not(.ck-editor__nested-editable) {\n\t@mixin ck-rounded-corners;\n\n\t&.ck-focused {\n\t\t@mixin ck-focus-ring;\n\t\t@mixin ck-box-shadow var(--ck-inner-shadow);\n\t}\n}\n\n.ck.ck-editor__editable_inline {\n\toverflow: auto;\n\tpadding: 0 var(--ck-spacing-standard);\n\tborder: 1px solid transparent;\n\n\t&[dir="ltr"] {\n\t\ttext-align: left;\n\t}\n\n\t&[dir="rtl"] {\n\t\ttext-align: right;\n\t}\n\n\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/116 */\n\t& > *:first-child {\n\t\tmargin-top: var(--ck-spacing-large);\n\t}\n\n\t/* https://github.com/ckeditor/ckeditor5/issues/847 */\n\t& > *:last-child {\n\t\t/*\n\t\t * This value should match with the default margins of the block elements (like .media or .image)\n\t\t * to avoid a content jumping when the fake selection container shows up (See https://github.com/ckeditor/ckeditor5/issues/9825).\n\t\t */\n\t\tmargin-bottom: var(--ck-spacing-large);\n\t}\n\n\t/* https://github.com/ckeditor/ckeditor5/issues/6517 */\n\t&.ck-blurred ::selection {\n\t\tbackground: var(--ck-color-editable-blur-selection);\n\t}\n}\n\n/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/111 */\n.ck.ck-balloon-panel.ck-toolbar-container[class*="arrow_n"] {\n\t&::after {\n\t\tborder-bottom-color: var(--ck-color-base-foreground);\n\t}\n}\n\n.ck.ck-balloon-panel.ck-toolbar-container[class*="arrow_s"] {\n\t&::after {\n\t\tborder-top-color: var(--ck-color-base-foreground);\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A visual style of focused element's border.\n */\n@define-mixin ck-focus-ring {\n\t/* Disable native outline. */\n\toutline: none;\n\tborder: var(--ck-focus-ring)\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},523:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-form__header{align-items:center;display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between}:root{--ck-form-header-height:38px}.ck.ck-form__header{border-bottom:1px solid var(--ck-color-base-border);height:var(--ck-form-header-height);line-height:var(--ck-form-header-height);padding:var(--ck-spacing-small) var(--ck-spacing-large)}.ck.ck-form__header .ck-form__header__label{font-weight:700}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/formheader/formheader.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/formheader/formheader.css"],names:[],mappings:"AAKA,oBAIC,kBAAmB,CAHnB,YAAa,CACb,kBAAmB,CACnB,gBAAiB,CAEjB,6BACD,CCNA,MACC,4BACD,CAEA,oBAIC,mDAAoD,CAFpD,mCAAoC,CACpC,wCAAyC,CAFzC,uDAQD,CAHC,4CACC,eACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-form__header {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-form-header-height: 38px;\n}\n\n.ck.ck-form__header {\n\tpadding: var(--ck-spacing-small) var(--ck-spacing-large);\n\theight: var(--ck-form-header-height);\n\tline-height: var(--ck-form-header-height);\n\tborder-bottom: 1px solid var(--ck-color-base-border);\n\n\t& .ck-form__header__label {\n\t\tfont-weight: bold;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},174:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{font-size:.8333350694em;height:var(--ck-icon-size);width:var(--ck-icon-size);will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/icon/icon.css"],names:[],mappings:"AAKA,YACC,qBACD,CCFA,MACC,0EACD,CAEA,YAKC,uBAAwB,CAHxB,0BAA2B,CAD3B,yBAA0B,CAY1B,qBAcD,CAZC,0BARA,aAAc,CAGd,cAgBA,CAJC,yBAEC,iBACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-icon {\n\tvertical-align: middle;\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-icon-size: calc(var(--ck-line-height-base) * var(--ck-font-size-normal));\n}\n\n.ck.ck-icon {\n\twidth: var(--ck-icon-size);\n\theight: var(--ck-icon-size);\n\n\t/* Multiplied by the height of the line in "px" should give SVG "viewport" dimensions */\n\tfont-size: .8333350694em;\n\n\tcolor: inherit;\n\n\t/* Inherit cursor style (#5). */\n\tcursor: inherit;\n\n\t/* This will prevent blurry icons on Firefox. See #340. */\n\twill-change: transform;\n\n\t& * {\n\t\t/* Inherit cursor style (#5). */\n\t\tcursor: inherit;\n\n\t\t/* Allows dynamic coloring of the icons. */\n\t\tcolor: inherit;\n\n\t\t&:not([fill]) {\n\t\t\t/* Needed by FF. */\n\t\t\tfill: currentColor;\n\t\t}\n\t}\n}\n'],sourceRoot:""}]);var c=a;},985:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,":root{--ck-input-width:18em;--ck-input-text-width:var(--ck-input-width)}.ck.ck-input{border-radius:0}.ck-rounded-corners .ck.ck-input,.ck.ck-input.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-input{background:var(--ck-color-input-background);border:1px solid var(--ck-color-input-border);min-height:var(--ck-ui-component-min-height);min-width:var(--ck-input-width);padding:var(--ck-spacing-extra-tiny) var(--ck-spacing-medium);transition:box-shadow .1s ease-in-out,border .1s ease-in-out}.ck.ck-input:focus{border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0;outline:none}.ck.ck-input[readonly]{background:var(--ck-color-input-disabled-background);border:1px solid var(--ck-color-input-disabled-border);color:var(--ck-color-input-disabled-text)}.ck.ck-input[readonly]:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-input.ck-error{animation:ck-input-shake .3s ease both;border-color:var(--ck-color-input-error-border)}.ck.ck-input.ck-error:focus{box-shadow:var(--ck-focus-error-outer-shadow),0 0}@keyframes ck-input-shake{20%{transform:translateX(-2px)}40%{transform:translateX(2px)}60%{transform:translateX(-1px)}80%{transform:translateX(1px)}}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/input/input.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_focus.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AASA,MACC,qBAAsB,CAGtB,2CACD,CAEA,aCLC,eD2CD,CAtCA,iECDE,qCDuCF,CAtCA,aAGC,2CAA4C,CAC5C,6CAA8C,CAK9C,4CAA6C,CAH7C,+BAAgC,CADhC,6DAA8D,CAO9D,4DA0BD,CAxBC,mBEnBA,2BAA2B,CCF3B,2CAA8B,CDC9B,YFuBA,CAEA,uBAEC,oDAAqD,CADrD,sDAAuD,CAEvD,yCAMD,CAJC,6BG/BD,oDHkCC,CAGD,sBAEC,sCAAuC,CADvC,+CAMD,CAHC,4BGzCD,iDH2CC,CAIF,0BACC,IACC,0BACD,CAEA,IACC,yBACD,CAEA,IACC,0BACD,CAEA,IACC,yBACD,CACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_focus.css";\n@import "../../../mixins/_shadow.css";\n\n:root {\n\t--ck-input-width: 18em;\n\n\t/* Backward compatibility. */\n\t--ck-input-text-width: var(--ck-input-width);\n}\n\n.ck.ck-input {\n\t@mixin ck-rounded-corners;\n\n\tbackground: var(--ck-color-input-background);\n\tborder: 1px solid var(--ck-color-input-border);\n\tpadding: var(--ck-spacing-extra-tiny) var(--ck-spacing-medium);\n\tmin-width: var(--ck-input-width);\n\n\t/* This is important to stay of the same height as surrounding buttons */\n\tmin-height: var(--ck-ui-component-min-height);\n\n\t/* Apply some smooth transition to the box-shadow and border. */\n\ttransition: box-shadow .1s ease-in-out, border .1s ease-in-out;\n\n\t&:focus {\n\t\t@mixin ck-focus-ring;\n\t\t@mixin ck-box-shadow var(--ck-focus-outer-shadow);\n\t}\n\n\t&[readonly] {\n\t\tborder: 1px solid var(--ck-color-input-disabled-border);\n\t\tbackground: var(--ck-color-input-disabled-background);\n\t\tcolor: var(--ck-color-input-disabled-text);\n\n\t\t&:focus {\n\t\t\t/* The read-only input should have a slightly less visible shadow when focused. */\n\t\t\t@mixin ck-box-shadow var(--ck-focus-disabled-outer-shadow);\n\t\t}\n\t}\n\n\t&.ck-error {\n\t\tborder-color: var(--ck-color-input-error-border);\n\t\tanimation: ck-input-shake .3s ease both;\n\n\t\t&:focus {\n\t\t\t@mixin ck-box-shadow var(--ck-focus-error-outer-shadow);\n\t\t}\n\t}\n}\n\n@keyframes ck-input-shake {\n\t20% {\n\t\ttransform: translateX(-2px);\n\t}\n\n\t40% {\n\t\ttransform: translateX(2px);\n\t}\n\n\t60% {\n\t\ttransform: translateX(-1px);\n\t}\n\n\t80% {\n\t\ttransform: translateX(1px);\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A visual style of focused element's border.\n */\n@define-mixin ck-focus-ring {\n\t/* Disable native outline. */\n\toutline: none;\n\tborder: var(--ck-focus-ring)\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},751:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/label/label.css"],names:[],mappings:"AAKA,aACC,aACD,CAEA,mBACC,YACD,CCNA,aACC,eACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-label {\n\tdisplay: block;\n}\n\n.ck.ck-voice-label {\n\tdisplay: none;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-label {\n\tfont-weight: bold;\n}\n"],sourceRoot:""}]);var c=a;},111:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper{display:flex;position:relative}.ck.ck-labeled-field-view .ck.ck-label{display:block;position:absolute}:root{--ck-labeled-field-view-transition:.1s cubic-bezier(0,0,0.24,0.95);--ck-labeled-field-empty-unfocused-max-width:100% - 2 * var(--ck-spacing-medium);--ck-color-labeled-field-label-background:var(--ck-color-base-background)}.ck.ck-labeled-field-view{border-radius:0}.ck-rounded-corners .ck.ck-labeled-field-view,.ck.ck-labeled-field-view.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper{width:100%}.ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{top:0}[dir=ltr] .ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{left:0}[dir=rtl] .ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{right:0}.ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{background:var(--ck-color-labeled-field-label-background);font-weight:400;line-height:normal;max-width:100%;overflow:hidden;padding:0 calc(var(--ck-font-size-tiny)*.5);pointer-events:none;text-overflow:ellipsis;transform:translate(var(--ck-spacing-medium),-6px) scale(.75);transform-origin:0 0;transition:transform var(--ck-labeled-field-view-transition),padding var(--ck-labeled-field-view-transition),background var(--ck-labeled-field-view-transition)}.ck.ck-labeled-field-view.ck-error .ck-input:not([readonly])+.ck.ck-label,.ck.ck-labeled-field-view.ck-error>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{color:var(--ck-color-base-error)}.ck.ck-labeled-field-view .ck-labeled-field-view__status{font-size:var(--ck-font-size-small);margin-top:var(--ck-spacing-small);white-space:normal}.ck.ck-labeled-field-view .ck-labeled-field-view__status.ck-labeled-field-view__status_error{color:var(--ck-color-base-error)}.ck.ck-labeled-field-view.ck-disabled>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label,.ck.ck-labeled-field-view.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused)>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{color:var(--ck-color-input-disabled-text)}[dir=ltr] .ck.ck-labeled-field-view.ck-disabled.ck-labeled-field-view_empty>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label,[dir=ltr] .ck.ck-labeled-field-view.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder)>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{transform:translate(var(--ck-spacing-medium),calc(var(--ck-font-size-base)*.6)) scale(1)}[dir=rtl] .ck.ck-labeled-field-view.ck-disabled.ck-labeled-field-view_empty>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label,[dir=rtl] .ck.ck-labeled-field-view.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder)>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{transform:translate(calc(var(--ck-spacing-medium)*-1),calc(var(--ck-font-size-base)*.6)) scale(1)}.ck.ck-labeled-field-view.ck-disabled.ck-labeled-field-view_empty>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label,.ck.ck-labeled-field-view.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder)>.ck.ck-labeled-field-view__input-wrapper>.ck.ck-label{background:transparent;max-width:calc(var(--ck-labeled-field-empty-unfocused-max-width));padding:0}.ck.ck-labeled-field-view>.ck.ck-labeled-field-view__input-wrapper>.ck-dropdown>.ck.ck-button{background:transparent}.ck.ck-labeled-field-view.ck-labeled-field-view_empty>.ck.ck-labeled-field-view__input-wrapper>.ck-dropdown>.ck-button>.ck-button__label{opacity:0}.ck.ck-labeled-field-view.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder)>.ck.ck-labeled-field-view__input-wrapper>.ck-dropdown+.ck-label{max-width:calc(var(--ck-labeled-field-empty-unfocused-max-width) - var(--ck-dropdown-arrow-size) - var(--ck-spacing-standard))}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/labeledfield/labeledfieldview.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/labeledfield/labeledfieldview.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAMC,mEACC,YAAa,CACb,iBACD,CAEA,uCACC,aAAc,CACd,iBACD,CCND,MACC,kEAAsE,CACtE,gFAAiF,CACjF,yEACD,CAEA,0BCHC,eD4GD,CAzGA,2FCCE,qCDwGF,CAtGC,mEACC,UAmCD,CAjCC,gFACC,KA+BD,CAhCA,0FAIE,MA4BF,CAhCA,0FAQE,OAwBF,CAhCA,gFAiBC,yDAA0D,CAG1D,eAAmB,CADnB,kBAAoB,CAOpB,cAAe,CAFf,eAAgB,CANhB,2CAA8C,CAP9C,mBAAoB,CAYpB,sBAAuB,CARvB,6DAA+D,CAH/D,oBAAqB,CAgBrB,+JAID,CAQA,mKACC,gCACD,CAGD,yDACC,mCAAoC,CACpC,kCAAmC,CAInC,kBAKD,CAHC,6FACC,gCACD,CAID,4OAEC,yCACD,CAIA,oUAGE,wFAYF,CAfA,oUAOE,iGAQF,CAfA,gTAaC,sBAAuB,CAFvB,iEAAkE,CAGlE,SACD,CAKA,8FACC,sBACD,CAGA,yIACC,SACD,CAGA,kMACC,8HACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-labeled-field-view {\n\t& > .ck.ck-labeled-field-view__input-wrapper {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t}\n\n\t& .ck.ck-label {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n@import "../../../mixins/_rounded.css";\n\n:root {\n\t--ck-labeled-field-view-transition: .1s cubic-bezier(0, 0, 0.24, 0.95);\n\t--ck-labeled-field-empty-unfocused-max-width: 100% - 2 * var(--ck-spacing-medium);\n\t--ck-color-labeled-field-label-background: var(--ck-color-base-background);\n}\n\n.ck.ck-labeled-field-view {\n\t@mixin ck-rounded-corners;\n\n\t& > .ck.ck-labeled-field-view__input-wrapper {\n\t\twidth: 100%;\n\n\t\t& > .ck.ck-label {\n\t\t\ttop: 0px;\n\n\t\t\t@mixin ck-dir ltr {\n\t\t\t\tleft: 0px;\n\t\t\t}\n\n\t\t\t@mixin ck-dir rtl {\n\t\t\t\tright: 0px;\n\t\t\t}\n\n\t\t\tpointer-events: none;\n\t\t\ttransform-origin: 0 0;\n\n\t\t\t/* By default, display the label scaled down above the field. */\n\t\t\ttransform: translate(var(--ck-spacing-medium), -6px) scale(.75);\n\n\t\t\tbackground: var(--ck-color-labeled-field-label-background);\n\t\t\tpadding: 0 calc(.5 * var(--ck-font-size-tiny));\n\t\t\tline-height: initial;\n\t\t\tfont-weight: normal;\n\n\t\t\t/* Prevent overflow when the label is longer than the input */\n\t\t\ttext-overflow: ellipsis;\n\t\t\toverflow: hidden;\n\n\t\t\tmax-width: 100%;\n\n\t\t\ttransition:\n\t\t\t\ttransform var(--ck-labeled-field-view-transition),\n\t\t\t\tpadding var(--ck-labeled-field-view-transition),\n\t\t\t\tbackground var(--ck-labeled-field-view-transition);\n\t\t}\n\t}\n\n\t&.ck-error {\n\t\t& > .ck.ck-labeled-field-view__input-wrapper > .ck.ck-label {\n\t\t\tcolor: var(--ck-color-base-error);\n\t\t}\n\n\t\t& .ck-input:not([readonly]) + .ck.ck-label {\n\t\t\tcolor: var(--ck-color-base-error);\n\t\t}\n\t}\n\n\t& .ck-labeled-field-view__status {\n\t\tfont-size: var(--ck-font-size-small);\n\t\tmargin-top: var(--ck-spacing-small);\n\n\t\t/* Let the info wrap to the next line to avoid stretching the layout horizontally.\n\t\tThe status could be very long. */\n\t\twhite-space: normal;\n\n\t\t&.ck-labeled-field-view__status_error {\n\t\t\tcolor: var(--ck-color-base-error);\n\t\t}\n\t}\n\n\t/* Disabled fields and fields that have no focus should fade out. */\n\t&.ck-disabled > .ck.ck-labeled-field-view__input-wrapper > .ck.ck-label,\n\t&.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused) > .ck.ck-labeled-field-view__input-wrapper > .ck.ck-label {\n\t\tcolor: var(--ck-color-input-disabled-text);\n\t}\n\n\t/* Fields that are disabled or not focused and without a placeholder should have full-sized labels. */\n\t/* stylelint-disable-next-line no-descending-specificity */\n\t&.ck-disabled.ck-labeled-field-view_empty > .ck.ck-labeled-field-view__input-wrapper > .ck.ck-label,\n\t&.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder) > .ck.ck-labeled-field-view__input-wrapper > .ck.ck-label {\n\t\t@mixin ck-dir ltr {\n\t\t\ttransform: translate(var(--ck-spacing-medium), calc(0.6 * var(--ck-font-size-base))) scale(1);\n\t\t}\n\n\t\t@mixin ck-dir rtl {\n\t\t\ttransform: translate(calc(-1 * var(--ck-spacing-medium)), calc(0.6 * var(--ck-font-size-base))) scale(1);\n\t\t}\n\n\t\t/* Compensate for the default translate position. */\n\t\tmax-width: calc(var(--ck-labeled-field-empty-unfocused-max-width));\n\n\t\tbackground: transparent;\n\t\tpadding: 0;\n\t}\n\n\t/*------ DropdownView integration ----------------------------------------------------------------------------------- */\n\n\t/* Make sure dropdown\' background color in any of dropdown\'s state does not collide with labeled field. */\n\t& > .ck.ck-labeled-field-view__input-wrapper > .ck-dropdown > .ck.ck-button {\n\t\tbackground: transparent;\n\t}\n\n\t/* When the dropdown is "empty", the labeled field label replaces its label. */\n\t&.ck-labeled-field-view_empty > .ck.ck-labeled-field-view__input-wrapper > .ck-dropdown > .ck-button > .ck-button__label {\n\t\topacity: 0;\n\t}\n\n\t/* Make sure the label of the empty, unfocused input does not cover the dropdown arrow. */\n\t&.ck-labeled-field-view_empty:not(.ck-labeled-field-view_focused):not(.ck-labeled-field-view_placeholder) > .ck.ck-labeled-field-view__input-wrapper > .ck-dropdown + .ck-label {\n\t\tmax-width: calc(var(--ck-labeled-field-empty-unfocused-max-width) - var(--ck-dropdown-arrow-size) - var(--ck-spacing-standard));\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},162:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-list{display:flex;flex-direction:column;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{background:var(--ck-color-list-background);list-style-type:none}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{border-radius:0;min-height:unset;padding:calc(var(--ck-line-height-base)*.2*var(--ck-font-size-base)) calc(var(--ck-line-height-base)*.4*var(--ck-font-size-base));text-align:left;width:100%}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(var(--ck-line-height-base)*1.2*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:focus:not(.ck-disabled){border-color:var(--ck-color-base-background)}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{background:var(--ck-color-base-border);height:1px;width:100%}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/mixins/_unselectable.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/list/list.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAOA,YAGC,YAAa,CACb,qBAAsB,CCFtB,qBAAsB,CACtB,wBAAyB,CACzB,oBAAqB,CACrB,gBDaD,CAZC,2DAEC,aACD,CAKA,kCACC,iBAAkB,CAClB,2BACD,CEfD,YCEC,eDGD,CALA,+DCME,qCDDF,CALA,YAIC,0CAA2C,CAD3C,oBAED,CAEA,kBACC,cAAe,CACf,cA2DD,CAzDC,6BAIC,eAAgB,CAHhB,gBAAiB,CAQjB,iIAEiE,CARjE,eAAgB,CADhB,UAwCD,CA7BC,+CAEC,yEACD,CAEA,oCACC,eACD,CAEA,mCACC,oDAAqD,CACrD,yCAaD,CAXC,0CACC,eACD,CAEA,2DACC,0DACD,CAEA,2DACC,4CACD,CAGD,qDACC,uDACD,CAMA,yCACC,0CAA2C,CAC3C,aAMD,CAJC,iEACC,uDAAwD,CACxD,aACD,CAKH,uBAGC,sCAAuC,CAFvC,UAAW,CACX,UAED",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../mixins/_unselectable.css";\n\n.ck.ck-list {\n\t@mixin ck-unselectable;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t& .ck-list__item,\n\t& .ck-list__separator {\n\t\tdisplay: block;\n\t}\n\n\t/* Make sure that whatever child of the list item gets focus, it remains on the\n\ttop. Thanks to that, styles like box-shadow, outline, etc. are not masked by\n\tadjacent list items. */\n\t& .ck-list__item > *:focus {\n\t\tposition: relative;\n\t\tz-index: var(--ck-z-default);\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Makes element unselectable.\n */\n@define-mixin ck-unselectable {\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_disabled.css";\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_shadow.css";\n\n.ck.ck-list {\n\t@mixin ck-rounded-corners;\n\n\tlist-style-type: none;\n\tbackground: var(--ck-color-list-background);\n}\n\n.ck.ck-list__item {\n\tcursor: default;\n\tmin-width: 12em;\n\n\t& .ck-button {\n\t\tmin-height: unset;\n\t\twidth: 100%;\n\t\ttext-align: left;\n\t\tborder-radius: 0;\n\n\t\t/* List items should have the same height. Use absolute units to make sure it is so\n\t\t   because e.g. different heading styles may have different height\n\t\t   https://github.com/ckeditor/ckeditor5-heading/issues/63 */\n\t\tpadding:\n\t\t\tcalc(.2 * var(--ck-line-height-base) * var(--ck-font-size-base))\n\t\t\tcalc(.4 * var(--ck-line-height-base) * var(--ck-font-size-base));\n\n\t\t& .ck-button__label {\n\t\t\t/* https://github.com/ckeditor/ckeditor5-heading/issues/63 */\n\t\t\tline-height: calc(1.2 * var(--ck-line-height-base) * var(--ck-font-size-base));\n\t\t}\n\n\t\t&:active {\n\t\t\tbox-shadow: none;\n\t\t}\n\n\t\t&.ck-on {\n\t\t\tbackground: var(--ck-color-list-button-on-background);\n\t\t\tcolor: var(--ck-color-list-button-on-text);\n\n\t\t\t&:active {\n\t\t\t\tbox-shadow: none;\n\t\t\t}\n\n\t\t\t&:hover:not(.ck-disabled) {\n\t\t\t\tbackground: var(--ck-color-list-button-on-background-focus);\n\t\t\t}\n\n\t\t\t&:focus:not(.ck-disabled) {\n\t\t\t\tborder-color: var(--ck-color-base-background);\n\t\t\t}\n\t\t}\n\n\t\t&:hover:not(.ck-disabled) {\n\t\t\tbackground: var(--ck-color-list-button-hover-background);\n\t\t}\n\t}\n\n\t/* It\'s unnecessary to change the background/text of a switch toggle; it has different ways\n\tof conveying its state (like the switcher) */\n\t& .ck-switchbutton {\n\t\t&.ck-on {\n\t\t\tbackground: var(--ck-color-list-background);\n\t\t\tcolor: inherit;\n\n\t\t\t&:hover:not(.ck-disabled) {\n\t\t\t\tbackground: var(--ck-color-list-button-hover-background);\n\t\t\t\tcolor: inherit;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.ck.ck-list__separator {\n\theight: 1px;\n\twidth: 100%;\n\tbackground: var(--ck-color-base-border);\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},245:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,':root{--ck-balloon-panel-arrow-z-index:calc(var(--ck-z-default) - 3)}.ck.ck-balloon-panel{display:none;position:absolute;z-index:var(--ck-z-modal)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:"";position:absolute}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_n]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_n]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_s]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_s]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel.ck-balloon-panel_visible{display:block}:root{--ck-balloon-arrow-offset:2px;--ck-balloon-arrow-height:10px;--ck-balloon-arrow-half-width:8px;--ck-balloon-arrow-drop-shadow:0 2px 2px var(--ck-color-shadow-drop)}.ck.ck-balloon-panel{border-radius:0}.ck-rounded-corners .ck.ck-balloon-panel,.ck.ck-balloon-panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-balloon-panel{background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border);box-shadow:var(--ck-drop-shadow),0 0;min-height:15px}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{border-style:solid;height:0;width:0}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-width:0 var(--ck-balloon-arrow-half-width) var(--ck-balloon-arrow-height) var(--ck-balloon-arrow-half-width)}.ck.ck-balloon-panel[class*=arrow_n]:before{border-color:transparent transparent var(--ck-color-panel-border) transparent}.ck.ck-balloon-panel[class*=arrow_n]:after{border-color:transparent transparent var(--ck-color-panel-background) transparent;margin-top:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-width:var(--ck-balloon-arrow-height) var(--ck-balloon-arrow-half-width) 0 var(--ck-balloon-arrow-half-width)}.ck.ck-balloon-panel[class*=arrow_s]:before{border-color:var(--ck-color-panel-border) transparent transparent;filter:drop-shadow(var(--ck-balloon-arrow-drop-shadow))}.ck.ck-balloon-panel[class*=arrow_s]:after{border-color:var(--ck-color-panel-background) transparent transparent transparent;margin-bottom:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:calc(var(--ck-balloon-arrow-half-width)*-1);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{left:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{right:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:before{bottom:calc(var(--ck-balloon-arrow-height)*-1);left:50%;margin-left:calc(var(--ck-balloon-arrow-half-width)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{bottom:calc(var(--ck-balloon-arrow-height)*-1);left:calc(var(--ck-balloon-arrow-half-width)*2)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:before{bottom:calc(var(--ck-balloon-arrow-height)*-1);right:calc(var(--ck-balloon-arrow-half-width)*2)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:before{bottom:calc(var(--ck-balloon-arrow-height)*-1);margin-right:calc(var(--ck-balloon-arrow-half-width)*2);right:25%}.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:before{bottom:calc(var(--ck-balloon-arrow-height)*-1);left:25%;margin-left:calc(var(--ck-balloon-arrow-half-width)*2)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:before{margin-right:calc(var(--ck-balloon-arrow-half-width)*2);right:25%;top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:before{left:25%;margin-left:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/panel/balloonpanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AAKA,MAEC,8DACD,CAEA,qBACC,YAAa,CACb,iBAAkB,CAElB,yBAyCD,CAtCE,+GAEC,UAAW,CACX,iBACD,CAEA,wDACC,6CACD,CAEA,uDACC,uDACD,CAIA,4CACC,6CACD,CAEA,2CACC,uDACD,CAIA,4CACC,6CACD,CAEA,2CACC,uDACD,CAGD,8CACC,aACD,CC9CD,MACC,6BAA8B,CAC9B,8BAA+B,CAC/B,iCAAkC,CAClC,oEACD,CAEA,qBCJC,eD4ID,CAxIA,iFCAE,qCDwIF,CAxIA,qBAMC,2CAA4C,CAC5C,6CAA8C,CEb9C,oCAA8B,CFU9B,eAoID,CA9HE,+GAIC,kBAAmB,CADnB,QAAS,CADT,OAGD,CAIA,uFAEC,mHACD,CAEA,4CACC,6EACD,CAEA,2CACC,iFAAkF,CAClF,yCACD,CAIA,uFAEC,mHACD,CAEA,4CACC,iEAAkE,CAClE,uDACD,CAEA,2CACC,iFAAkF,CAClF,4CACD,CAIA,yGAEC,QAAS,CACT,uDAA0D,CAC1D,2CACD,CAIA,2GAEC,+CAAkD,CAClD,2CACD,CAIA,2GAEC,gDAAmD,CACnD,2CACD,CAIA,yGAIC,8CAAiD,CAFjD,QAAS,CACT,uDAED,CAIA,2GAGC,8CAAiD,CADjD,+CAED,CAIA,2GAGC,8CAAiD,CADjD,gDAED,CAIA,6GAIC,8CAAiD,CADjD,uDAA0D,CAD1D,SAGD,CAIA,6GAIC,8CAAiD,CAFjD,QAAS,CACT,sDAED,CAIA,6GAGC,uDAA0D,CAD1D,SAAU,CAEV,2CACD,CAIA,6GAEC,QAAS,CACT,sDAAyD,CACzD,2CACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t/* Make sure the balloon arrow does not float over its children. */\n\t--ck-balloon-panel-arrow-z-index: calc(var(--ck-z-default) - 3);\n}\n\n.ck.ck-balloon-panel {\n\tdisplay: none;\n\tposition: absolute;\n\n\tz-index: var(--ck-z-modal);\n\n\t&.ck-balloon-panel_with-arrow {\n\t\t&::before,\n\t\t&::after {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t}\n\n\t\t&::before {\n\t\t\tz-index: var(--ck-balloon-panel-arrow-z-index);\n\t\t}\n\n\t\t&::after {\n\t\t\tz-index: calc(var(--ck-balloon-panel-arrow-z-index) + 1);\n\t\t}\n\t}\n\n\t&[class*="arrow_n"] {\n\t\t&::before {\n\t\t\tz-index: var(--ck-balloon-panel-arrow-z-index);\n\t\t}\n\n\t\t&::after {\n\t\t\tz-index: calc(var(--ck-balloon-panel-arrow-z-index) + 1);\n\t\t}\n\t}\n\n\t&[class*="arrow_s"] {\n\t\t&::before {\n\t\t\tz-index: var(--ck-balloon-panel-arrow-z-index);\n\t\t}\n\n\t\t&::after {\n\t\t\tz-index: calc(var(--ck-balloon-panel-arrow-z-index) + 1);\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_visible {\n\t\tdisplay: block;\n\t}\n}\n','/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "../../../mixins/_shadow.css";\n\n:root {\n\t--ck-balloon-arrow-offset: 2px;\n\t--ck-balloon-arrow-height: 10px;\n\t--ck-balloon-arrow-half-width: 8px;\n\t--ck-balloon-arrow-drop-shadow: 0 2px 2px var(--ck-color-shadow-drop);\n}\n\n.ck.ck-balloon-panel {\n\t@mixin ck-rounded-corners;\n\t@mixin ck-drop-shadow;\n\n\tmin-height: 15px;\n\n\tbackground: var(--ck-color-panel-background);\n\tborder: 1px solid var(--ck-color-panel-border);\n\n\t&.ck-balloon-panel_with-arrow {\n\t\t&::before,\n\t\t&::after {\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder-style: solid;\n\t\t}\n\t}\n\n\t&[class*="arrow_n"] {\n\t\t&::before,\n\t\t&::after {\n\t\t\tborder-width: 0 var(--ck-balloon-arrow-half-width) var(--ck-balloon-arrow-height) var(--ck-balloon-arrow-half-width);\n\t\t}\n\n\t\t&::before {\n\t\t\tborder-color: transparent transparent var(--ck-color-panel-border) transparent;\n\t\t}\n\n\t\t&::after {\n\t\t\tborder-color: transparent transparent var(--ck-color-panel-background) transparent;\n\t\t\tmargin-top: var(--ck-balloon-arrow-offset);\n\t\t}\n\t}\n\n\t&[class*="arrow_s"] {\n\t\t&::before,\n\t\t&::after {\n\t\t\tborder-width: var(--ck-balloon-arrow-height) var(--ck-balloon-arrow-half-width) 0 var(--ck-balloon-arrow-half-width);\n\t\t}\n\n\t\t&::before {\n\t\t\tborder-color: var(--ck-color-panel-border) transparent transparent;\n\t\t\tfilter: drop-shadow(var(--ck-balloon-arrow-drop-shadow));\n\t\t}\n\n\t\t&::after {\n\t\t\tborder-color: var(--ck-color-panel-background) transparent transparent transparent;\n\t\t\tmargin-bottom: var(--ck-balloon-arrow-offset);\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_n {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: 50%;\n\t\t\tmargin-left: calc(-1 * var(--ck-balloon-arrow-half-width));\n\t\t\ttop: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_nw {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\ttop: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_ne {\n\t\t&::before,\n\t\t&::after {\n\t\t\tright: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\ttop: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_s {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: 50%;\n\t\t\tmargin-left: calc(-1 * var(--ck-balloon-arrow-half-width));\n\t\t\tbottom: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_sw {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\tbottom: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_se {\n\t\t&::before,\n\t\t&::after {\n\t\t\tright: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\tbottom: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_sme {\n\t\t&::before,\n\t\t&::after {\n\t\t\tright: 25%;\n\t\t\tmargin-right: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\tbottom: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_smw {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: 25%;\n\t\t\tmargin-left: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\tbottom: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_nme {\n\t\t&::before,\n\t\t&::after {\n\t\t\tright: 25%;\n\t\t\tmargin-right: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\ttop: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n\n\t&.ck-balloon-panel_arrow_nmw {\n\t\t&::before,\n\t\t&::after {\n\t\t\tleft: 25%;\n\t\t\tmargin-left: calc(2 * var(--ck-balloon-arrow-half-width));\n\t\t\ttop: calc(-1 * var(--ck-balloon-arrow-height));\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},757:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck .ck-balloon-rotator__navigation{align-items:center;display:flex;justify-content:center}.ck .ck-balloon-rotator__content .ck-toolbar{justify-content:center}.ck .ck-balloon-rotator__navigation{background:var(--ck-color-toolbar-background);border-bottom:1px solid var(--ck-color-toolbar-border);padding:0 var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation>*{margin-bottom:var(--ck-spacing-small);margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation .ck-balloon-rotator__counter{margin-left:var(--ck-spacing-small);margin-right:var(--ck-spacing-standard)}.ck .ck-balloon-rotator__content .ck.ck-annotation-wrapper{box-shadow:none}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/panel/balloonrotator.css"],names:[],mappings:"AAKA,oCAEC,kBAAmB,CADnB,YAAa,CAEb,sBACD,CAKA,6CACC,sBACD,CCXA,oCACC,6CAA8C,CAC9C,sDAAuD,CACvD,iCAgBD,CAbC,sCAGC,qCAAsC,CAFtC,oCAAqC,CACrC,kCAED,CAGA,iEAIC,mCAAoC,CAHpC,uCAID,CAMA,2DACC,eACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-balloon-rotator__navigation {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n/* Buttons inside a toolbar should be centered when rotator bar is wider.\n * See: https://github.com/ckeditor/ckeditor5-ui/issues/495\n */\n.ck .ck-balloon-rotator__content .ck-toolbar {\n\tjustify-content: center;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-balloon-rotator__navigation {\n\tbackground: var(--ck-color-toolbar-background);\n\tborder-bottom: 1px solid var(--ck-color-toolbar-border);\n\tpadding: 0 var(--ck-spacing-small);\n\n\t/* Let's keep similar appearance to `ck-toolbar`. */\n\t& > * {\n\t\tmargin-right: var(--ck-spacing-small);\n\t\tmargin-top: var(--ck-spacing-small);\n\t\tmargin-bottom: var(--ck-spacing-small);\n\t}\n\n\t/* Gives counter more breath than buttons. */\n\t& .ck-balloon-rotator__counter {\n\t\tmargin-right: var(--ck-spacing-standard);\n\n\t\t/* We need to use smaller margin because of previous button's right margin. */\n\t\tmargin-left: var(--ck-spacing-small);\n\t}\n}\n\n.ck .ck-balloon-rotator__content {\n\n\t/* Disable default annotation shadow inside rotator with fake panels. */\n\t& .ck.ck-annotation-wrapper {\n\t\tbox-shadow: none;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},553:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck .ck-fake-panel{position:absolute;z-index:calc(var(--ck-z-modal) - 1)}.ck .ck-fake-panel div{position:absolute}.ck .ck-fake-panel div:first-child{z-index:2}.ck .ck-fake-panel div:nth-child(2){z-index:1}:root{--ck-balloon-fake-panel-offset-horizontal:6px;--ck-balloon-fake-panel-offset-vertical:6px}.ck .ck-fake-panel div{background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border);border-radius:var(--ck-border-radius);box-shadow:var(--ck-drop-shadow),0 0;height:100%;min-height:15px;width:100%}.ck .ck-fake-panel div:first-child{margin-left:var(--ck-balloon-fake-panel-offset-horizontal);margin-top:var(--ck-balloon-fake-panel-offset-vertical)}.ck .ck-fake-panel div:nth-child(2){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*2);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*2)}.ck .ck-fake-panel div:nth-child(3){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*3);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*3)}.ck .ck-balloon-panel_arrow_s+.ck-fake-panel,.ck .ck-balloon-panel_arrow_se+.ck-fake-panel,.ck .ck-balloon-panel_arrow_sw+.ck-fake-panel{--ck-balloon-fake-panel-offset-vertical:-6px}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/panel/fakepanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AAKA,mBACC,iBAAkB,CAGlB,mCACD,CAEA,uBACC,iBACD,CAEA,mCACC,SACD,CAEA,oCACC,SACD,CCfA,MACC,6CAA8C,CAC9C,2CACD,CAGA,uBAKC,2CAA4C,CAC5C,6CAA8C,CAC9C,qCAAsC,CCXtC,oCAA8B,CDc9B,WAAY,CAPZ,eAAgB,CAMhB,UAED,CAEA,mCACC,0DAA2D,CAC3D,uDACD,CAEA,oCACC,kEAAqE,CACrE,+DACD,CACA,oCACC,kEAAqE,CACrE,+DACD,CAGA,yIAGC,4CACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-fake-panel {\n\tposition: absolute;\n\n\t/* Fake panels should be placed under main balloon content. */\n\tz-index: calc(var(--ck-z-modal) - 1);\n}\n\n.ck .ck-fake-panel div {\n\tposition: absolute;\n}\n\n.ck .ck-fake-panel div:nth-child( 1 ) {\n\tz-index: 2;\n}\n\n.ck .ck-fake-panel div:nth-child( 2 ) {\n\tz-index: 1;\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_shadow.css";\n\n:root {\n\t--ck-balloon-fake-panel-offset-horizontal: 6px;\n\t--ck-balloon-fake-panel-offset-vertical: 6px;\n}\n\n/* Let\'s use `.ck-balloon-panel` appearance. See: balloonpanel.css. */\n.ck .ck-fake-panel div {\n\t@mixin ck-drop-shadow;\n\n\tmin-height: 15px;\n\n\tbackground: var(--ck-color-panel-background);\n\tborder: 1px solid var(--ck-color-panel-border);\n\tborder-radius: var(--ck-border-radius);\n\n\twidth: 100%;\n\theight: 100%;\n}\n\n.ck .ck-fake-panel div:nth-child( 1 ) {\n\tmargin-left: var(--ck-balloon-fake-panel-offset-horizontal);\n\tmargin-top: var(--ck-balloon-fake-panel-offset-vertical);\n}\n\n.ck .ck-fake-panel div:nth-child( 2 ) {\n\tmargin-left: calc(var(--ck-balloon-fake-panel-offset-horizontal) * 2);\n\tmargin-top: calc(var(--ck-balloon-fake-panel-offset-vertical) * 2);\n}\n.ck .ck-fake-panel div:nth-child( 3 ) {\n\tmargin-left: calc(var(--ck-balloon-fake-panel-offset-horizontal) * 3);\n\tmargin-top: calc(var(--ck-balloon-fake-panel-offset-vertical) * 3);\n}\n\n/* If balloon is positioned above element, we need to move fake panel to the top. */\n.ck .ck-balloon-panel_arrow_s + .ck-fake-panel,\n.ck .ck-balloon-panel_arrow_se + .ck-fake-panel,\n.ck .ck-balloon-panel_arrow_sw + .ck-fake-panel {\n\t--ck-balloon-fake-panel-offset-vertical: -6px;\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},609:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-sticky-panel .ck-sticky-panel__content_sticky{position:fixed;top:0;z-index:var(--ck-z-modal)}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky_bottom-limit{position:absolute;top:auto}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky{border-top-left-radius:0;border-top-right-radius:0;border-width:0 1px 1px;box-shadow:var(--ck-drop-shadow),0 0}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/panel/stickypanel.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AAMC,qDAEC,cAAe,CACf,KAAM,CAFN,yBAGD,CAEA,kEAEC,iBAAkB,CADlB,QAED,CCPA,qDAIC,wBAAyB,CACzB,yBAA0B,CAF1B,sBAAuB,CCFxB,oCDKA",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-sticky-panel {\n\t& .ck-sticky-panel__content_sticky {\n\t\tz-index: var(--ck-z-modal); /* #315 */\n\t\tposition: fixed;\n\t\ttop: 0;\n\t}\n\n\t& .ck-sticky-panel__content_sticky_bottom-limit {\n\t\ttop: auto;\n\t\tposition: absolute;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_shadow.css";\n\n.ck.ck-sticky-panel {\n\t& .ck-sticky-panel__content_sticky {\n\t\t@mixin ck-drop-shadow;\n\n\t\tborder-width: 0 1px 1px;\n\t\tborder-top-left-radius: 0;\n\t\tborder-top-right-radius: 0;\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},590:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,'.ck-vertical-form .ck-button:after{bottom:var(--ck-spacing-small);content:"";position:absolute;right:-1px;top:var(--ck-spacing-small);width:0;z-index:1}@media screen and (max-width:600px){.ck.ck-responsive-form .ck-button:after{bottom:var(--ck-spacing-small);content:"";position:absolute;right:-1px;top:var(--ck-spacing-small);width:0;z-index:1}}.ck-vertical-form>.ck-button:nth-last-child(2):after{border-right:1px solid var(--ck-color-base-border)}.ck.ck-responsive-form{padding:var(--ck-spacing-large)}.ck.ck-responsive-form:focus{outline:none}[dir=ltr] .ck.ck-responsive-form>:not(:first-child),[dir=rtl] .ck.ck-responsive-form>:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-responsive-form{padding:0;width:calc(var(--ck-input-width)*.8)}.ck.ck-responsive-form .ck-labeled-field-view{margin:var(--ck-spacing-large) var(--ck-spacing-large) 0}.ck.ck-responsive-form .ck-labeled-field-view .ck-input-text{min-width:0;width:100%}.ck.ck-responsive-form .ck-labeled-field-view .ck-labeled-field-view__error{white-space:normal}.ck.ck-responsive-form>.ck-button:last-child,.ck.ck-responsive-form>.ck-button:nth-last-child(2){border:0;border-radius:0;border-top:1px solid var(--ck-color-base-border);margin-top:var(--ck-spacing-large);padding:var(--ck-spacing-standard)}[dir=ltr] .ck.ck-responsive-form>.ck-button:last-child,[dir=ltr] .ck.ck-responsive-form>.ck-button:nth-last-child(2),[dir=rtl] .ck.ck-responsive-form>.ck-button:last-child,[dir=rtl] .ck.ck-responsive-form>.ck-button:nth-last-child(2){margin-left:0}.ck.ck-responsive-form>.ck-button:nth-last-child(2):after,[dir=rtl] .ck.ck-responsive-form>.ck-button:last-child:last-of-type,[dir=rtl] .ck.ck-responsive-form>.ck-button:nth-last-child(2):last-of-type{border-right:1px solid var(--ck-color-base-border)}}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/mixins/_rwd.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/responsive-form/responsiveform.css"],names:[],mappings:"AAOA,mCAMC,8BAA+B,CAL/B,UAAW,CAEX,iBAAkB,CAClB,UAAW,CACX,2BAA4B,CAH5B,OAAQ,CAKR,SACD,CCTC,oCDaC,wCAMC,8BAA+B,CAL/B,UAAW,CAEX,iBAAkB,CAClB,UAAW,CACX,2BAA4B,CAH5B,OAAQ,CAKR,SACD,CCnBD,CCAD,qDACC,kDACD,CAEA,uBACC,+BAkED,CAhEC,6BAEC,YACD,CASC,uGACC,sCACD,CDvBD,oCCMD,uBAqBE,SAAU,CACV,oCA6CF,CA3CE,8CACC,wDAWD,CATC,6DACC,WAAY,CACZ,UACD,CAGA,4EACC,kBACD,CAID,iGAMC,QAAS,CADT,eAAgB,CAEhB,gDAAiD,CAJjD,kCAAmC,CADnC,kCAkBD,CApBA,0OAcE,aAMF,CAGC,yMACC,kDACD,CDpEF",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_rwd.css";\n\n.ck-vertical-form .ck-button::after {\n\tcontent: "";\n\twidth: 0;\n\tposition: absolute;\n\tright: -1px;\n\ttop: var(--ck-spacing-small);\n\tbottom: var(--ck-spacing-small);\n\tz-index: 1;\n}\n\n.ck.ck-responsive-form {\n\t@mixin ck-media-phone {\n\t\t& .ck-button::after {\n\t\t\tcontent: "";\n\t\t\twidth: 0;\n\t\t\tposition: absolute;\n\t\t\tright: -1px;\n\t\t\ttop: var(--ck-spacing-small);\n\t\t\tbottom: var(--ck-spacing-small);\n\t\t\tz-index: 1;\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@define-mixin ck-media-phone {\n\t@media screen and (max-width: 600px) {\n\t\t@mixin-content;\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_rwd.css";\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n.ck-vertical-form > .ck-button:nth-last-child(2)::after {\n\tborder-right: 1px solid var(--ck-color-base-border);\n}\n\n.ck.ck-responsive-form {\n\tpadding: var(--ck-spacing-large);\n\n\t&:focus {\n\t\t/* See: https://github.com/ckeditor/ckeditor5/issues/4773 */\n\t\toutline: none;\n\t}\n\n\t@mixin ck-dir ltr {\n\t\t& > :not(:first-child) {\n\t\t\tmargin-left: var(--ck-spacing-standard);\n\t\t}\n\t}\n\n\t@mixin ck-dir rtl {\n\t\t& > :not(:last-child) {\n\t\t\tmargin-left: var(--ck-spacing-standard);\n\t\t}\n\t}\n\n\t@mixin ck-media-phone {\n\t\tpadding: 0;\n\t\twidth: calc(.8 * var(--ck-input-width));\n\n\t\t& .ck-labeled-field-view {\n\t\t\tmargin: var(--ck-spacing-large) var(--ck-spacing-large) 0;\n\n\t\t\t& .ck-input-text {\n\t\t\t\tmin-width: 0;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\t/* Let the long error messages wrap in the narrow form. */\n\t\t\t& .ck-labeled-field-view__error {\n\t\t\t\twhite-space: normal;\n\t\t\t}\n\t\t}\n\n\t\t/* Styles for two last buttons in the form (save&cancel, edit&unlink, etc.). */\n\t\t& > .ck-button:nth-last-child(1),\n\t\t& > .ck-button:nth-last-child(2) {\n\t\t\tpadding: var(--ck-spacing-standard);\n\t\t\tmargin-top: var(--ck-spacing-large);\n\n\t\t\tborder-radius: 0;\n\t\t\tborder: 0;\n\t\t\tborder-top: 1px solid var(--ck-color-base-border);\n\n\t\t\t@mixin ck-dir ltr {\n\t\t\t\tmargin-left: 0;\n\t\t\t}\n\n\t\t\t@mixin ck-dir rtl {\n\t\t\t\tmargin-left: 0;\n\n\t\t\t\t&:last-of-type {\n\t\t\t\t\tborder-right: 1px solid var(--ck-color-base-border);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t& > .ck-button:nth-last-child(2) {\n\t\t\t&::after {\n\t\t\t\tborder-right: 1px solid var(--ck-color-base-border);\n\t\t\t}\n\t\t}\n\t}\n}\n'],sourceRoot:""}]);var c=a;},706:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-block-toolbar-button{position:absolute;z-index:var(--ck-z-default)}:root{--ck-color-block-toolbar-button:var(--ck-color-text);--ck-block-toolbar-button-size:var(--ck-font-size-normal)}.ck.ck-block-toolbar-button{color:var(--ck-color-block-toolbar-button);font-size:var(--ck-block-toolbar-size)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/blocktoolbar.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/toolbar/blocktoolbar.css"],names:[],mappings:"AAKA,4BACC,iBAAkB,CAClB,2BACD,CCHA,MACC,oDAAqD,CACrD,yDACD,CAEA,4BACC,0CAA2C,CAC3C,sCACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-block-toolbar-button {\n\tposition: absolute;\n\tz-index: var(--ck-z-default);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-color-block-toolbar-button: var(--ck-color-text);\n\t--ck-block-toolbar-button-size: var(--ck-font-size-normal);\n}\n\n.ck.ck-block-toolbar-button {\n\tcolor: var(--ck-color-block-toolbar-button);\n\tfont-size: var(--ck-block-toolbar-size);\n}\n"],sourceRoot:""}]);var c=a;},571:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck.ck-toolbar{align-items:center;display:flex;flex-flow:row nowrap;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-toolbar>.ck-toolbar__items{align-items:center;display:flex;flex-flow:row wrap;flex-grow:1}.ck.ck-toolbar .ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar .ck.ck-toolbar__separator:first-child,.ck.ck-toolbar .ck.ck-toolbar__separator:last-child{display:none}.ck.ck-toolbar .ck-toolbar__line-break{flex-basis:100%}.ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck-dropdown__button .ck-dropdown__arrow{display:none}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);border:1px solid var(--ck-color-toolbar-border);padding:0 var(--ck-spacing-small)}.ck.ck-toolbar .ck.ck-toolbar__separator{align-self:stretch;background:var(--ck-color-toolbar-border);margin-bottom:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);min-width:1px;width:1px}.ck.ck-toolbar .ck-toolbar__line-break{height:0}.ck.ck-toolbar>.ck-toolbar__items>:not(.ck-toolbar__line-break){margin-right:var(--ck-spacing-small)}.ck.ck-toolbar>.ck-toolbar__items:empty+.ck.ck-toolbar__separator{display:none}.ck.ck-toolbar>.ck-toolbar__items>:not(.ck-toolbar__line-break),.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{margin-bottom:var(--ck-spacing-small);margin-top:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items>.ck{border:0;border-radius:0;margin:0;width:100%}.ck.ck-toolbar.ck-toolbar_compact{padding:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>*{margin:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>:not(:first-child):not(:last-child){border-radius:0}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck.ck-button.ck-dropdown__button{padding-left:var(--ck-spacing-tiny)}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck{margin-right:0}.ck.ck-toolbar[dir=rtl]:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-left:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-bottom-left-radius:0;border-top-left-radius:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-bottom-right-radius:0;border-top-right-radius:0}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__separator,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=rtl] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr]>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-right:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-bottom-right-radius:0;border-top-right-radius:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-bottom-left-radius:0;border-top-left-radius:0}.ck.ck-toolbar[dir=ltr]>.ck.ck-toolbar__separator,[dir=ltr] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-right:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=ltr] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-right:var(--ck-spacing-small)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/mixins/_unselectable.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/toolbar/toolbar.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAOA,eAKC,kBAAmB,CAFnB,YAAa,CACb,oBAAqB,CCFrB,qBAAsB,CACtB,wBAAyB,CACzB,oBAAqB,CACrB,gBD6CD,CA3CC,kCAGC,kBAAmB,CAFnB,YAAa,CACb,kBAAmB,CAEnB,WAED,CAEA,yCACC,oBAWD,CAJC,yGAEC,YACD,CAGD,uCACC,eACD,CAEA,sDACC,gBACD,CAEA,sDACC,qBACD,CAEA,sDACC,gBACD,CAGC,yFACC,YACD,CE/CF,eCGC,eD0FD,CA7FA,qECOE,qCDsFF,CA7FA,eAGC,6CAA8C,CAE9C,+CAAgD,CADhD,iCAyFD,CAtFC,yCACC,kBAAmB,CAGnB,yCAA0C,CAO1C,qCAAsC,CADtC,kCAAmC,CAPnC,aAAc,CADd,SAUD,CAEA,uCACC,QACD,CAGC,gEAEC,oCACD,CAIA,kEACC,YACD,CAGD,gHAIC,qCAAsC,CADtC,kCAED,CAEA,mCAEC,SAgBD,CAbC,0DAWC,QAAS,CAHT,eAAgB,CAHhB,QAAS,CAHT,UAUD,CAGD,kCAEC,SAWD,CATC,uDAEC,QAMD,CAHC,yFACC,eACD,CASD,kFACC,mCACD,CAvFF,qCA2FE,QAEF,CAYC,+FACC,cACD,CAEA,iJAEC,mCACD,CAEA,qHACC,aACD,CAIC,6JAEC,2BAA4B,CAD5B,wBAED,CAGA,2JAEC,4BAA6B,CAD7B,yBAED,CAID,qGACC,mCACD,CAGA,yLACC,mCACD,CAWA,qHACC,cACD,CAIC,6JAEC,4BAA6B,CAD7B,yBAED,CAGA,2JAEC,2BAA4B,CAD5B,wBAED,CAID,qGACC,oCACD,CAGA,yLACC,oCACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../mixins/_unselectable.css";\n\n.ck.ck-toolbar {\n\t@mixin ck-unselectable;\n\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\n\t& > .ck-toolbar__items {\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\n\t}\n\n\t& .ck.ck-toolbar__separator {\n\t\tdisplay: inline-block;\n\n\t\t/*\n\t\t * A leading or trailing separator makes no sense (separates from nothing on one side).\n\t\t * For instance, it can happen when toolbar items (also separators) are getting grouped one by one and\n\t\t * moved to another toolbar in the dropdown.\n\t\t */\n\t\t&:first-child,\n\t\t&:last-child {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t& .ck-toolbar__line-break {\n\t\tflex-basis: 100%;\n\t}\n\n\t&.ck-toolbar_grouping > .ck-toolbar__items {\n\t\tflex-wrap: nowrap;\n\t}\n\n\t&.ck-toolbar_vertical > .ck-toolbar__items {\n\t\tflex-direction: column;\n\t}\n\n\t&.ck-toolbar_floating > .ck-toolbar__items {\n\t\tflex-wrap: nowrap;\n\t}\n\n\t& > .ck.ck-toolbar__grouped-dropdown {\n\t\t& > .ck-dropdown__button .ck-dropdown__arrow {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Makes element unselectable.\n */\n@define-mixin ck-unselectable {\n\t-moz-user-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n@import "@ckeditor/ckeditor5-ui/theme/mixins/_dir.css";\n\n.ck.ck-toolbar {\n\t@mixin ck-rounded-corners;\n\n\tbackground: var(--ck-color-toolbar-background);\n\tpadding: 0 var(--ck-spacing-small);\n\tborder: 1px solid var(--ck-color-toolbar-border);\n\n\t& .ck.ck-toolbar__separator {\n\t\talign-self: stretch;\n\t\twidth: 1px;\n\t\tmin-width: 1px;\n\t\tbackground: var(--ck-color-toolbar-border);\n\n\t\t/*\n\t\t * These margins make the separators look better in balloon toolbars (when aligned with the "tip").\n\t\t * See https://github.com/ckeditor/ckeditor5/issues/7493.\n\t\t */\n\t\tmargin-top: var(--ck-spacing-small);\n\t\tmargin-bottom: var(--ck-spacing-small);\n\t}\n\n\t& .ck-toolbar__line-break {\n\t\theight: 0;\n\t}\n\n\t& > .ck-toolbar__items {\n\t\t& > *:not(.ck-toolbar__line-break) {\n\t\t\t/* (#11) Separate toolbar items. */\n\t\t\tmargin-right: var(--ck-spacing-small);\n\t\t}\n\n\t\t/* Don\'t display a separator after an empty items container, for instance,\n\t\twhen all items were grouped */\n\t\t&:empty + .ck.ck-toolbar__separator {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t& > .ck-toolbar__items > *:not(.ck-toolbar__line-break),\n\t& > .ck.ck-toolbar__grouped-dropdown {\n\t\t/* Make sure items wrapped to the next line have v-spacing */\n\t\tmargin-top: var(--ck-spacing-small);\n\t\tmargin-bottom: var(--ck-spacing-small);\n\t}\n\n\t&.ck-toolbar_vertical {\n\t\t/* Items in a vertical toolbar span the entire width. */\n\t\tpadding: 0;\n\n\t\t/* Specificity matters here. See https://github.com/ckeditor/ckeditor5-theme-lark/issues/168. */\n\t\t& > .ck-toolbar__items > .ck {\n\t\t\t/* Items in a vertical toolbar should span the horizontal space. */\n\t\t\twidth: 100%;\n\n\t\t\t/* Items in a vertical toolbar should have no margin. */\n\t\t\tmargin: 0;\n\n\t\t\t/* Items in a vertical toolbar span the entire width so rounded corners are pointless. */\n\t\t\tborder-radius: 0;\n\n\t\t\t/* Items in a vertical toolbar span the entire width so any border is pointless. */\n\t\t\tborder: 0;\n\t\t}\n\t}\n\n\t&.ck-toolbar_compact {\n\t\t/* No spacing around items. */\n\t\tpadding: 0;\n\n\t\t& > .ck-toolbar__items > * {\n\t\t\t/* Compact toolbar items have no spacing between them. */\n\t\t\tmargin: 0;\n\n\t\t\t/* "Middle" children should have no rounded corners. */\n\t\t\t&:not(:first-child):not(:last-child) {\n\t\t\t\tborder-radius: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t& > .ck.ck-toolbar__grouped-dropdown {\n\t\t/*\n\t\t * Dropdown button has asymmetric padding to fit the arrow.\n\t\t * This button has no arrow so let\'s revert that padding back to normal.\n\t\t */\n\t\t& > .ck.ck-button.ck-dropdown__button {\n\t\t\tpadding-left: var(--ck-spacing-tiny);\n\t\t}\n\t}\n\n\t@nest .ck-toolbar-container & {\n\t\tborder: 0;\n\t}\n}\n\n/* stylelint-disable */\n\n/*\n * Styles for RTL toolbars.\n *\n * Note: In some cases (e.g. a decoupled editor), the toolbar has its own "dir"\n * because its parent is not controlled by the editor framework.\n */\n[dir="rtl"] .ck.ck-toolbar,\n.ck.ck-toolbar[dir="rtl"] {\n\t& > .ck-toolbar__items > .ck {\n\t\tmargin-right: 0;\n\t}\n\n\t&:not(.ck-toolbar_compact) > .ck-toolbar__items > .ck {\n\t\t/* (#11) Separate toolbar items. */\n\t\tmargin-left: var(--ck-spacing-small);\n\t}\n\n\t& > .ck-toolbar__items > .ck:last-child {\n\t\tmargin-left: 0;\n\t}\n\n\t&.ck-toolbar_compact > .ck-toolbar__items > .ck {\n\t\t/* No rounded corners on the right side of the first child. */\n\t\t&:first-child {\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-bottom-left-radius: 0;\n\t\t}\n\n\t\t/* No rounded corners on the left side of the last child. */\n\t\t&:last-child {\n\t\t\tborder-top-right-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\t}\n\t}\n\n\t/* Separate the the separator form the grouping dropdown when some items are grouped. */\n\t& > .ck.ck-toolbar__separator {\n\t\tmargin-left: var(--ck-spacing-small);\n\t}\n\n\t/* Some spacing between the items and the separator before the grouped items dropdown. */\n\t&.ck-toolbar_grouping > .ck-toolbar__items:not(:empty):not(:only-child) {\n\t\tmargin-left: var(--ck-spacing-small);\n\t}\n}\n\n/*\n * Styles for LTR toolbars.\n *\n * Note: In some cases (e.g. a decoupled editor), the toolbar has its own "dir"\n * because its parent is not controlled by the editor framework.\n */\n[dir="ltr"] .ck.ck-toolbar,\n.ck.ck-toolbar[dir="ltr"] {\n\t& > .ck-toolbar__items > .ck:last-child {\n\t\tmargin-right: 0;\n\t}\n\n\t&.ck-toolbar_compact > .ck-toolbar__items > .ck {\n\t\t/* No rounded corners on the right side of the first child. */\n\t\t&:first-child {\n\t\t\tborder-top-right-radius: 0;\n\t\t\tborder-bottom-right-radius: 0;\n\t\t}\n\n\t\t/* No rounded corners on the left side of the last child. */\n\t\t&:last-child {\n\t\t\tborder-top-left-radius: 0;\n\t\t\tborder-bottom-left-radius: 0;\n\t\t}\n\t}\n\n\t/* Separate the the separator form the grouping dropdown when some items are grouped. */\n\t& > .ck.ck-toolbar__separator {\n\t\tmargin-right: var(--ck-spacing-small);\n\t}\n\n\t/* Some spacing between the items and the separator before the grouped items dropdown. */\n\t&.ck-toolbar_grouping > .ck-toolbar__items:not(:empty):not(:only-child) {\n\t\tmargin-right: var(--ck-spacing-small);\n\t}\n}\n\n/* stylelint-enable */\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},948:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,'.ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{-webkit-backface-visibility:hidden;pointer-events:none;position:absolute}.ck.ck-tooltip{display:none;opacity:0;visibility:hidden;z-index:var(--ck-z-modal)}.ck.ck-tooltip .ck-tooltip__text{display:inline-block}.ck.ck-tooltip .ck-tooltip__text:after{content:"";height:0;width:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%;top:0;transition:opacity .2s ease-in-out .2s}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{background:var(--ck-color-tooltip-background);color:var(--ck-color-tooltip-text);font-size:.9em;left:-50%;line-height:1.5;padding:var(--ck-spacing-small) var(--ck-spacing-medium);position:relative}.ck.ck-tooltip .ck-tooltip__text:after{border-style:solid;left:50%;transition:opacity .2s ease-in-out .2s}.ck.ck-tooltip.ck-tooltip_s,.ck.ck-tooltip.ck-tooltip_se,.ck.ck-tooltip.ck-tooltip_sw{bottom:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after,.ck.ck-tooltip.ck-tooltip_se .ck-tooltip__text:after,.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text:after{border-color:transparent transparent var(--ck-color-tooltip-background) transparent;border-width:0 var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size);top:calc(var(--ck-tooltip-arrow-size)*-1 + 1px);transform:translateX(-50%)}.ck.ck-tooltip.ck-tooltip_sw{left:auto;right:50%}.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text{left:auto;right:calc(var(--ck-tooltip-arrow-size)*-2)}.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text:after{left:auto;right:0}.ck.ck-tooltip.ck-tooltip_se{left:50%;right:auto}.ck.ck-tooltip.ck-tooltip_se .ck-tooltip__text{left:calc(var(--ck-tooltip-arrow-size)*-2);right:auto}.ck.ck-tooltip.ck-tooltip_se .ck-tooltip__text:after{left:0;right:auto;transform:translateX(50%)}.ck.ck-tooltip.ck-tooltip_n{top:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{border-color:var(--ck-color-tooltip-background) transparent transparent transparent;border-width:var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) 0 var(--ck-tooltip-arrow-size);bottom:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateX(-50%)}.ck.ck-tooltip.ck-tooltip_e{left:calc(100% + var(--ck-tooltip-arrow-size));top:50%}.ck.ck-tooltip.ck-tooltip_e .ck-tooltip__text{left:0;transform:translateY(-50%)}.ck.ck-tooltip.ck-tooltip_e .ck-tooltip__text:after{border-color:transparent var(--ck-color-tooltip-background) transparent transparent;border-width:var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) 0;left:calc(var(--ck-tooltip-arrow-size)*-1);top:calc(50% - var(--ck-tooltip-arrow-size)*1)}.ck.ck-tooltip.ck-tooltip_w{left:auto;right:calc(100% + var(--ck-tooltip-arrow-size));top:50%}.ck.ck-tooltip.ck-tooltip_w .ck-tooltip__text{left:0;transform:translateY(-50%)}.ck.ck-tooltip.ck-tooltip_w .ck-tooltip__text:after{border-color:transparent transparent transparent var(--ck-color-tooltip-background);border-width:var(--ck-tooltip-arrow-size) 0 var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size);left:100%;top:calc(50% - var(--ck-tooltip-arrow-size)*1)}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/components/tooltip/tooltip.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_rounded.css"],names:[],mappings:"AAKA,sDASC,kCAAmC,CAJnC,mBAAoB,CAHpB,iBAQD,CAEA,eAIC,YAAa,CADb,SAAU,CADV,iBAAkB,CAGlB,yBAWD,CATC,iCACC,oBAOD,CALC,uCACC,UAAW,CAEX,QAAS,CADT,OAED,CCxBF,MACC,2BACD,CAEA,eACC,QAAS,CAMT,KAAM,CAON,sCAwKD,CAtKC,iCChBA,eDqCA,CArBA,yGCZC,qCDiCD,CArBA,iCAOC,6CAA8C,CAF9C,kCAAmC,CAFnC,cAAe,CAMf,SAAU,CALV,eAAgB,CAEhB,wDAAyD,CAEzD,iBAaD,CAVC,uCAOC,kBAAmB,CACnB,QAAS,CAFT,sCAGD,CAYD,sFAGC,4CAA+C,CAC/C,0BASD,CAPC,8JAIC,mFAAoF,CACpF,qGAAsG,CAHtG,+CAAkD,CAClD,0BAGD,CAaD,6BAEC,SAAU,CADV,SAYD,CATC,+CACC,SAAU,CACV,2CACD,CAEA,qDACC,SAAU,CACV,OACD,CAYD,6BACC,QAAS,CACT,UAYD,CAVC,+CAEC,0CAA8C,CAD9C,UAED,CAEA,qDAEC,MAAO,CADP,UAAW,CAEX,yBACD,CAYD,4BACC,yCAA4C,CAC5C,2BAQD,CANC,oDAGC,mFAAoF,CACpF,qGAAsG,CAHtG,4CAA+C,CAC/C,0BAGD,CAUD,4BACC,8CAA+C,CAC/C,OAaD,CAXC,8CACC,MAAO,CACP,0BAQD,CANC,oDAGC,mFAAoF,CACpF,qGAAsG,CAHtG,0CAA6C,CAC7C,8CAGD,CAWF,4BAEC,SAAU,CADV,+CAAgD,CAEhD,OAaD,CAXC,8CACC,MAAO,CACP,0BAQD,CANC,oDAGC,mFAAoF,CACpF,qGAAsG,CAHtG,SAAU,CACV,8CAGD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-tooltip,\n.ck.ck-tooltip .ck-tooltip__text::after {\n\tposition: absolute;\n\n\t/* Without this, hovering the tooltip could keep it visible. */\n\tpointer-events: none;\n\n\t/* This is to get rid of flickering when transitioning opacity in Chrome.\n\tIt\'s weird but it works. */\n\t-webkit-backface-visibility: hidden;\n}\n\n.ck.ck-tooltip {\n\t/* Tooltip is hidden by default. */\n\tvisibility: hidden;\n\topacity: 0;\n\tdisplay: none;\n\tz-index: var(--ck-z-modal);\n\n\t& .ck-tooltip__text {\n\t\tdisplay: inline-block;\n\n\t\t&::after {\n\t\t\tcontent: "";\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t}\n\t}\n}\n','/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../../../mixins/_rounded.css";\n\n:root {\n\t--ck-tooltip-arrow-size: 5px;\n}\n\n.ck.ck-tooltip {\n\tleft: 50%;\n\n\t/*\n\t * Prevent blurry tooltips in LoDPI environments.\n\t * See https://github.com/ckeditor/ckeditor5/issues/1802.\n\t */\n\ttop: 0;\n\n\t/*\n\t * For the transition to work, the tooltip must be controlled\n\t * using visibility+opacity. A delay prevents a "tooltip avalanche"\n\t * i.e. when scanning the toolbar with mouse cursor.\n\t */\n\ttransition: opacity .2s ease-in-out .2s;\n\n\t& .ck-tooltip__text {\n\t\t@mixin ck-rounded-corners;\n\n\t\tfont-size: .9em;\n\t\tline-height: 1.5;\n\t\tcolor: var(--ck-color-tooltip-text);\n\t\tpadding: var(--ck-spacing-small) var(--ck-spacing-medium);\n\t\tbackground: var(--ck-color-tooltip-background);\n\t\tposition: relative;\n\t\tleft: -50%;\n\n\t\t&::after {\n\t\t\t/*\n\t\t\t * For the transition to work, the tooltip must be controlled\n\t\t\t * using visibility+opacity. A delay prevents a "tooltip avalanche"\n\t\t\t * i.e. when scanning the toolbar with mouse cursor.\n\t\t\t */\n\t\t\ttransition: opacity .2s ease-in-out .2s;\n\t\t\tborder-style: solid;\n\t\t\tleft: 50%;\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip south of the element.\n\t *\n\t *       [element]\n\t *           ^\n\t *     +-----------+\n\t *     |  Tooltip  |\n\t *     +-----------+\n\t */\n\t&.ck-tooltip_s,\n\t&.ck-tooltip_sw,\n\t&.ck-tooltip_se {\n\t\tbottom: calc(-1 * var(--ck-tooltip-arrow-size));\n\t\ttransform: translateY( 100% );\n\n\t\t& .ck-tooltip__text::after {\n\t\t\t/* 1px addresses gliches in rendering causing gap between the triangle and the text */\n\t\t\ttop: calc(-1 * var(--ck-tooltip-arrow-size) + 1px);\n\t\t\ttransform: translateX( -50% );\n\t\t\tborder-color: transparent transparent var(--ck-color-tooltip-background) transparent;\n\t\t\tborder-width: 0 var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size);\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip south-west of the element.\n\t *\n\t *        [element]\n\t *            ^\n\t *  +-----------+\n\t *  |  Tooltip  |\n\t *  +-----------+\n\t */\n\n\t&.ck-tooltip_sw {\n\t\tright: 50%;\n\t\tleft: auto;\n\n\t\t& .ck-tooltip__text {\n\t\t\tleft: auto;\n\t\t\tright: calc( -2 * var(--ck-tooltip-arrow-size));\n\t\t}\n\n\t\t& .ck-tooltip__text::after {\n\t\t\tleft: auto;\n\t\t\tright: 0;\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip south-east of the element.\n\t *\n\t *  [element]\n\t *      ^\n\t *    +-----------+\n\t *    |  Tooltip  |\n\t *    +-----------+\n\t */\n\t&.ck-tooltip_se {\n\t\tleft: 50%;\n\t\tright: auto;\n\n\t\t& .ck-tooltip__text {\n\t\t\tright: auto;\n\t\t\tleft: calc( -2 * var(--ck-tooltip-arrow-size));\n\t\t}\n\n\t\t& .ck-tooltip__text::after {\n\t\t\tright: auto;\n\t\t\tleft: 0;\n\t\t\ttransform: translateX( 50% );\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip north of the element.\n\t *\n\t *     +-----------+\n\t *     |  Tooltip  |\n\t *     +-----------+\n\t *           V\n\t *       [element]\n\t */\n\t&.ck-tooltip_n {\n\t\ttop: calc(-1 * var(--ck-tooltip-arrow-size));\n\t\ttransform: translateY( -100% );\n\n\t\t& .ck-tooltip__text::after {\n\t\t\tbottom: calc(-1 * var(--ck-tooltip-arrow-size));\n\t\t\ttransform: translateX( -50% );\n\t\t\tborder-color: var(--ck-color-tooltip-background) transparent transparent transparent;\n\t\t\tborder-width: var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) 0 var(--ck-tooltip-arrow-size);\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip east of the element.\n\t *\n\t *                +----------+\n\t *    [element] < |   east   |\n\t *                +----------+\n\t */\n\t&.ck-tooltip_e {\n\t\tleft: calc(100% + var(--ck-tooltip-arrow-size));\n\t\ttop: 50%;\n\n\t\t& .ck-tooltip__text {\n\t\t\tleft: 0;\n\t\t\ttransform: translateY( -50% );\n\n\t\t\t&::after {\n\t\t\t\tleft: calc(-1 * var(--ck-tooltip-arrow-size));\n\t\t\t\ttop: calc(50% - 1 * var(--ck-tooltip-arrow-size));\n\t\t\t\tborder-color: transparent var(--ck-color-tooltip-background) transparent transparent;\n\t\t\t\tborder-width: var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size) 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A class that displays the tooltip west of the element.\n\t *\n\t *    +----------+\n\t *    |   west   | > [element]\n\t *    +----------+\n\t */\n\t&.ck-tooltip_w {\n\t\tright: calc(100% + var(--ck-tooltip-arrow-size));\n\t\tleft: auto;\n\t\ttop: 50%;\n\n\t\t& .ck-tooltip__text {\n\t\t\tleft: 0;\n\t\t\ttransform: translateY( -50% );\n\n\t\t\t&::after {\n\t\t\t\tleft: 100%;\n\t\t\t\ttop: calc(50% - 1 * var(--ck-tooltip-arrow-size));\n\t\t\t\tborder-color: transparent transparent transparent var(--ck-color-tooltip-background);\n\t\t\t\tborder-width: var(--ck-tooltip-arrow-size) 0 var(--ck-tooltip-arrow-size) var(--ck-tooltip-arrow-size);\n\t\t\t}\n\t\t}\n\t}\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Implements rounded corner interface for .ck-rounded-corners class.\n *\n * @see $ck-border-radius\n */\n@define-mixin ck-rounded-corners {\n\tborder-radius: 0;\n\n\t@nest .ck-rounded-corners &,\n\t&.ck-rounded-corners {\n\t\tborder-radius: var(--ck-border-radius);\n\t\t@mixin-content;\n\t}\n}\n"],sourceRoot:""}]);var c=a;},150:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck-hidden{display:none!important}.ck-reset_all :not(.ck-reset_all-excluded *),.ck.ck-reset,.ck.ck-reset_all{box-sizing:border-box;height:auto;position:static;width:auto}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999)}.ck-transitions-disabled,.ck-transitions-disabled *{transition:none!important}:root{--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border-coordinates:208,79%,51%;--ck-color-focus-border:hsl(var(--ck-color-focus-border-coordinates));--ck-color-focus-outer-shadow:#bcdefb;--ck-color-focus-disabled-shadow:rgba(119,186,248,.3);--ck-color-focus-error-shadow:rgba(255,64,31,.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,.15);--ck-color-shadow-drop-active:rgba(0,0,0,.2);--ck-color-shadow-inner:rgba(0,0,0,.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-off-hover-background:#a3a3a3;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-on-hover-background:#579e3d;--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-switch-button-inner-shadow:rgba(0,0,0,.1);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#757575;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-button-default-hover-background);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#707070;--ck-color-upload-bar-background:#6cb5f9;--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,176,255,.1);--ck-color-link-fake-selection:rgba(31,176,255,.3);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-outer-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck-reset_all :not(.ck-reset_all-excluded *),.ck.ck-reset,.ck.ck-reset_all{word-wrap:break-word;background:transparent;border:0;margin:0;padding:0;text-decoration:none;transition:none;vertical-align:middle}.ck-reset_all :not(.ck-reset_all-excluded *),.ck.ck-reset_all{border-collapse:collapse;color:var(--ck-color-text);cursor:auto;float:none;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);text-align:left;white-space:nowrap}.ck-reset_all .ck-rtl :not(.ck-reset_all-excluded *){text-align:right}.ck-reset_all iframe:not(.ck-reset_all-excluded *){vertical-align:inherit}.ck-reset_all textarea:not(.ck-reset_all-excluded *){white-space:pre-wrap}.ck-reset_all input[type=password]:not(.ck-reset_all-excluded *),.ck-reset_all input[type=text]:not(.ck-reset_all-excluded *),.ck-reset_all textarea:not(.ck-reset_all-excluded *){cursor:text}.ck-reset_all input[type=password][disabled]:not(.ck-reset_all-excluded *),.ck-reset_all input[type=text][disabled]:not(.ck-reset_all-excluded *),.ck-reset_all textarea[disabled]:not(.ck-reset_all-excluded *){cursor:default}.ck-reset_all fieldset:not(.ck-reset_all-excluded *){border:2px groove #dfdee3;padding:10px}.ck-reset_all button:not(.ck-reset_all-excluded *)::-moz-focus-inner{border:0;padding:0}.ck[dir=rtl],.ck[dir=rtl] .ck{text-align:right}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-drop-shadow-active:0 3px 6px 1px var(--ck-color-shadow-drop-active);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/globals/_hidden.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/globals/_reset.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/globals/_zindex.css","webpack://./node_modules/@ckeditor/ckeditor5-ui/theme/globals/_transition.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_colors.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_disabled.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_focus.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_fonts.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_reset.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_rounded.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_shadow.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-ui/globals/_spacing.css"],names:[],mappings:"AAQA,WAGC,sBACD,CCPA,2EAGC,qBAAsB,CAEtB,WAAY,CACZ,eAAgB,CAFhB,UAGD,CCPA,MACC,gBAAiB,CACjB,4CACD,CCAA,oDAEC,yBACD,CCNA,MACC,kCAAmD,CACnD,+BAAoD,CACpD,8BAAgD,CAChD,8BAAmD,CACnD,6BAAmD,CACnD,yBAA+C,CAC/C,8BAAmD,CACnD,oCAAuD,CACvD,6BAAkD,CAIlD,+CAAwD,CACxD,qEAA+E,CAC/E,qCAAwD,CACxD,qDAA8D,CAC9D,gDAAyD,CACzD,yCAAqD,CACrD,sCAAsD,CACtD,4CAA0D,CAC1D,sCAAsD,CAItD,gDAAuD,CACvD,kDAA+D,CAC/D,mDAAgE,CAChE,+CAA6D,CAC7D,yDAA8D,CAE9D,uCAAuD,CACvD,6CAA4D,CAC5D,8CAA4D,CAC5D,0CAAyD,CACzD,gDAA8D,CAE9D,+DAAsE,CACtE,iDAAkE,CAClE,kDAAkE,CAClE,8CAA+D,CAC/D,oDAAoE,CACpE,6DAAsE,CAEtE,8BAAoD,CACpD,gCAAqD,CAErD,+CAA4D,CAC5D,qDAAiE,CACjE,+EAAqF,CACrF,oDAAmE,CACnE,yEAA8E,CAC9E,oDAAgE,CAIhE,oEAA2E,CAC3E,4DAAoE,CAIpE,2DAAoE,CACpE,+BAAiD,CACjD,wDAAgE,CAChE,+CAA0D,CAC1D,4CAA2D,CAC3D,wCAAwD,CACxD,sCAAsD,CAItD,0DAAmE,CACnE,uFAA6F,CAC7F,gEAAuE,CACvE,4EAAiF,CACjF,8DAAsE,CAItE,2DAAoE,CACpE,mDAA6D,CAI7D,6DAAsE,CACtE,qDAA+D,CAI/D,uDAAgE,CAChE,uDAAiE,CAIjE,0CAAyD,CAIzD,wCAA2D,CAI3D,+BAAoD,CACpD,uDAAmE,CACnE,kDAAgE,CCpGhE,wBAAyB,CCAzB,0CAA2C,CAK3C,gGAAiG,CAKjG,4GAA6G,CAK7G,sGAAuG,CAKvG,sDAAuD,CCvBvD,wBAAyB,CACzB,6BAA8B,CAC9B,wDAA6D,CAE7D,yBAA0B,CAC1B,2BAA4B,CAC5B,yBAA0B,CAC1B,wBAAyB,CACzB,0BAA2B,CCJ3B,kCJoGD,CI9FA,2EAaC,oBAAqB,CANrB,sBAAuB,CADvB,QAAS,CAFT,QAAS,CACT,SAAU,CAGV,oBAAqB,CAErB,eAAgB,CADhB,qBAKD,CAKA,8DAGC,wBAAyB,CAEzB,0BAA2B,CAG3B,WAAY,CACZ,UAAW,CALX,iGAAkG,CAElG,eAAgB,CAChB,kBAGD,CAGC,qDACC,gBACD,CAEA,mDAEC,sBACD,CAEA,qDACC,oBACD,CAEA,mLAGC,WACD,CAEA,iNAGC,cACD,CAEA,qDAEC,yBAAoC,CADpC,YAED,CAEA,qEAGC,QAAQ,CADR,SAED,CAMD,8BAEC,gBACD,CCnFA,MACC,sBAAuB,CCAvB,gEAAiE,CAKjE,0DAA2D,CAK3D,wEAAyE,CCbzE,uBAA8B,CAC9B,mDAA2D,CAC3D,4CAAkD,CAClD,oDAA4D,CAC5D,mDAA2D,CAC3D,kDAA2D,CAC3D,yDFFD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A class which hides an element in DOM.\n */\n.ck-hidden {\n\t/* Override selector specificity. Otherwise, all elements with some display\n\tstyle defined will override this one, which is not a desired result. */\n\tdisplay: none !important;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck.ck-reset,\n.ck.ck-reset_all,\n.ck-reset_all *:not(.ck-reset_all-excluded *) {\n\tbox-sizing: border-box;\n\twidth: auto;\n\theight: auto;\n\tposition: static;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-z-default: 1;\n\t--ck-z-modal: calc( var(--ck-z-default) + 999 );\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A class that disables all transitions of the element and its children.\n */\n.ck-transitions-disabled,\n.ck-transitions-disabled * {\n\ttransition: none !important;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-color-base-foreground: \t\t\t\t\t\t\t\thsl(0, 0%, 98%);\n\t--ck-color-base-background: \t\t\t\t\t\t\t\thsl(0, 0%, 100%);\n\t--ck-color-base-border: \t\t\t\t\t\t\t\t\thsl(0, 0%, 77%);\n\t--ck-color-base-action: \t\t\t\t\t\t\t\t\thsl(104, 44%, 48%);\n\t--ck-color-base-focus: \t\t\t\t\t\t\t\t\t\thsl(209, 92%, 70%);\n\t--ck-color-base-text: \t\t\t\t\t\t\t\t\t\thsl(0, 0%, 20%);\n\t--ck-color-base-active: \t\t\t\t\t\t\t\t\thsl(208, 88%, 52%);\n\t--ck-color-base-active-focus:\t\t\t\t\t\t\t\thsl(208, 88%, 47%);\n\t--ck-color-base-error:\t\t\t\t\t\t\t\t\t\thsl(15, 100%, 43%);\n\n\t/* -- Generic colors ------------------------------------------------------------------------ */\n\n\t--ck-color-focus-border-coordinates: \t\t\t\t\t\t208, 79%, 51%;\n\t--ck-color-focus-border: \t\t\t\t\t\t\t\t\thsl(var(--ck-color-focus-border-coordinates));\n\t--ck-color-focus-outer-shadow:\t\t\t\t\t\t\t\thsl(207, 89%, 86%);\n\t--ck-color-focus-disabled-shadow:\t\t\t\t\t\t\thsla(209, 90%, 72%,.3);\n\t--ck-color-focus-error-shadow:\t\t\t\t\t\t\t\thsla(9,100%,56%,.3);\n\t--ck-color-text: \t\t\t\t\t\t\t\t\t\t\tvar(--ck-color-base-text);\n\t--ck-color-shadow-drop: \t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0.15);\n\t--ck-color-shadow-drop-active:\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0.2);\n\t--ck-color-shadow-inner: \t\t\t\t\t\t\t\t\thsla(0, 0%, 0%, 0.1);\n\n\t/* -- Buttons ------------------------------------------------------------------------------- */\n\n\t--ck-color-button-default-background: \t\t\t\t\t\ttransparent;\n\t--ck-color-button-default-hover-background: \t\t\t\thsl(0, 0%, 90%);\n\t--ck-color-button-default-active-background: \t\t\t\thsl(0, 0%, 85%);\n\t--ck-color-button-default-active-shadow: \t\t\t\t\thsl(0, 0%, 75%);\n\t--ck-color-button-default-disabled-background: \t\t\t\ttransparent;\n\n\t--ck-color-button-on-background: \t\t\t\t\t\t\thsl(0, 0%, 87%);\n\t--ck-color-button-on-hover-background: \t\t\t\t\t\thsl(0, 0%, 77%);\n\t--ck-color-button-on-active-background: \t\t\t\t\thsl(0, 0%, 73%);\n\t--ck-color-button-on-active-shadow: \t\t\t\t\t\thsl(0, 0%, 63%);\n\t--ck-color-button-on-disabled-background: \t\t\t\t\thsl(0, 0%, 87%);\n\n\t--ck-color-button-action-background: \t\t\t\t\t\tvar(--ck-color-base-action);\n\t--ck-color-button-action-hover-background: \t\t\t\t\thsl(104, 44%, 43%);\n\t--ck-color-button-action-active-background: \t\t\t\thsl(104, 44%, 41%);\n\t--ck-color-button-action-active-shadow: \t\t\t\t\thsl(104, 44%, 36%);\n\t--ck-color-button-action-disabled-background: \t\t\t\thsl(104, 44%, 58%);\n\t--ck-color-button-action-text: \t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\n\t--ck-color-button-save: \t\t\t\t\t\t\t\t\thsl(120, 100%, 27%);\n\t--ck-color-button-cancel: \t\t\t\t\t\t\t\t\thsl(15, 100%, 43%);\n\n\t--ck-color-switch-button-off-background:\t\t\t\t\thsl(0, 0%, 69%);\n\t--ck-color-switch-button-off-hover-background:\t\t\t\thsl(0, 0%, 64%);\n\t--ck-color-switch-button-on-background:\t\t\t\t\t\tvar(--ck-color-button-action-background);\n\t--ck-color-switch-button-on-hover-background:\t\t\t\thsl(104, 44%, 43%);\n\t--ck-color-switch-button-inner-background:\t\t\t\t\tvar(--ck-color-base-background);\n\t--ck-color-switch-button-inner-shadow:\t\t\t\t\t\thsla(0, 0%, 0%, 0.1);\n\n\t/* -- Dropdown ------------------------------------------------------------------------------ */\n\n\t--ck-color-dropdown-panel-background: \t\t\t\t\t\tvar(--ck-color-base-background);\n\t--ck-color-dropdown-panel-border: \t\t\t\t\t\t\tvar(--ck-color-base-border);\n\n\t/* -- Input --------------------------------------------------------------------------------- */\n\n\t--ck-color-input-background: \t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\t--ck-color-input-border: \t\t\t\t\t\t\t\t\thsl(0, 0%, 78%);\n\t--ck-color-input-error-border:\t\t\t\t\t\t\t\tvar(--ck-color-base-error);\n\t--ck-color-input-text: \t\t\t\t\t\t\t\t\t\tvar(--ck-color-base-text);\n\t--ck-color-input-disabled-background: \t\t\t\t\t\thsl(0, 0%, 95%);\n\t--ck-color-input-disabled-border: \t\t\t\t\t\t\thsl(0, 0%, 78%);\n\t--ck-color-input-disabled-text: \t\t\t\t\t\t\thsl(0, 0%, 46%);\n\n\t/* -- List ---------------------------------------------------------------------------------- */\n\n\t--ck-color-list-background: \t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\t--ck-color-list-button-hover-background: \t\t\t\t\tvar(--ck-color-button-default-hover-background);\n\t--ck-color-list-button-on-background: \t\t\t\t\t\tvar(--ck-color-base-active);\n\t--ck-color-list-button-on-background-focus: \t\t\t\tvar(--ck-color-base-active-focus);\n\t--ck-color-list-button-on-text:\t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\n\t/* -- Panel --------------------------------------------------------------------------------- */\n\n\t--ck-color-panel-background: \t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\t--ck-color-panel-border: \t\t\t\t\t\t\t\t\tvar(--ck-color-base-border);\n\n\t/* -- Toolbar ------------------------------------------------------------------------------- */\n\n\t--ck-color-toolbar-background: \t\t\t\t\t\t\t\tvar(--ck-color-base-foreground);\n\t--ck-color-toolbar-border: \t\t\t\t\t\t\t\t\tvar(--ck-color-base-border);\n\n\t/* -- Tooltip ------------------------------------------------------------------------------- */\n\n\t--ck-color-tooltip-background: \t\t\t\t\t\t\t\tvar(--ck-color-base-text);\n\t--ck-color-tooltip-text: \t\t\t\t\t\t\t\t\tvar(--ck-color-base-background);\n\n\t/* -- Engine -------------------------------------------------------------------------------- */\n\n\t--ck-color-engine-placeholder-text: \t\t\t\t\t\thsl(0, 0%, 44%);\n\n\t/* -- Upload -------------------------------------------------------------------------------- */\n\n\t--ck-color-upload-bar-background:\t\t \t\t\t\t\thsl(209, 92%, 70%);\n\n\t/* -- Link -------------------------------------------------------------------------------- */\n\n\t--ck-color-link-default:\t\t\t\t\t\t\t\t\thsl(240, 100%, 47%);\n\t--ck-color-link-selected-background:\t\t\t\t\t\thsla(201, 100%, 56%, 0.1);\n\t--ck-color-link-fake-selection:\t\t\t\t\t\t\t\thsla(201, 100%, 56%, 0.3);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t/**\n\t * An opacity value of disabled UI item.\n\t */\n\t--ck-disabled-opacity: .5;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t/**\n\t * The geometry of the of focused element's outer shadow.\n\t */\n\t--ck-focus-outer-shadow-geometry: 0 0 0 3px;\n\n\t/**\n\t * A visual style of focused element's outer shadow.\n\t */\n\t--ck-focus-outer-shadow: var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-outer-shadow);\n\n\t/**\n\t * A visual style of focused element's outer shadow (when disabled).\n\t */\n\t--ck-focus-disabled-outer-shadow: var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);\n\n\t/**\n\t * A visual style of focused element's outer shadow (when has errors).\n\t */\n\t--ck-focus-error-outer-shadow: var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);\n\n\t/**\n\t * A visual style of focused element's border or outline.\n\t */\n\t--ck-focus-ring: 1px solid var(--ck-color-focus-border);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-font-size-base: 13px;\n\t--ck-line-height-base: 1.84615;\n\t--ck-font-face: Helvetica, Arial, Tahoma, Verdana, Sans-Serif;\n\n\t--ck-font-size-tiny: 0.7em;\n\t--ck-font-size-small: 0.75em;\n\t--ck-font-size-normal: 1em;\n\t--ck-font-size-big: 1.4em;\n\t--ck-font-size-large: 1.8em;\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t/* This is super-important. This is **manually** adjusted so a button without an icon\n\tis never smaller than a button with icon, additionally making sure that text-less buttons\n\tare perfect squares. The value is also shared by other components which should stay "in-line"\n\twith buttons. */\n\t--ck-ui-component-min-height: 2.3em;\n}\n\n/**\n * Resets an element, ignoring its children.\n */\n.ck.ck-reset,\n.ck.ck-reset_all,\n.ck-reset_all *:not(.ck-reset_all-excluded *) {\n\t/* Do not include inheritable rules here. */\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbackground: transparent;\n\ttext-decoration: none;\n\tvertical-align: middle;\n\ttransition: none;\n\n\t/* https://github.com/ckeditor/ckeditor5-theme-lark/issues/105 */\n\tword-wrap: break-word;\n}\n\n/**\n * Resets an element AND its children.\n */\n.ck.ck-reset_all,\n.ck-reset_all *:not(.ck-reset_all-excluded *) {\n\t/* These are rule inherited by all children elements. */\n\tborder-collapse: collapse;\n\tfont: normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);\n\tcolor: var(--ck-color-text);\n\ttext-align: left;\n\twhite-space: nowrap;\n\tcursor: auto;\n\tfloat: none;\n}\n\n.ck-reset_all {\n\t& .ck-rtl *:not(.ck-reset_all-excluded *) {\n\t\ttext-align: right;\n\t}\n\n\t& iframe:not(.ck-reset_all-excluded *) {\n\t\t/* For IE */\n\t\tvertical-align: inherit;\n\t}\n\n\t& textarea:not(.ck-reset_all-excluded *) {\n\t\twhite-space: pre-wrap;\n\t}\n\n\t& textarea:not(.ck-reset_all-excluded *),\n\t& input[type="text"]:not(.ck-reset_all-excluded *),\n\t& input[type="password"]:not(.ck-reset_all-excluded *) {\n\t\tcursor: text;\n\t}\n\n\t& textarea[disabled]:not(.ck-reset_all-excluded *),\n\t& input[type="text"][disabled]:not(.ck-reset_all-excluded *),\n\t& input[type="password"][disabled]:not(.ck-reset_all-excluded *) {\n\t\tcursor: default;\n\t}\n\n\t& fieldset:not(.ck-reset_all-excluded *) {\n\t\tpadding: 10px;\n\t\tborder: 2px groove hsl(255, 7%, 88%);\n\t}\n\n\t& button:not(.ck-reset_all-excluded *)::-moz-focus-inner {\n\t\t/* See http://stackoverflow.com/questions/5517744/remove-extra-button-spacing-padding-in-firefox */\n\t\tpadding: 0;\n\t\tborder: 0\n\t}\n}\n\n/**\n * Default UI rules for RTL languages.\n */\n.ck[dir="rtl"],\n.ck[dir="rtl"] .ck {\n\ttext-align: right;\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Default border-radius value.\n */\n:root{\n\t--ck-border-radius: 2px;\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t/**\n\t * A visual style of element's inner shadow (i.e. input).\n\t */\n\t--ck-inner-shadow: 2px 2px 3px var(--ck-color-shadow-inner) inset;\n\n\t/**\n\t * A visual style of element's drop shadow (i.e. panel).\n\t */\n\t--ck-drop-shadow: 0 1px 2px 1px var(--ck-color-shadow-drop);\n\n\t/**\n\t * A visual style of element's active shadow (i.e. comment or suggestion).\n\t */\n\t--ck-drop-shadow-active: 0 3px 6px 1px var(--ck-color-shadow-drop-active);\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-spacing-unit: \t\t\t\t\t\t0.6em;\n\t--ck-spacing-large: \t\t\t\t\tcalc(var(--ck-spacing-unit) * 1.5);\n\t--ck-spacing-standard: \t\t\t\t\tvar(--ck-spacing-unit);\n\t--ck-spacing-medium: \t\t\t\t\tcalc(var(--ck-spacing-unit) * 0.8);\n\t--ck-spacing-small: \t\t\t\t\tcalc(var(--ck-spacing-unit) * 0.5);\n\t--ck-spacing-tiny: \t\t\t\t\t\tcalc(var(--ck-spacing-unit) * 0.3);\n\t--ck-spacing-extra-tiny: \t\t\t\tcalc(var(--ck-spacing-unit) * 0.16);\n}\n"],sourceRoot:""}]);var c=a;},507:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,":root{--ck-color-resizer:var(--ck-color-focus-border);--ck-color-resizer-tooltip-background:#262626;--ck-color-resizer-tooltip-text:#f2f2f2;--ck-resizer-border-radius:var(--ck-border-radius);--ck-resizer-tooltip-offset:10px;--ck-resizer-tooltip-height:calc(var(--ck-spacing-small)*2 + 10px)}.ck .ck-widget,.ck .ck-widget.ck-widget_with-selection-handle{position:relative}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{position:absolute}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon{display:block}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected>.ck-widget__selection-handle,.ck .ck-widget.ck-widget_with-selection-handle:hover>.ck-widget__selection-handle{visibility:visible}.ck .ck-size-view{background:var(--ck-color-resizer-tooltip-background);border:1px solid var(--ck-color-resizer-tooltip-text);border-radius:var(--ck-resizer-border-radius);color:var(--ck-color-resizer-tooltip-text);display:block;font-size:var(--ck-font-size-tiny);height:var(--ck-resizer-tooltip-height);line-height:var(--ck-resizer-tooltip-height);padding:0 var(--ck-spacing-small)}.ck .ck-size-view.ck-orientation-above-center,.ck .ck-size-view.ck-orientation-bottom-left,.ck .ck-size-view.ck-orientation-bottom-right,.ck .ck-size-view.ck-orientation-top-left,.ck .ck-size-view.ck-orientation-top-right{position:absolute}.ck .ck-size-view.ck-orientation-top-left{left:var(--ck-resizer-tooltip-offset);top:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-top-right{right:var(--ck-resizer-tooltip-offset);top:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-bottom-right{bottom:var(--ck-resizer-tooltip-offset);right:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-bottom-left{bottom:var(--ck-resizer-tooltip-offset);left:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-above-center{left:50%;top:calc(var(--ck-resizer-tooltip-height)*-1);transform:translate(-50%)}:root{--ck-widget-outline-thickness:3px;--ck-widget-handler-icon-size:16px;--ck-widget-handler-animation-duration:200ms;--ck-widget-handler-animation-curve:ease;--ck-color-widget-blurred-border:#dedede;--ck-color-widget-hover-border:#ffc83d;--ck-color-widget-editable-focus-background:var(--ck-color-base-background);--ck-color-widget-drag-handler-icon-color:var(--ck-color-base-background)}.ck .ck-widget{outline-color:transparent;outline-style:solid;outline-width:var(--ck-widget-outline-thickness);transition:outline-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve)}.ck .ck-widget.ck-widget_selected,.ck .ck-widget.ck-widget_selected:hover{outline:var(--ck-widget-outline-thickness) solid var(--ck-color-focus-border)}.ck .ck-widget:hover{outline-color:var(--ck-color-widget-hover-border)}.ck .ck-editor__nested-editable{border:1px solid transparent}.ck .ck-editor__nested-editable.ck-editor__nested-editable_focused,.ck .ck-editor__nested-editable:focus{background-color:var(--ck-color-widget-editable-focus-background);border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0;outline:none}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{background-color:transparent;border-radius:var(--ck-border-radius) var(--ck-border-radius) 0 0;box-sizing:border-box;left:calc(0px - var(--ck-widget-outline-thickness));opacity:0;padding:4px;top:0;transform:translateY(-100%);transition:background-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),visibility var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),opacity var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon{color:var(--ck-color-widget-drag-handler-icon-color);height:var(--ck-widget-handler-icon-size);width:var(--ck-widget-handler-icon-size)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator{opacity:0;transition:opacity .3s var(--ck-widget-handler-animation-curve)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle:hover .ck-icon .ck-icon__selected-indicator{opacity:1}.ck .ck-widget.ck-widget_with-selection-handle:hover>.ck-widget__selection-handle{background-color:var(--ck-color-widget-hover-border);opacity:1}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected:hover>.ck-widget__selection-handle,.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected>.ck-widget__selection-handle{background-color:var(--ck-color-focus-border);opacity:1}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected:hover>.ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator,.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected>.ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator{opacity:1}.ck[dir=rtl] .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{left:auto;right:calc(0px - var(--ck-widget-outline-thickness))}.ck.ck-editor__editable.ck-read-only .ck-widget{transition:none}.ck.ck-editor__editable.ck-read-only .ck-widget:not(.ck-widget_selected){--ck-widget-outline-thickness:0px}.ck.ck-editor__editable.ck-read-only .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle,.ck.ck-editor__editable.ck-read-only .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle:hover{background:var(--ck-color-widget-blurred-border)}.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected,.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover{outline-color:var(--ck-color-widget-blurred-border)}.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected.ck-widget_with-selection-handle>.ck-widget__selection-handle,.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected.ck-widget_with-selection-handle>.ck-widget__selection-handle:hover,.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover.ck-widget_with-selection-handle>.ck-widget__selection-handle,.ck.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover.ck-widget_with-selection-handle>.ck-widget__selection-handle:hover{background:var(--ck-color-widget-blurred-border)}.ck.ck-editor__editable blockquote>.ck-widget.ck-widget_with-selection-handle:first-child,.ck.ck-editor__editable>.ck-widget.ck-widget_with-selection-handle:first-child{margin-top:calc(1em + var(--ck-widget-handler-icon-size))}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-widget/theme/widget.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-widget/widget.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_focus.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/mixins/_shadow.css"],names:[],mappings:"AAKA,MACC,+CAAgD,CAChD,6CAAsD,CACtD,uCAAgD,CAEhD,kDAAmD,CACnD,gCAAiC,CACjC,kEACD,CAOA,8DAEC,iBAqBD,CAnBC,4EACC,iBAOD,CALC,qFAGC,aACD,CASD,iLACC,kBACD,CAGD,kBACC,qDAAsD,CAEtD,qDAAsD,CACtD,6CAA8C,CAF9C,0CAA2C,CAI3C,aAAc,CADd,kCAAmC,CAGnC,uCAAwC,CACxC,4CAA6C,CAF7C,iCAsCD,CAlCC,8NAKC,iBACD,CAEA,0CAEC,qCAAsC,CADtC,oCAED,CAEA,2CAEC,sCAAuC,CADvC,oCAED,CAEA,8CACC,uCAAwC,CACxC,sCACD,CAEA,6CACC,uCAAwC,CACxC,qCACD,CAGA,8CAEC,QAAS,CADT,6CAAgD,CAEhD,yBACD,CCjFD,MACC,iCAAkC,CAClC,kCAAmC,CACnC,4CAA6C,CAC7C,wCAAyC,CAEzC,wCAAiD,CACjD,sCAAkD,CAClD,2EAA4E,CAC5E,yEACD,CAEA,eAGC,yBAA0B,CAD1B,mBAAoB,CADpB,gDAAiD,CAGjD,6GAUD,CARC,0EAEC,6EACD,CAEA,qBACC,iDACD,CAGD,gCACC,4BAWD,CAPC,yGAKC,iEAAkE,CCnCnE,2BAA2B,CCF3B,qCAA8B,CDC9B,YDqCA,CAIA,4EAKC,4BAA6B,CAa7B,iEAAkE,CAhBlE,qBAAsB,CAoBtB,mDAAoD,CAhBpD,SAAU,CALV,WAAY,CAsBZ,KAAM,CAFN,2BAA4B,CAT5B,6SAgCD,CAnBC,qFAIC,oDAAqD,CADrD,yCAA0C,CAD1C,wCAWD,CANC,kHACC,SAAU,CAGV,+DACD,CAID,wHACC,SACD,CAID,kFAEC,oDAAqD,CADrD,SAED,CAKC,oMAEC,6CAA8C,CAD9C,SAOD,CAHC,gRACC,SACD,CAOH,qFACC,SAAU,CACV,oDACD,CAGA,gDAEC,eAkBD,CAhBC,yEAOC,iCACD,CAGC,gOAEC,gDACD,CAOD,wIAEC,mDAQD,CALE,ghBAEC,gDACD,CAKH,yKAOC,yDACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-color-resizer: var(--ck-color-focus-border);\n\t--ck-color-resizer-tooltip-background: hsl(0, 0%, 15%);\n\t--ck-color-resizer-tooltip-text: hsl(0, 0%, 95%);\n\n\t--ck-resizer-border-radius: var(--ck-border-radius);\n\t--ck-resizer-tooltip-offset: 10px;\n\t--ck-resizer-tooltip-height: calc(var(--ck-spacing-small) * 2 + 10px);\n}\n\n.ck .ck-widget {\n\t/* This is neccessary for type around UI to be positioned properly. */\n\tposition: relative;\n}\n\n.ck .ck-widget.ck-widget_with-selection-handle {\n\t/* Make the widget wrapper a relative positioning container for the drag handle. */\n\tposition: relative;\n\n\t& .ck-widget__selection-handle {\n\t\tposition: absolute;\n\n\t\t& .ck-icon {\n\t\t\t/* Make sure the icon in not a subject to font-size or line-height to avoid\n\t\t\tunnecessary spacing around it. */\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t/* Show the selection handle on mouse hover over the widget, but not for nested widgets. */\n\t&:hover > .ck-widget__selection-handle {\n\t\tvisibility: visible;\n\t}\n\n\t/* Show the selection handle when the widget is selected, but not for nested widgets. */\n\t&.ck-widget_selected > .ck-widget__selection-handle {\n\t\tvisibility: visible;\n\t}\n}\n\n.ck .ck-size-view {\n\tbackground: var(--ck-color-resizer-tooltip-background);\n\tcolor: var(--ck-color-resizer-tooltip-text);\n\tborder: 1px solid var(--ck-color-resizer-tooltip-text);\n\tborder-radius: var(--ck-resizer-border-radius);\n\tfont-size: var(--ck-font-size-tiny);\n\tdisplay: block;\n\tpadding: 0 var(--ck-spacing-small);\n\theight: var(--ck-resizer-tooltip-height);\n\tline-height: var(--ck-resizer-tooltip-height);\n\n\t&.ck-orientation-top-left,\n\t&.ck-orientation-top-right,\n\t&.ck-orientation-bottom-right,\n\t&.ck-orientation-bottom-left,\n\t&.ck-orientation-above-center {\n\t\tposition: absolute;\n\t}\n\n\t&.ck-orientation-top-left {\n\t\ttop: var(--ck-resizer-tooltip-offset);\n\t\tleft: var(--ck-resizer-tooltip-offset);\n\t}\n\n\t&.ck-orientation-top-right {\n\t\ttop: var(--ck-resizer-tooltip-offset);\n\t\tright: var(--ck-resizer-tooltip-offset);\n\t}\n\n\t&.ck-orientation-bottom-right {\n\t\tbottom: var(--ck-resizer-tooltip-offset);\n\t\tright: var(--ck-resizer-tooltip-offset);\n\t}\n\n\t&.ck-orientation-bottom-left {\n\t\tbottom: var(--ck-resizer-tooltip-offset);\n\t\tleft: var(--ck-resizer-tooltip-offset);\n\t}\n\n\t/* Class applied if the widget is too small to contain the size label */\n\t&.ck-orientation-above-center {\n\t\ttop: calc(var(--ck-resizer-tooltip-height) * -1);\n\t\tleft: 50%;\n\t\ttransform: translate(-50%);\n\t}\n}\n",'/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n@import "../mixins/_focus.css";\n@import "../mixins/_shadow.css";\n\n:root {\n\t--ck-widget-outline-thickness: 3px;\n\t--ck-widget-handler-icon-size: 16px;\n\t--ck-widget-handler-animation-duration: 200ms;\n\t--ck-widget-handler-animation-curve: ease;\n\n\t--ck-color-widget-blurred-border: hsl(0, 0%, 87%);\n\t--ck-color-widget-hover-border: hsl(43, 100%, 62%);\n\t--ck-color-widget-editable-focus-background: var(--ck-color-base-background);\n\t--ck-color-widget-drag-handler-icon-color: var(--ck-color-base-background);\n}\n\n.ck .ck-widget {\n\toutline-width: var(--ck-widget-outline-thickness);\n\toutline-style: solid;\n\toutline-color: transparent;\n\ttransition: outline-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve);\n\n\t&.ck-widget_selected,\n\t&.ck-widget_selected:hover {\n\t\toutline: var(--ck-widget-outline-thickness) solid var(--ck-color-focus-border);\n\t}\n\n\t&:hover {\n\t\toutline-color: var(--ck-color-widget-hover-border);\n\t}\n}\n\n.ck .ck-editor__nested-editable {\n\tborder: 1px solid transparent;\n\n\t/* The :focus style is applied before .ck-editor__nested-editable_focused class is rendered in the view.\n\tThese styles show a different border for a blink of an eye, so `:focus` need to have same styles applied. */\n\t&.ck-editor__nested-editable_focused,\n\t&:focus {\n\t\t@mixin ck-focus-ring;\n\t\t@mixin ck-box-shadow var(--ck-inner-shadow);\n\n\t\tbackground-color: var(--ck-color-widget-editable-focus-background);\n\t}\n}\n\n.ck .ck-widget.ck-widget_with-selection-handle {\n\t& .ck-widget__selection-handle {\n\t\tpadding: 4px;\n\t\tbox-sizing: border-box;\n\n\t\t/* Background and opacity will be animated as the handler shows up or the widget gets selected. */\n\t\tbackground-color: transparent;\n\t\topacity: 0;\n\n\t\t/* Transition:\n\t\t   * background-color for the .ck-widget_selected state change,\n\t\t   * visibility for hiding the handler,\n\t\t   * opacity for the proper look of the icon when the handler disappears. */\n\t\ttransition:\n\t\t\tbackground-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),\n\t\t\tvisibility var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),\n\t\t\topacity var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve);\n\n\t\t/* Make only top corners round. */\n\t\tborder-radius: var(--ck-border-radius) var(--ck-border-radius) 0 0;\n\n\t\t/* Place the drag handler outside the widget wrapper. */\n\t\ttransform: translateY(-100%);\n\t\tleft: calc(0px - var(--ck-widget-outline-thickness));\n\t\ttop: 0;\n\n\t\t& .ck-icon {\n\t\t\t/* Make sure the dimensions of the icon are independent of the fon-size of the content. */\n\t\t\twidth: var(--ck-widget-handler-icon-size);\n\t\t\theight: var(--ck-widget-handler-icon-size);\n\t\t\tcolor: var(--ck-color-widget-drag-handler-icon-color);\n\n\t\t\t/* The "selected" part of the icon is invisible by default */\n\t\t\t& .ck-icon__selected-indicator {\n\t\t\t\topacity: 0;\n\n\t\t\t\t/* Note: The animation is longer on purpose. Simply feels better. */\n\t\t\t\ttransition: opacity 300ms var(--ck-widget-handler-animation-curve);\n\t\t\t}\n\t\t}\n\n\t\t/* Advertise using the look of the icon that once clicked the handler, the widget will be selected. */\n\t\t&:hover .ck-icon .ck-icon__selected-indicator {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t/* Show the selection handler on mouse hover over the widget, but not for nested widgets. */\n\t&:hover > .ck-widget__selection-handle {\n\t\topacity: 1;\n\t\tbackground-color: var(--ck-color-widget-hover-border);\n\t}\n\n\t/* Show the selection handler when the widget is selected, but not for nested widgets. */\n\t&.ck-widget_selected,\n\t&.ck-widget_selected:hover {\n\t\t& > .ck-widget__selection-handle {\n\t\t\topacity: 1;\n\t\t\tbackground-color: var(--ck-color-focus-border);\n\n\t\t\t/* When the widget is selected, notify the user using the proper look of the icon. */\n\t\t\t& .ck-icon .ck-icon__selected-indicator {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* In a RTL environment, align the selection handler to the right side of the widget */\n/* stylelint-disable-next-line no-descending-specificity */\n.ck[dir="rtl"] .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle {\n\tleft: auto;\n\tright: calc(0px - var(--ck-widget-outline-thickness));\n}\n\n/* https://github.com/ckeditor/ckeditor5/issues/6415 */\n.ck.ck-editor__editable.ck-read-only .ck-widget {\n\t/* Prevent the :hover outline from showing up because of the used outline-color transition. */\n\ttransition: none;\n\n\t&:not(.ck-widget_selected) {\n\t\t/* Disable visual effects of hover/active widget when CKEditor is in readOnly mode.\n\t\t * See: https://github.com/ckeditor/ckeditor5/issues/1261\n\t\t *\n\t\t * Leave the unit because this custom property is used in calc() by other features.\n\t\t * See: https://github.com/ckeditor/ckeditor5/issues/6775\n\t\t */\n\t\t--ck-widget-outline-thickness: 0px;\n\t}\n\n\t&.ck-widget_with-selection-handle {\n\t\t& .ck-widget__selection-handle,\n\t\t& .ck-widget__selection-handle:hover {\n\t\t\tbackground: var(--ck-color-widget-blurred-border);\n\t\t}\n\t}\n}\n\n/* Style the widget when it\'s selected but the editable it belongs to lost focus. */\n/* stylelint-disable-next-line no-descending-specificity */\n.ck.ck-editor__editable.ck-blurred .ck-widget {\n\t&.ck-widget_selected,\n\t&.ck-widget_selected:hover {\n\t\toutline-color: var(--ck-color-widget-blurred-border);\n\n\t\t&.ck-widget_with-selection-handle {\n\t\t\t& > .ck-widget__selection-handle,\n\t\t\t& > .ck-widget__selection-handle:hover {\n\t\t\t\tbackground: var(--ck-color-widget-blurred-border);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.ck.ck-editor__editable > .ck-widget.ck-widget_with-selection-handle:first-child,\n.ck.ck-editor__editable blockquote > .ck-widget.ck-widget_with-selection-handle:first-child {\n\t/* Do not crop selection handler if a widget is a first-child in the blockquote or in the root editable.\n\tIn fact, anything with overflow: hidden.\n\thttps://github.com/ckeditor/ckeditor5-block-quote/issues/28\n\thttps://github.com/ckeditor/ckeditor5-widget/issues/44\n\thttps://github.com/ckeditor/ckeditor5-widget/issues/66 */\n\tmargin-top: calc(1em + var(--ck-widget-handler-icon-size));\n}\n',"/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A visual style of focused element's border.\n */\n@define-mixin ck-focus-ring {\n\t/* Disable native outline. */\n\toutline: none;\n\tborder: var(--ck-focus-ring)\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A helper to combine multiple shadows.\n */\n@define-mixin ck-box-shadow $shadowA, $shadowB: 0 0 {\n\tbox-shadow: $shadowA, $shadowB;\n}\n\n/**\n * Gives an element a drop shadow so it looks like a floating panel.\n */\n@define-mixin ck-drop-shadow {\n\t@mixin ck-box-shadow var(--ck-drop-shadow);\n}\n"],sourceRoot:""}]);var c=a;},263:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,".ck .ck-widget_with-resizer{position:relative}.ck .ck-widget__resizer{display:none;left:0;pointer-events:none;position:absolute;top:0}.ck-focused .ck-widget_with-resizer.ck-widget_selected>.ck-widget__resizer{display:block}.ck .ck-widget__resizer__handle{pointer-events:all;position:absolute}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-bottom-right,.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-top-left{cursor:nwse-resize}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-bottom-left,.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-top-right{cursor:nesw-resize}:root{--ck-resizer-size:10px;--ck-resizer-offset:calc(var(--ck-resizer-size)/-2 - 2px);--ck-resizer-border-width:1px}.ck .ck-widget__resizer{outline:1px solid var(--ck-color-resizer)}.ck .ck-widget__resizer__handle{background:var(--ck-color-focus-border);border:var(--ck-resizer-border-width) solid #fff;border-radius:var(--ck-resizer-border-radius);height:var(--ck-resizer-size);width:var(--ck-resizer-size)}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-top-left{left:var(--ck-resizer-offset);top:var(--ck-resizer-offset)}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-top-right{right:var(--ck-resizer-offset);top:var(--ck-resizer-offset)}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-bottom-right{bottom:var(--ck-resizer-offset);right:var(--ck-resizer-offset)}.ck .ck-widget__resizer__handle.ck-widget__resizer__handle-bottom-left{bottom:var(--ck-resizer-offset);left:var(--ck-resizer-offset)}","",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-widget/theme/widgetresize.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-widget/widgetresize.css"],names:[],mappings:"AAKA,4BAEC,iBACD,CAEA,wBACC,YAAa,CAMb,MAAO,CAFP,mBAAoB,CAHpB,iBAAkB,CAMlB,KACD,CAGC,2EACC,aACD,CAGD,gCAIC,kBAAmB,CAHnB,iBAcD,CATC,4IAEC,kBACD,CAEA,4IAEC,kBACD,CCpCD,MACC,sBAAuB,CAGvB,yDAAiE,CACjE,6BACD,CAEA,wBACC,yCACD,CAEA,gCAGC,uCAAwC,CACxC,gDAA6D,CAC7D,6CAA8C,CAH9C,6BAA8B,CAD9B,4BAyBD,CAnBC,oEAEC,6BAA8B,CAD9B,4BAED,CAEA,qEAEC,8BAA+B,CAD/B,4BAED,CAEA,wEACC,+BAAgC,CAChC,8BACD,CAEA,uEACC,+BAAgC,CAChC,6BACD",sourcesContent:["/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-widget_with-resizer {\n\t/* Make the widget wrapper a relative positioning container for the drag handle. */\n\tposition: relative;\n}\n\n.ck .ck-widget__resizer {\n\tdisplay: none;\n\tposition: absolute;\n\n\t/* The wrapper itself should not interfere with the pointer device, only the handles should. */\n\tpointer-events: none;\n\n\tleft: 0;\n\ttop: 0;\n}\n\n.ck-focused .ck-widget_with-resizer.ck-widget_selected {\n\t& > .ck-widget__resizer {\n\t\tdisplay: block;\n\t}\n}\n\n.ck .ck-widget__resizer__handle {\n\tposition: absolute;\n\n\t/* Resizers are the only UI elements that should interfere with a pointer device. */\n\tpointer-events: all;\n\n\t&.ck-widget__resizer__handle-top-left,\n\t&.ck-widget__resizer__handle-bottom-right {\n\t\tcursor: nwse-resize;\n\t}\n\n\t&.ck-widget__resizer__handle-top-right,\n\t&.ck-widget__resizer__handle-bottom-left {\n\t\tcursor: nesw-resize;\n\t}\n}\n","/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-resizer-size: 10px;\n\n\t/* Set the resizer with a 50% offset. */\n\t--ck-resizer-offset: calc( ( var(--ck-resizer-size) / -2 ) - 2px);\n\t--ck-resizer-border-width: 1px;\n}\n\n.ck .ck-widget__resizer {\n\toutline: 1px solid var(--ck-color-resizer);\n}\n\n.ck .ck-widget__resizer__handle {\n\twidth: var(--ck-resizer-size);\n\theight: var(--ck-resizer-size);\n\tbackground: var(--ck-color-focus-border);\n\tborder: var(--ck-resizer-border-width) solid hsl(0, 0%, 100%);\n\tborder-radius: var(--ck-resizer-border-radius);\n\n\t&.ck-widget__resizer__handle-top-left {\n\t\ttop: var(--ck-resizer-offset);\n\t\tleft: var(--ck-resizer-offset);\n\t}\n\n\t&.ck-widget__resizer__handle-top-right {\n\t\ttop: var(--ck-resizer-offset);\n\t\tright: var(--ck-resizer-offset);\n\t}\n\n\t&.ck-widget__resizer__handle-bottom-right {\n\t\tbottom: var(--ck-resizer-offset);\n\t\tright: var(--ck-resizer-offset);\n\t}\n\n\t&.ck-widget__resizer__handle-bottom-left {\n\t\tbottom: var(--ck-resizer-offset);\n\t\tleft: var(--ck-resizer-offset);\n\t}\n}\n"],sourceRoot:""}]);var c=a;},137:function _(t,e,n){n.d(e,{Z:function Z(){return c;}});var o=n(15);var i=n.n(o);var r=n(645);var s=n.n(r);var a=s()(i());a.push([t.id,'.ck .ck-widget .ck-widget__type-around__button{display:block;overflow:hidden;position:absolute;z-index:var(--ck-z-default)}.ck .ck-widget .ck-widget__type-around__button svg{left:50%;position:absolute;top:50%;z-index:calc(var(--ck-z-default) + 2)}.ck .ck-widget .ck-widget__type-around__button.ck-widget__type-around__button_before{left:min(10%,30px);top:calc(var(--ck-widget-outline-thickness)*-.5);transform:translateY(-50%)}.ck .ck-widget .ck-widget__type-around__button.ck-widget__type-around__button_after{bottom:calc(var(--ck-widget-outline-thickness)*-.5);right:min(10%,30px);transform:translateY(50%)}.ck .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button:after,.ck .ck-widget>.ck-widget__type-around>.ck-widget__type-around__button:hover:after{content:"";display:block;left:1px;position:absolute;top:1px;z-index:calc(var(--ck-z-default) + 1)}.ck .ck-widget>.ck-widget__type-around>.ck-widget__type-around__fake-caret{display:none;left:0;position:absolute;right:0}.ck .ck-widget:hover>.ck-widget__type-around>.ck-widget__type-around__fake-caret{left:calc(var(--ck-widget-outline-thickness)*-1);right:calc(var(--ck-widget-outline-thickness)*-1)}.ck .ck-widget.ck-widget_type-around_show-fake-caret_before>.ck-widget__type-around>.ck-widget__type-around__fake-caret{display:block;top:calc(var(--ck-widget-outline-thickness)*-1 - 1px)}.ck .ck-widget.ck-widget_type-around_show-fake-caret_after>.ck-widget__type-around>.ck-widget__type-around__fake-caret{bottom:calc(var(--ck-widget-outline-thickness)*-1 - 1px);display:block}.ck.ck-editor__editable.ck-read-only .ck-widget__type-around,.ck.ck-editor__editable.ck-restricted-editing_mode_restricted .ck-widget__type-around,.ck.ck-editor__editable.ck-widget__type-around_disabled .ck-widget__type-around{display:none}:root{--ck-widget-type-around-button-size:20px;--ck-color-widget-type-around-button-active:var(--ck-color-focus-border);--ck-color-widget-type-around-button-hover:var(--ck-color-widget-hover-border);--ck-color-widget-type-around-button-blurred-editable:var(--ck-color-widget-blurred-border);--ck-color-widget-type-around-button-radar-start-alpha:0;--ck-color-widget-type-around-button-radar-end-alpha:.3;--ck-color-widget-type-around-button-icon:var(--ck-color-base-background)}.ck .ck-widget .ck-widget__type-around__button{background:var(--ck-color-widget-type-around-button);border-radius:100px;height:var(--ck-widget-type-around-button-size);opacity:0;pointer-events:none;transition:opacity var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),background var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve);width:var(--ck-widget-type-around-button-size)}.ck .ck-widget .ck-widget__type-around__button svg{height:8px;margin-top:1px;transform:translate(-50%,-50%);transition:transform .5s ease;width:10px}.ck .ck-widget .ck-widget__type-around__button svg *{stroke-dasharray:10;stroke-dashoffset:0;fill:none;stroke:var(--ck-color-widget-type-around-button-icon);stroke-width:1.5px;stroke-linecap:round;stroke-linejoin:round}.ck .ck-widget .ck-widget__type-around__button svg line{stroke-dasharray:7}.ck .ck-widget .ck-widget__type-around__button:hover{animation:ck-widget-type-around-button-sonar 1s ease infinite}.ck .ck-widget .ck-widget__type-around__button:hover svg polyline{animation:ck-widget-type-around-arrow-dash 2s linear}.ck .ck-widget .ck-widget__type-around__button:hover svg line{animation:ck-widget-type-around-arrow-tip-dash 2s linear}.ck .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button,.ck .ck-widget:hover>.ck-widget__type-around>.ck-widget__type-around__button{opacity:1;pointer-events:auto}.ck .ck-widget:not(.ck-widget_selected)>.ck-widget__type-around>.ck-widget__type-around__button{background:var(--ck-color-widget-type-around-button-hover)}.ck .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button,.ck .ck-widget>.ck-widget__type-around>.ck-widget__type-around__button:hover{background:var(--ck-color-widget-type-around-button-active)}.ck .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button:after,.ck .ck-widget>.ck-widget__type-around>.ck-widget__type-around__button:hover:after{background:linear-gradient(135deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.3));border-radius:100px;height:calc(var(--ck-widget-type-around-button-size) - 2px);width:calc(var(--ck-widget-type-around-button-size) - 2px)}.ck .ck-widget.ck-widget_with-selection-handle>.ck-widget__type-around>.ck-widget__type-around__button_before{margin-left:20px}.ck .ck-widget .ck-widget__type-around__fake-caret{animation:ck-widget-type-around-fake-caret-pulse 1s linear infinite normal forwards;background:var(--ck-color-base-text);height:1px;outline:1px solid hsla(0,0%,100%,.5);pointer-events:none}.ck .ck-widget.ck-widget_selected.ck-widget_type-around_show-fake-caret_after,.ck .ck-widget.ck-widget_selected.ck-widget_type-around_show-fake-caret_before{outline-color:transparent}.ck .ck-widget.ck-widget_type-around_show-fake-caret_after.ck-widget_selected:hover,.ck .ck-widget.ck-widget_type-around_show-fake-caret_before.ck-widget_selected:hover{outline-color:var(--ck-color-widget-hover-border)}.ck .ck-widget.ck-widget_type-around_show-fake-caret_after>.ck-widget__type-around>.ck-widget__type-around__button,.ck .ck-widget.ck-widget_type-around_show-fake-caret_before>.ck-widget__type-around>.ck-widget__type-around__button{opacity:0;pointer-events:none}.ck .ck-widget.ck-widget_type-around_show-fake-caret_after.ck-widget_with-selection-handle.ck-widget_selected:hover>.ck-widget__selection-handle,.ck .ck-widget.ck-widget_type-around_show-fake-caret_after.ck-widget_with-selection-handle.ck-widget_selected>.ck-widget__selection-handle,.ck .ck-widget.ck-widget_type-around_show-fake-caret_before.ck-widget_with-selection-handle.ck-widget_selected:hover>.ck-widget__selection-handle,.ck .ck-widget.ck-widget_type-around_show-fake-caret_before.ck-widget_with-selection-handle.ck-widget_selected>.ck-widget__selection-handle{opacity:0}.ck .ck-widget.ck-widget_type-around_show-fake-caret_after.ck-widget_selected.ck-widget_with-resizer>.ck-widget__resizer,.ck .ck-widget.ck-widget_type-around_show-fake-caret_before.ck-widget_selected.ck-widget_with-resizer>.ck-widget__resizer{opacity:0}.ck[dir=rtl] .ck-widget.ck-widget_with-selection-handle .ck-widget__type-around>.ck-widget__type-around__button_before{margin-left:0;margin-right:20px}.ck-editor__nested-editable.ck-editor__editable_selected .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button,.ck-editor__nested-editable.ck-editor__editable_selected .ck-widget:hover>.ck-widget__type-around>.ck-widget__type-around__button{opacity:0;pointer-events:none}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button:not(:hover){background:var(--ck-color-widget-type-around-button-blurred-editable)}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected>.ck-widget__type-around>.ck-widget__type-around__button:not(:hover) svg *{stroke:#999}@keyframes ck-widget-type-around-arrow-dash{0%{stroke-dashoffset:10}20%,to{stroke-dashoffset:0}}@keyframes ck-widget-type-around-arrow-tip-dash{0%,20%{stroke-dashoffset:7}40%,to{stroke-dashoffset:0}}@keyframes ck-widget-type-around-button-sonar{0%{box-shadow:0 0 0 0 hsla(var(--ck-color-focus-border-coordinates),var(--ck-color-widget-type-around-button-radar-start-alpha))}50%{box-shadow:0 0 0 5px hsla(var(--ck-color-focus-border-coordinates),var(--ck-color-widget-type-around-button-radar-end-alpha))}to{box-shadow:0 0 0 5px hsla(var(--ck-color-focus-border-coordinates),var(--ck-color-widget-type-around-button-radar-start-alpha))}}@keyframes ck-widget-type-around-fake-caret-pulse{0%{opacity:1}49%{opacity:1}50%{opacity:0}99%{opacity:0}to{opacity:1}}',"",{version:3,sources:["webpack://./node_modules/@ckeditor/ckeditor5-widget/theme/widgettypearound.css","webpack://./node_modules/@ckeditor/ckeditor5-theme-lark/theme/ckeditor5-widget/widgettypearound.css"],names:[],mappings:"AASC,+CACC,aAAc,CAEd,eAAgB,CADhB,iBAAkB,CAElB,2BAwBD,CAtBC,mDAGC,QAAS,CAFT,iBAAkB,CAClB,OAAQ,CAER,qCACD,CAEA,qFAGC,kBAAoB,CADpB,gDAAoD,CAGpD,0BACD,CAEA,oFAEC,mDAAuD,CACvD,mBAAqB,CAErB,yBACD,CAUA,mLACC,UAAW,CACX,aAAc,CAGd,QAAS,CAFT,iBAAkB,CAClB,OAAQ,CAER,qCACD,CAMD,2EACC,YAAa,CAEb,MAAO,CADP,iBAAkB,CAElB,OACD,CAOA,iFACC,gDAAqD,CACrD,iDACD,CAKA,wHAEC,aAAc,CADd,qDAED,CAKA,uHACC,wDAA6D,CAC7D,aACD,CAoBD,mOACC,YACD,CC3GA,MACC,wCAAyC,CACzC,wEAAyE,CACzE,8EAA+E,CAC/E,2FAA4F,CAC5F,wDAAyD,CACzD,uDAAwD,CACxD,yEACD,CAgBC,+CAGC,oDAAqD,CACrD,mBAAoB,CAFpB,+CAAgD,CAVjD,SAAU,CACV,mBAAoB,CAYnB,uMAAyM,CAJzM,8CAkDD,CA1CC,mDAEC,UAAW,CAGX,cAAe,CAFf,8BAA+B,CAC/B,6BAA8B,CAH9B,UAoBD,CAdC,qDACC,mBAAoB,CACpB,mBAAoB,CAEpB,SAAU,CACV,qDAAsD,CACtD,kBAAmB,CACnB,oBAAqB,CACrB,qBACD,CAEA,wDACC,kBACD,CAGD,qDAIC,6DAcD,CARE,kEACC,oDACD,CAEA,8DACC,wDACD,CAUF,uKAvED,SAAU,CACV,mBAwEC,CAOD,gGACC,0DACD,CAOA,uKAEC,2DAQD,CANC,mLAIC,uEAAkF,CADlF,mBAAoB,CADpB,2DAA4D,CAD5D,0DAID,CAOD,8GACC,gBACD,CAKA,mDAGC,mFAAoF,CAOpF,oCAAqC,CARrC,UAAW,CAOX,oCAAwC,CARxC,mBAUD,CAOC,6JAEC,yBACD,CAUA,yKACC,iDACD,CAMA,uOAlJD,SAAU,CACV,mBAmJC,CASE,0jBACC,SACD,CASF,mPACC,SACD,CASF,uHACC,aAAc,CACd,iBACD,CAYG,iRAlMF,SAAU,CACV,mBAmME,CAQH,kIACC,qEAKD,CAHC,wIACC,WACD,CAGD,4CACC,GACC,oBACD,CACA,OACC,mBACD,CACD,CAEA,gDACC,OACC,mBACD,CACA,OACC,mBACD,CACD,CAEA,8CACC,GACC,6HACD,CACA,IACC,6HACD,CACA,GACC,+HACD,CACD,CAEA,kDACC,GACC,SACD,CACA,IACC,SACD,CACA,IACC,SACD,CACA,IACC,SACD,CACA,GACC,SACD,CACD",sourcesContent:['/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n.ck .ck-widget {\n\t/*\n\t * Styles of the type around buttons\n\t */\n\t& .ck-widget__type-around__button {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\toverflow: hidden;\n\t\tz-index: var(--ck-z-default);\n\n\t\t& svg {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\tz-index: calc(var(--ck-z-default) + 2);\n\t\t}\n\n\t\t&.ck-widget__type-around__button_before {\n\t\t\t/* Place it in the middle of the outline */\n\t\t\ttop: calc(-0.5 * var(--ck-widget-outline-thickness));\n\t\t\tleft: min(10%, 30px);\n\n\t\t\ttransform: translateY(-50%);\n\t\t}\n\n\t\t&.ck-widget__type-around__button_after {\n\t\t\t/* Place it in the middle of the outline */\n\t\t\tbottom: calc(-0.5 * var(--ck-widget-outline-thickness));\n\t\t\tright: min(10%, 30px);\n\n\t\t\ttransform: translateY(50%);\n\t\t}\n\t}\n\n\t/*\n\t * Styles for the buttons when:\n\t * - the widget is selected,\n\t * - or the button is being hovered (regardless of the widget state).\n\t */\n\t&.ck-widget_selected > .ck-widget__type-around > .ck-widget__type-around__button,\n\t& > .ck-widget__type-around > .ck-widget__type-around__button:hover {\n\t\t&::after {\n\t\t\tcontent: "";\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\ttop: 1px;\n\t\t\tleft: 1px;\n\t\t\tz-index: calc(var(--ck-z-default) + 1);\n\t\t}\n\t}\n\n\t/*\n\t * Styles for the horizontal "fake caret" which is displayed when the user navigates using the keyboard.\n\t */\n\t& > .ck-widget__type-around > .ck-widget__type-around__fake-caret {\n\t\tdisplay: none;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t}\n\n\t/*\n\t * When the widget is hovered the "fake caret" would normally be narrower than the\n\t * extra outline displayed around the widget. Let\'s extend the "fake caret" to match\n\t * the full width of the widget.\n\t */\n\t&:hover > .ck-widget__type-around > .ck-widget__type-around__fake-caret {\n\t\tleft: calc( -1 * var(--ck-widget-outline-thickness) );\n\t\tright: calc( -1 * var(--ck-widget-outline-thickness) );\n\t}\n\n\t/*\n\t * Styles for the horizontal "fake caret" when it should be displayed before the widget (backward keyboard navigation).\n\t */\n\t&.ck-widget_type-around_show-fake-caret_before > .ck-widget__type-around > .ck-widget__type-around__fake-caret {\n\t\ttop: calc( -1 * var(--ck-widget-outline-thickness) - 1px );\n\t\tdisplay: block;\n\t}\n\n\t/*\n\t * Styles for the horizontal "fake caret" when it should be displayed after the widget (forward keyboard navigation).\n\t */\n\t&.ck-widget_type-around_show-fake-caret_after > .ck-widget__type-around > .ck-widget__type-around__fake-caret {\n\t\tbottom: calc( -1 * var(--ck-widget-outline-thickness) - 1px );\n\t\tdisplay: block;\n\t}\n}\n\n/*\n * Integration with the read-only mode of the editor.\n */\n.ck.ck-editor__editable.ck-read-only .ck-widget__type-around {\n\tdisplay: none;\n}\n\n/*\n * Integration with the restricted editing mode (feature) of the editor.\n */\n.ck.ck-editor__editable.ck-restricted-editing_mode_restricted .ck-widget__type-around {\n\tdisplay: none;\n}\n\n/*\n * Integration with the #isEnabled property of the WidgetTypeAround plugin.\n */\n.ck.ck-editor__editable.ck-widget__type-around_disabled .ck-widget__type-around {\n\tdisplay: none;\n}\n','/*\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n:root {\n\t--ck-widget-type-around-button-size: 20px;\n\t--ck-color-widget-type-around-button-active: var(--ck-color-focus-border);\n\t--ck-color-widget-type-around-button-hover: var(--ck-color-widget-hover-border);\n\t--ck-color-widget-type-around-button-blurred-editable: var(--ck-color-widget-blurred-border);\n\t--ck-color-widget-type-around-button-radar-start-alpha: 0;\n\t--ck-color-widget-type-around-button-radar-end-alpha: .3;\n\t--ck-color-widget-type-around-button-icon: var(--ck-color-base-background);\n}\n\n@define-mixin ck-widget-type-around-button-visible {\n\topacity: 1;\n\tpointer-events: auto;\n}\n\n@define-mixin ck-widget-type-around-button-hidden {\n\topacity: 0;\n\tpointer-events: none;\n}\n\n.ck .ck-widget {\n\t/*\n\t * Styles of the type around buttons\n\t */\n\t& .ck-widget__type-around__button {\n\t\twidth: var(--ck-widget-type-around-button-size);\n\t\theight: var(--ck-widget-type-around-button-size);\n\t\tbackground: var(--ck-color-widget-type-around-button);\n\t\tborder-radius: 100px;\n\t\ttransition: opacity var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve), background var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve);\n\n\t\t@mixin ck-widget-type-around-button-hidden;\n\n\t\t& svg {\n\t\t\twidth: 10px;\n\t\t\theight: 8px;\n\t\t\ttransform: translate(-50%,-50%);\n\t\t\ttransition: transform .5s ease;\n\t\t\tmargin-top: 1px;\n\n\t\t\t& * {\n\t\t\t\tstroke-dasharray: 10;\n\t\t\t\tstroke-dashoffset: 0;\n\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--ck-color-widget-type-around-button-icon);\n\t\t\t\tstroke-width: 1.5px;\n\t\t\t\tstroke-linecap: round;\n\t\t\t\tstroke-linejoin: round;\n\t\t\t}\n\n\t\t\t& line {\n\t\t\t\tstroke-dasharray: 7;\n\t\t\t}\n\t\t}\n\n\t\t&:hover {\n\t\t\t/*\n\t\t\t * Display the "sonar" around the button when hovered.\n\t\t\t */\n\t\t\tanimation: ck-widget-type-around-button-sonar 1s ease infinite;\n\n\t\t\t/*\n\t\t\t * Animate active button\'s icon.\n\t\t\t */\n\t\t\t& svg {\n\t\t\t\t& polyline {\n\t\t\t\t\tanimation: ck-widget-type-around-arrow-dash 2s linear;\n\t\t\t\t}\n\n\t\t\t\t& line {\n\t\t\t\t\tanimation: ck-widget-type-around-arrow-tip-dash 2s linear;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Show type around buttons when the widget gets selected or being hovered.\n\t */\n\t&.ck-widget_selected,\n\t&:hover {\n\t\t& > .ck-widget__type-around > .ck-widget__type-around__button {\n\t\t\t@mixin ck-widget-type-around-button-visible;\n\t\t}\n\t}\n\n\t/*\n\t * Styles for the buttons when the widget is NOT selected (but the buttons are visible\n\t * and still can be hovered).\n\t */\n\t&:not(.ck-widget_selected) > .ck-widget__type-around > .ck-widget__type-around__button {\n\t\tbackground: var(--ck-color-widget-type-around-button-hover);\n\t}\n\n\t/*\n\t * Styles for the buttons when:\n\t * - the widget is selected,\n\t * - or the button is being hovered (regardless of the widget state).\n\t */\n\t&.ck-widget_selected > .ck-widget__type-around > .ck-widget__type-around__button,\n\t& > .ck-widget__type-around > .ck-widget__type-around__button:hover {\n\t\tbackground: var(--ck-color-widget-type-around-button-active);\n\n\t\t&::after {\n\t\t\twidth: calc(var(--ck-widget-type-around-button-size) - 2px);\n\t\t\theight: calc(var(--ck-widget-type-around-button-size) - 2px);\n\t\t\tborder-radius: 100px;\n\t\t\tbackground: linear-gradient(135deg, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,.3) 100%);\n\t\t}\n\t}\n\n\t/*\n\t * Styles for the "before" button when the widget has a selection handle. Because some space\n\t * is consumed by the handle, the button must be moved slightly to the right to let it breathe.\n\t */\n\t&.ck-widget_with-selection-handle > .ck-widget__type-around > .ck-widget__type-around__button_before {\n\t\tmargin-left: 20px;\n\t}\n\n\t/*\n\t * Styles for the horizontal "fake caret" which is displayed when the user navigates using the keyboard.\n\t */\n\t& .ck-widget__type-around__fake-caret {\n\t\tpointer-events: none;\n\t\theight: 1px;\n\t\tanimation: ck-widget-type-around-fake-caret-pulse linear 1s infinite normal forwards;\n\n\t\t/*\n\t\t * The semi-transparent-outline+background combo improves the contrast\n\t\t * when the background underneath the fake caret is dark.\n\t\t */\n\t\toutline: solid 1px hsla(0, 0%, 100%, .5);\n\t\tbackground: var(--ck-color-base-text);\n\t}\n\n\t/*\n\t * Styles of the widget when the "fake caret" is blinking (e.g. upon keyboard navigation).\n\t * Despite the widget being physically selected in the model, its outline should disappear.\n\t */\n\t&.ck-widget_selected {\n\t\t&.ck-widget_type-around_show-fake-caret_before,\n\t\t&.ck-widget_type-around_show-fake-caret_after {\n\t\t\toutline-color: transparent;\n\t\t}\n\t}\n\n\t&.ck-widget_type-around_show-fake-caret_before,\n\t&.ck-widget_type-around_show-fake-caret_after {\n\t\t/*\n\t\t * When the "fake caret" is visible we simulate that the widget is not selected\n\t\t * (despite being physically selected), so the outline color should be for the\n\t\t * unselected widget.\n\t\t */\n\t\t&.ck-widget_selected:hover {\n\t\t\toutline-color: var(--ck-color-widget-hover-border);\n\t\t}\n\n\t\t/*\n\t\t * Styles of the type around buttons when the "fake caret" is blinking (e.g. upon keyboard navigation).\n\t\t * In this state, the type around buttons would collide with the fake carets so they should disappear.\n\t\t */\n\t\t& > .ck-widget__type-around > .ck-widget__type-around__button {\n\t\t\t@mixin ck-widget-type-around-button-hidden;\n\t\t}\n\n\t\t/*\n\t\t * Fake horizontal caret integration with the selection handle. When the caret is visible, simply\n\t\t * hide the handle because it intersects with the caret (and does not make much sense anyway).\n\t\t */\n\t\t&.ck-widget_with-selection-handle {\n\t\t\t&.ck-widget_selected,\n\t\t\t&.ck-widget_selected:hover {\n\t\t\t\t& > .ck-widget__selection-handle {\n\t\t\t\t\topacity: 0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t * Fake horizontal caret integration with the resize UI. When the caret is visible, simply\n\t\t * hide the resize UI because it creates too much noise. It can be visible when the user\n\t\t * hovers the widget, though.\n\t\t */\n\t\t&.ck-widget_selected.ck-widget_with-resizer > .ck-widget__resizer {\n\t\t\topacity: 0\n\t\t}\n\t}\n}\n\n/*\n * Styles for the "before" button when the widget has a selection handle in an RTL environment.\n * The selection handler is aligned to the right side of the widget so there is no need to create\n * additional space for it next to the "before" button.\n */\n.ck[dir="rtl"] .ck-widget.ck-widget_with-selection-handle .ck-widget__type-around > .ck-widget__type-around__button_before {\n\tmargin-left: 0;\n\tmargin-right: 20px;\n}\n\n/*\n * Hide type around buttons when the widget is selected as a child of a selected\n * nested editable (e.g. mulit-cell table selection).\n *\n * See https://github.com/ckeditor/ckeditor5/issues/7263.\n */\n.ck-editor__nested-editable.ck-editor__editable_selected {\n\t& .ck-widget {\n\t\t&.ck-widget_selected,\n\t\t&:hover {\n\t\t\t& > .ck-widget__type-around > .ck-widget__type-around__button {\n\t\t\t\t@mixin ck-widget-type-around-button-hidden;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/*\n * Styles for the buttons when the widget is selected but the user clicked outside of the editor (blurred the editor).\n */\n.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected > .ck-widget__type-around > .ck-widget__type-around__button:not(:hover) {\n\tbackground: var(--ck-color-widget-type-around-button-blurred-editable);\n\n\t& svg * {\n\t\tstroke: hsl(0,0%,60%);\n\t}\n}\n\n@keyframes ck-widget-type-around-arrow-dash {\n\t0% {\n\t\tstroke-dashoffset: 10;\n\t}\n\t20%, 100% {\n\t\tstroke-dashoffset: 0;\n\t}\n}\n\n@keyframes ck-widget-type-around-arrow-tip-dash {\n\t0%, 20% {\n\t\tstroke-dashoffset: 7;\n\t}\n\t40%, 100% {\n\t\tstroke-dashoffset: 0;\n\t}\n}\n\n@keyframes ck-widget-type-around-button-sonar {\n\t0% {\n\t\tbox-shadow: 0 0 0 0 hsla(var(--ck-color-focus-border-coordinates), var(--ck-color-widget-type-around-button-radar-start-alpha));\n\t}\n\t50% {\n\t\tbox-shadow: 0 0 0 5px hsla(var(--ck-color-focus-border-coordinates), var(--ck-color-widget-type-around-button-radar-end-alpha));\n\t}\n\t100% {\n\t\tbox-shadow: 0 0 0 5px hsla(var(--ck-color-focus-border-coordinates), var(--ck-color-widget-type-around-button-radar-start-alpha));\n\t}\n}\n\n@keyframes ck-widget-type-around-fake-caret-pulse {\n\t0% {\n\t\topacity: 1;\n\t}\n\t49% {\n\t\topacity: 1;\n\t}\n\t50% {\n\t\topacity: 0;\n\t}\n\t99% {\n\t\topacity: 0;\n\t}\n\t100% {\n\t\topacity: 1;\n\t}\n}\n'],sourceRoot:""}]);var c=a;},645:function _(t){t.exports=function(t){var e=[];e.toString=function e(){return this.map(function(e){var n=t(e);if(e[2]){return"@media ".concat(e[2]," {").concat(n,"}");}return n;}).join("");};e.i=function(t,n,o){if(typeof t==="string"){t=[[null,t,""]];}var i={};if(o){for(var r=0;r<this.length;r++){var s=this[r][0];if(s!=null){i[s]=true;}}}for(var a=0;a<t.length;a++){var c=[].concat(t[a]);if(o&&i[c[0]]){continue;}if(n){if(!c[2]){c[2]=n;}else{c[2]="".concat(n," and ").concat(c[2]);}}e.push(c);}};return e;};},15:function _(t){function e(t,e){return s(t)||r(t,e)||o(t,e)||n();}function n(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function o(t,e){if(!t)return;if(typeof t==="string")return i(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor)n=t.constructor.name;if(n==="Map"||n==="Set")return Array.from(t);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(t,e);}function i(t,e){if(e==null||e>t.length)e=t.length;for(var n=0,o=new Array(e);n<e;n++){o[n]=t[n];}return o;}function r(t,e){var n=t&&(typeof Symbol!=="undefined"&&t[Symbol.iterator]||t["@@iterator"]);if(n==null)return;var o=[];var i=true;var r=false;var s,a;try{for(n=n.call(t);!(i=(s=n.next()).done);i=true){o.push(s.value);if(e&&o.length===e)break;}}catch(t){r=true;a=t;}finally{try{if(!i&&n["return"]!=null)n["return"]();}finally{if(r)throw a;}}return o;}function s(t){if(Array.isArray(t))return t;}t.exports=function t(n){var o=e(n,4),i=o[1],r=o[3];if(!r){return i;}if(typeof btoa==="function"){var s=btoa(unescape(encodeURIComponent(JSON.stringify(r))));var a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s);var c="/*# ".concat(a," */");var l=r.sources.map(function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */");});return[i].concat(l).concat([c]).join("\n");}return[i].join("\n");};},379:function _(t,e,n){var o=function t(){var e;return function t(){if(typeof e==="undefined"){e=Boolean(window&&document&&document.all&&!window.atob);}return e;};}();var i=function t(){var e={};return function t(n){if(typeof e[n]==="undefined"){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement){try{o=o.contentDocument.head;}catch(t){o=null;}}e[n]=o;}return e[n];};}();var r=[];function s(t){var e=-1;for(var n=0;n<r.length;n++){if(r[n].identifier===t){e=n;break;}}return e;}function a(t,e){var n={};var o=[];for(var i=0;i<t.length;i++){var a=t[i];var c=e.base?a[0]+e.base:a[0];var l=n[c]||0;var d="".concat(c," ").concat(l);n[c]=l+1;var h=s(d);var u={css:a[1],media:a[2],sourceMap:a[3]};if(h!==-1){r[h].references++;r[h].updater(u);}else{r.push({identifier:d,updater:p(u,e),references:1});}o.push(d);}return o;}function c(t){var e=document.createElement("style");var o=t.attributes||{};if(typeof o.nonce==="undefined"){var r=true?n.nc:0;if(r){o.nonce=r;}}Object.keys(o).forEach(function(t){e.setAttribute(t,o[t]);});if(typeof t.insert==="function"){t.insert(e);}else{var s=i(t.insert||"head");if(!s){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");}s.appendChild(e);}return e;}function l(t){if(t.parentNode===null){return false;}t.parentNode.removeChild(t);}var d=function t(){var e=[];return function t(n,o){e[n]=o;return e.filter(Boolean).join("\n");};}();function h(t,e,n,o){var i=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet){t.styleSheet.cssText=d(e,i);}else{var r=document.createTextNode(i);var s=t.childNodes;if(s[e]){t.removeChild(s[e]);}if(s.length){t.insertBefore(r,s[e]);}else{t.appendChild(r);}}}function u(t,e,n){var o=n.css;var i=n.media;var r=n.sourceMap;if(i){t.setAttribute("media",i);}else{t.removeAttribute("media");}if(r&&typeof btoa!=="undefined"){o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */");}if(t.styleSheet){t.styleSheet.cssText=o;}else{while(t.firstChild){t.removeChild(t.firstChild);}t.appendChild(document.createTextNode(o));}}var f=null;var g=0;function p(t,e){var n;var o;var i;if(e.singleton){var r=g++;n=f||(f=c(e));o=h.bind(null,n,r,false);i=h.bind(null,n,r,true);}else{n=c(e);o=u.bind(null,n,e);i=function t(){l(n);};}o(t);return function e(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap){return;}o(t=n);}else{i();}};}t.exports=function(t,e){e=e||{};if(!e.singleton&&typeof e.singleton!=="boolean"){e.singleton=o();}t=t||[];var n=a(t,e);return function t(o){o=o||[];if(Object.prototype.toString.call(o)!=="[object Array]"){return;}for(var i=0;i<n.length;i++){var c=n[i];var l=s(c);r[l].references--;}var d=a(o,e);for(var h=0;h<n.length;h++){var u=n[h];var f=s(u);if(r[f].references===0){r[f].updater();r.splice(f,1);}}n=d;};};}};var e={};function n(o){var i=e[o];if(i!==undefined){return i.exports;}var r=e[o]={id:o,exports:{}};t[o](r,r.exports,n);return r.exports;}(function(){n.n=function(t){var e=t&&t.__esModule?function(){return t["default"];}:function(){return t;};n.d(e,{a:e});return e;};})();(function(){n.d=function(t,e){for(var o in e){if(n.o(e,o)&&!n.o(t,o)){Object.defineProperty(t,o,{enumerable:true,get:e[o]});}}};})();(function(){n.g=function(){if((typeof globalThis==="undefined"?"undefined":_typeof(globalThis))==="object")return globalThis;try{return this||new Function("return this")();}catch(t){if((typeof window==="undefined"?"undefined":_typeof(window))==="object")return window;}}();})();(function(){n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e);};})();var o={};(function(){var _marked=/*#__PURE__*/regeneratorRuntime.mark(jm),_marked2=/*#__PURE__*/regeneratorRuntime.mark(qm),_marked3=/*#__PURE__*/regeneratorRuntime.mark(Xm),_marked4=/*#__PURE__*/regeneratorRuntime.mark(tk),_marked6=/*#__PURE__*/regeneratorRuntime.mark(ix);n.d(o,{default:function _default(){return PT;}});function t(){return function t(){t.called=true;};}var e=t;var i=/*#__PURE__*/_createClass(function i(t,n){_classCallCheck(this,i);this.source=t;this.name=n;this.path=[];this.stop=e();this.off=e();});var r=new Array(256).fill().map(function(t,e){return("0"+e.toString(16)).slice(-2);});function s(){var t=Math.random()*4294967296>>>0;var e=Math.random()*4294967296>>>0;var n=Math.random()*4294967296>>>0;var o=Math.random()*4294967296>>>0;return"e"+r[t>>0&255]+r[t>>8&255]+r[t>>16&255]+r[t>>24&255]+r[e>>0&255]+r[e>>8&255]+r[e>>16&255]+r[e>>24&255]+r[n>>0&255]+r[n>>8&255]+r[n>>16&255]+r[n>>24&255]+r[o>>0&255]+r[o>>8&255]+r[o>>16&255]+r[o>>24&255];}var a={get:function get(t){if(typeof t!="number"){return this[t]||this.normal;}else{return t;}},highest:1e5,high:1e3,normal:0,low:-1e3,lowest:-1e5};var c=a;function l(t,e){var n=c.get(e.priority);for(var _o2=0;_o2<t.length;_o2++){if(c.get(t[_o2].priority)<n){t.splice(_o2,0,e);return;}}t.push(e);}var d="https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html";var h=/*#__PURE__*/function(_Error){_inherits(h,_Error);var _super=_createSuper(h);function h(t,e,n){var _this;_classCallCheck(this,h);_this=_super.call(this,p(t,n));_this.name="CKEditorError";_this.context=e;_this.data=n;return _this;}_createClass(h,[{key:"is",value:function is(t){return t==="CKEditorError";}}],[{key:"rethrowUnexpectedError",value:function rethrowUnexpectedError(t,e){if(t.is&&t.is("CKEditorError")){throw t;}var n=new h(t.message,e);n.stack=t.stack;throw n;}}]);return h;}(/*#__PURE__*/_wrapNativeSuper(Error));function u(t,e){var _console;(_console=console).warn.apply(_console,_toConsumableArray(m(t,e)));}function f(t,e){var _console2;(_console2=console).error.apply(_console2,_toConsumableArray(m(t,e)));}function g(t){return"\nRead more: ".concat(d,"#error-").concat(t);}function p(t,e){var n=new WeakSet();var o=function o(t,e){if(_typeof(e)==="object"&&e!==null){if(n.has(e)){return"[object ".concat(e.constructor.name,"]");}n.add(e);}return e;};var i=e?" ".concat(JSON.stringify(e,o)):"";var r=g(t);return t+i+r;}function m(t,e){var n=g(t);return e?[t,e,n]:[t,n];}var k="34.0.0";var b=null&&k;var w=(typeof window==="undefined"?"undefined":_typeof(window))==="object"?window:n.g;if(w.CKEDITOR_VERSION){throw new h("ckeditor-duplicated-modules",null);}else{w.CKEDITOR_VERSION=k;}var _=Symbol("listeningTo");var v=Symbol("emitterId");var A={on:function on(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};this.listenTo(this,t,e,n);},once:function once(t,e,n){var o=false;var i=function i(t){if(!o){o=true;t.off();for(var _len=arguments.length,n=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){n[_key-1]=arguments[_key];}e.call.apply(e,[this,t].concat(n));}};this.listenTo(this,t,i,n);},off:function off(t,e){this.stopListening(this,t,e);},listenTo:function listenTo(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var i,r;if(!this[_]){this[_]={};}var s=this[_];if(!E(t)){x(t);}var a=E(t);if(!(i=s[a])){i=s[a]={emitter:t,callbacks:{}};}if(!(r=i.callbacks[e])){r=i.callbacks[e]=[];}r.push(n);R(this,t,e,n,o);},stopListening:function stopListening(t,e,n){var o=this[_];var i=t&&E(t);var r=o&&i&&o[i];var s=r&&e&&r.callbacks[e];if(!o||t&&!r||e&&!s){return;}if(n){O(this,t,e,n);var _o3=s.indexOf(n);if(_o3!==-1){if(s.length===1){delete r.callbacks[e];}else{O(this,t,e,n);}}}else if(s){while(n=s.pop()){O(this,t,e,n);}delete r.callbacks[e];}else if(r){for(e in r.callbacks){this.stopListening(t,e);}delete o[i];}else{for(i in o){this.stopListening(o[i].emitter);}delete this[_];}},fire:function fire(t){try{var _n2=t instanceof i?t:new i(this,t);var _o4=_n2.name;var _r2=B(this,_o4);_n2.path.push(this);for(var _len2=arguments.length,e=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){e[_key2-1]=arguments[_key2];}if(_r2){var _t2=[_n2].concat(e);_r2=Array.from(_r2);for(var _e2=0;_e2<_r2.length;_e2++){_r2[_e2].callback.apply(this,_t2);if(_n2.off.called){delete _n2.off.called;this._removeEventListener(_o4,_r2[_e2].callback);}if(_n2.stop.called){break;}}}if(this._delegations){var _t3=this._delegations.get(_o4);var _i2=this._delegations.get("*");if(_t3){I(_t3,_n2,e);}if(_i2){I(_i2,_n2,e);}}return _n2.return;}catch(t){h.rethrowUnexpectedError(t,this);}},delegate:function delegate(){var _this2=this;for(var _len3=arguments.length,t=new Array(_len3),_key3=0;_key3<_len3;_key3++){t[_key3]=arguments[_key3];}return{to:function to(e,n){if(!_this2._delegations){_this2._delegations=new Map();}t.forEach(function(t){var o=_this2._delegations.get(t);if(!o){_this2._delegations.set(t,new Map([[e,n]]));}else{o.set(e,n);}});}};},stopDelegating:function stopDelegating(t,e){if(!this._delegations){return;}if(!t){this._delegations.clear();}else if(!e){this._delegations.delete(t);}else{var _n3=this._delegations.get(t);if(_n3){_n3.delete(e);}}},_addEventListener:function _addEventListener(t,e,n){P(this,t);var o=T(this,t);var i=c.get(n.priority);var r={callback:e,priority:i};var _iterator=_createForOfIteratorHelper(o),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _t4=_step.value;l(_t4,r);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},_removeEventListener:function _removeEventListener(t,e){var n=T(this,t);var _iterator2=_createForOfIteratorHelper(n),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _t5=_step2.value;for(var _n4=0;_n4<_t5.length;_n4++){if(_t5[_n4].callback==e){_t5.splice(_n4,1);_n4--;}}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}};var C=A;function y(t,e){if(t[_]&&t[_][e]){return t[_][e].emitter;}return null;}function x(t,e){if(!t[v]){t[v]=e||s();}}function E(t){return t[v];}function D(t){if(!t._events){Object.defineProperty(t,"_events",{value:{}});}return t._events;}function S(){return{callbacks:[],childEvents:[]};}function P(t,e){var n=D(t);if(n[e]){return;}var o=e;var i=null;var r=[];while(o!==""){if(n[o]){break;}n[o]=S();r.push(n[o]);if(i){n[o].childEvents.push(i);}i=o;o=o.substr(0,o.lastIndexOf(":"));}if(o!==""){var _iterator3=_createForOfIteratorHelper(r),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _t6=_step3.value;_t6.callbacks=n[o].callbacks.slice();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}n[o].childEvents.push(i);}}function T(t,e){var n=D(t)[e];if(!n){return[];}var o=[n.callbacks];for(var _e3=0;_e3<n.childEvents.length;_e3++){var _i3=T(t,n.childEvents[_e3]);o=o.concat(_i3);}return o;}function B(t,e){var n;if(!t._events||!(n=t._events[e])||!n.callbacks.length){if(e.indexOf(":")>-1){return B(t,e.substr(0,e.lastIndexOf(":")));}else{return null;}}return n.callbacks;}function I(t,e,n){var _iterator4=_createForOfIteratorHelper(t),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2),_o5=_step4$value[0],_r3=_step4$value[1];if(!_r3){_r3=e.name;}else if(typeof _r3=="function"){_r3=_r3(e.name);}var _t7=new i(e.source,_r3);_t7.path=_toConsumableArray(e.path);_o5.fire.apply(_o5,[_t7].concat(_toConsumableArray(n)));}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}function R(t,e,n,o,i){if(e._addEventListener){e._addEventListener(n,o,i);}else{t._addEventListener.call(e,n,o,i);}}function O(t,e,n,o){if(e._removeEventListener){e._removeEventListener(n,o);}else{t._removeEventListener.call(e,n,o);}}function z(t){var e=_typeof(t);return t!=null&&(e=="object"||e=="function");}var M=z;var N=(typeof global==="undefined"?"undefined":_typeof(global))=="object"&&global&&global.Object===Object&&global;var F=N;var V=(typeof self==="undefined"?"undefined":_typeof(self))=="object"&&self&&self.Object===Object&&self;var L=F||V||Function("return this")();var H=L;var j=H.Symbol;var q=j;var W=Object.prototype;var K=W.hasOwnProperty;var G=W.toString;var $=q?q.toStringTag:undefined;function U(t){var e=K.call(t,$),n=t[$];try{t[$]=undefined;var o=true;}catch(t){}var i=G.call(t);if(o){if(e){t[$]=n;}else{delete t[$];}}return i;}var J=U;var Z=Object.prototype;var Y=Z.toString;function Q(t){return Y.call(t);}var X=Q;var tt="[object Null]",et="[object Undefined]";var nt=q?q.toStringTag:undefined;function ot(t){if(t==null){return t===undefined?et:tt;}return nt&&nt in Object(t)?J(t):X(t);}var it=ot;var rt="[object AsyncFunction]",st="[object Function]",at="[object GeneratorFunction]",ct="[object Proxy]";function lt(t){if(!M(t)){return false;}var e=it(t);return e==st||e==at||e==rt||e==ct;}var dt=lt;var ht=H["__core-js_shared__"];var ut=ht;var ft=function(){var t=/[^.]+$/.exec(ut&&ut.keys&&ut.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:"";}();function gt(t){return!!ft&&ft in t;}var pt=gt;var mt=Function.prototype;var kt=mt.toString;function bt(t){if(t!=null){try{return kt.call(t);}catch(t){}try{return t+"";}catch(t){}}return"";}var wt=bt;var _t=/[\\^$.*+?()[\]{}|]/g;var vt=/^\[object .+?Constructor\]$/;var At=Function.prototype,Ct=Object.prototype;var yt=At.toString;var xt=Ct.hasOwnProperty;var Et=RegExp("^"+yt.call(xt).replace(_t,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function Dt(t){if(!M(t)||pt(t)){return false;}var e=dt(t)?Et:vt;return e.test(wt(t));}var St=Dt;function Pt(t,e){return t==null?undefined:t[e];}var Tt=Pt;function Bt(t,e){var n=Tt(t,e);return St(n)?n:undefined;}var It=Bt;var Rt=function(){try{var t=It(Object,"defineProperty");t({},"",{});return t;}catch(t){}}();var Ot=Rt;function zt(t,e,n){if(e=="__proto__"&&Ot){Ot(t,e,{configurable:true,enumerable:true,value:n,writable:true});}else{t[e]=n;}}var Mt=zt;function Nt(t,e){return t===e||t!==t&&e!==e;}var Ft=Nt;var Vt=Object.prototype;var Lt=Vt.hasOwnProperty;function Ht(t,e,n){var o=t[e];if(!(Lt.call(t,e)&&Ft(o,n))||n===undefined&&!(e in t)){Mt(t,e,n);}}var jt=Ht;function qt(t,e,n,o){var i=!n;n||(n={});var r=-1,s=e.length;while(++r<s){var a=e[r];var c=o?o(n[a],t[a],a,n,t):undefined;if(c===undefined){c=t[a];}if(i){Mt(n,a,c);}else{jt(n,a,c);}}return n;}var Wt=qt;function Kt(t){return t;}var Gt=Kt;function $t(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2]);}return t.apply(e,n);}var Ut=$t;var Jt=Math.max;function Zt(t,e,n){e=Jt(e===undefined?t.length-1:e,0);return function(){var o=arguments,i=-1,r=Jt(o.length-e,0),s=Array(r);while(++i<r){s[i]=o[e+i];}i=-1;var a=Array(e+1);while(++i<e){a[i]=o[i];}a[e]=n(s);return Ut(t,this,a);};}var Yt=Zt;function Qt(t){return function(){return t;};}var Xt=Qt;var te=!Ot?Gt:function(t,e){return Ot(t,"toString",{configurable:true,enumerable:false,value:Xt(e),writable:true});};var ee=te;var ne=800,oe=16;var ie=Date.now;function re(t){var e=0,n=0;return function(){var o=ie(),i=oe-(o-n);n=o;if(i>0){if(++e>=ne){return arguments[0];}}else{e=0;}return t.apply(undefined,arguments);};}var se=re;var ae=se(ee);var ce=ae;function le(t,e){return ce(Yt(t,e,Gt),t+"");}var de=le;var he=9007199254740991;function ue(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=he;}var fe=ue;function ge(t){return t!=null&&fe(t.length)&&!dt(t);}var pe=ge;var me=9007199254740991;var ke=/^(?:0|[1-9]\d*)$/;function be(t,e){var n=_typeof(t);e=e==null?me:e;return!!e&&(n=="number"||n!="symbol"&&ke.test(t))&&t>-1&&t%1==0&&t<e;}var we=be;function _e(t,e,n){if(!M(n)){return false;}var o=_typeof(e);if(o=="number"?pe(n)&&we(e,n.length):o=="string"&&e in n){return Ft(n[e],t);}return false;}var ve=_e;function Ae(t){return de(function(e,n){var o=-1,i=n.length,r=i>1?n[i-1]:undefined,s=i>2?n[2]:undefined;r=t.length>3&&typeof r=="function"?(i--,r):undefined;if(s&&ve(n[0],n[1],s)){r=i<3?undefined:r;i=1;}e=Object(e);while(++o<i){var a=n[o];if(a){t(e,a,o,r);}}return e;});}var Ce=Ae;function ye(t,e){var n=-1,o=Array(t);while(++n<t){o[n]=e(n);}return o;}var xe=ye;function Ee(t){return t!=null&&_typeof(t)=="object";}var De=Ee;var Se="[object Arguments]";function Pe(t){return De(t)&&it(t)==Se;}var Te=Pe;var Be=Object.prototype;var Ie=Be.hasOwnProperty;var Re=Be.propertyIsEnumerable;var Oe=Te(function(){return arguments;}())?Te:function(t){return De(t)&&Ie.call(t,"callee")&&!Re.call(t,"callee");};var ze=Oe;var Me=Array.isArray;var Ne=Me;function Fe(){return false;}var Ve=Fe;var Le=(typeof exports==="undefined"?"undefined":_typeof(exports))=="object"&&exports&&!exports.nodeType&&exports;var He=Le&&(typeof module==="undefined"?"undefined":_typeof(module))=="object"&&module&&!module.nodeType&&module;var je=He&&He.exports===Le;var qe=je?H.Buffer:undefined;var We=qe?qe.isBuffer:undefined;var Ke=We||Ve;var Ge=Ke;var $e="[object Arguments]",Ue="[object Array]",Je="[object Boolean]",Ze="[object Date]",Ye="[object Error]",Qe="[object Function]",Xe="[object Map]",tn="[object Number]",en="[object Object]",nn="[object RegExp]",on="[object Set]",rn="[object String]",sn="[object WeakMap]";var an="[object ArrayBuffer]",cn="[object DataView]",ln="[object Float32Array]",dn="[object Float64Array]",hn="[object Int8Array]",un="[object Int16Array]",fn="[object Int32Array]",gn="[object Uint8Array]",pn="[object Uint8ClampedArray]",mn="[object Uint16Array]",kn="[object Uint32Array]";var bn={};bn[ln]=bn[dn]=bn[hn]=bn[un]=bn[fn]=bn[gn]=bn[pn]=bn[mn]=bn[kn]=true;bn[$e]=bn[Ue]=bn[an]=bn[Je]=bn[cn]=bn[Ze]=bn[Ye]=bn[Qe]=bn[Xe]=bn[tn]=bn[en]=bn[nn]=bn[on]=bn[rn]=bn[sn]=false;function wn(t){return De(t)&&fe(t.length)&&!!bn[it(t)];}var _n=wn;function vn(t){return function(e){return t(e);};}var An=vn;var Cn=(typeof exports==="undefined"?"undefined":_typeof(exports))=="object"&&exports&&!exports.nodeType&&exports;var yn=Cn&&(typeof module==="undefined"?"undefined":_typeof(module))=="object"&&module&&!module.nodeType&&module;var xn=yn&&yn.exports===Cn;var En=xn&&F.process;var Dn=function(){try{var t=yn&&yn.require&&yn.require("util").types;if(t){return t;}return En&&En.binding&&En.binding("util");}catch(t){}}();var Sn=Dn;var Pn=Sn&&Sn.isTypedArray;var Tn=Pn?An(Pn):_n;var Bn=Tn;var In=Object.prototype;var Rn=In.hasOwnProperty;function On(t,e){var n=Ne(t),o=!n&&ze(t),i=!n&&!o&&Ge(t),r=!n&&!o&&!i&&Bn(t),s=n||o||i||r,a=s?xe(t.length,String):[],c=a.length;for(var l in t){if((e||Rn.call(t,l))&&!(s&&(l=="length"||i&&(l=="offset"||l=="parent")||r&&(l=="buffer"||l=="byteLength"||l=="byteOffset")||we(l,c)))){a.push(l);}}return a;}var zn=On;var Mn=Object.prototype;function Nn(t){var e=t&&t.constructor,n=typeof e=="function"&&e.prototype||Mn;return t===n;}var Fn=Nn;function Vn(t){var e=[];if(t!=null){for(var n in Object(t)){e.push(n);}}return e;}var Ln=Vn;var Hn=Object.prototype;var jn=Hn.hasOwnProperty;function qn(t){if(!M(t)){return Ln(t);}var e=Fn(t),n=[];for(var o in t){if(!(o=="constructor"&&(e||!jn.call(t,o)))){n.push(o);}}return n;}var Wn=qn;function Kn(t){return pe(t)?zn(t,true):Wn(t);}var Gn=Kn;var $n=Ce(function(t,e){Wt(e,Gn(e),t);});var Un=$n;var Jn=Symbol("observableProperties");var Zn=Symbol("boundObservables");var Yn=Symbol("boundProperties");var Qn=Symbol("decoratedMethods");var Xn=Symbol("decoratedOriginal");var to={set:function set(t,e){var _this3=this;if(M(t)){Object.keys(t).forEach(function(e){_this3.set(e,t[e]);},this);return;}no(this);var n=this[Jn];if(t in this&&!n.has(t)){throw new h("observable-set-cannot-override",this);}Object.defineProperty(this,t,{enumerable:true,configurable:true,get:function get(){return n.get(t);},set:function set(e){var o=n.get(t);var i=this.fire("set:"+t,t,e,o);if(i===undefined){i=e;}if(o!==i||!n.has(t)){n.set(t,i);this.fire("change:"+t,t,i,o);}}});this[t]=e;},bind:function bind(){var _this4=this;for(var _len4=arguments.length,t=new Array(_len4),_key4=0;_key4<_len4;_key4++){t[_key4]=arguments[_key4];}if(!t.length||!so(t)){throw new h("observable-bind-wrong-properties",this);}if(new Set(t).size!==t.length){throw new h("observable-bind-duplicate-properties",this);}no(this);var e=this[Yn];t.forEach(function(t){if(e.has(t)){throw new h("observable-bind-rebind",_this4);}});var n=new Map();t.forEach(function(t){var o={property:t,to:[]};e.set(t,o);n.set(t,o);});return{to:oo,toMany:io,_observable:this,_bindProperties:t,_to:[],_bindings:n};},unbind:function unbind(){var _this5=this;if(!this[Jn]){return;}var e=this[Yn];var n=this[Zn];for(var _len5=arguments.length,t=new Array(_len5),_key5=0;_key5<_len5;_key5++){t[_key5]=arguments[_key5];}if(t.length){if(!so(t)){throw new h("observable-unbind-wrong-properties",this);}t.forEach(function(t){var o=e.get(t);if(!o){return;}var i,r,s,a;o.to.forEach(function(t){i=t[0];r=t[1];s=n.get(i);a=s[r];a.delete(o);if(!a.size){delete s[r];}if(!Object.keys(s).length){n.delete(i);_this5.stopListening(i,"change");}});e.delete(t);});}else{n.forEach(function(t,e){_this5.stopListening(e,"change");});n.clear();e.clear();}},decorate:function decorate(t){var _this6=this;var e=this[t];if(!e){throw new h("observablemixin-cannot-decorate-undefined",this,{object:this,methodName:t});}this.on(t,function(t,n){t.return=e.apply(_this6,n);});this[t]=function(){for(var _len6=arguments.length,e=new Array(_len6),_key6=0;_key6<_len6;_key6++){e[_key6]=arguments[_key6];}return this.fire(t,e);};this[t][Xn]=e;if(!this[Qn]){this[Qn]=[];}this[Qn].push(t);}};Un(to,C);to.stopListening=function(t,e,n){if(!t&&this[Qn]){var _iterator5=_createForOfIteratorHelper(this[Qn]),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _t8=_step5.value;this[_t8]=this[_t8][Xn];}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}delete this[Qn];}C.stopListening.call(this,t,e,n);};var eo=to;function no(t){if(t[Jn]){return;}Object.defineProperty(t,Jn,{value:new Map()});Object.defineProperty(t,Zn,{value:new Map()});Object.defineProperty(t,Yn,{value:new Map()});}function oo(){var _this7=this;var e=ao.apply(void 0,arguments);var n=Array.from(this._bindings.keys());var o=n.length;if(!e.callback&&e.to.length>1){throw new h("observable-bind-to-no-callback",this);}if(o>1&&e.callback){throw new h("observable-bind-to-extra-callback",this);}e.to.forEach(function(t){if(t.properties.length&&t.properties.length!==o){throw new h("observable-bind-to-properties-length",_this7);}if(!t.properties.length){t.properties=_this7._bindProperties;}});this._to=e.to;if(e.callback){this._bindings.get(n[0]).callback=e.callback;}uo(this._observable,this._to);lo(this);this._bindProperties.forEach(function(t){ho(_this7._observable,t);});}function io(t,e,n){if(this._bindings.size>1){throw new h("observable-bind-to-many-not-one-binding",this);}this.to.apply(this,_toConsumableArray(ro(t,e)).concat([n]));}function ro(t,e){var n=t.map(function(t){return[t,e];});return Array.prototype.concat.apply([],n);}function so(t){return t.every(function(t){return typeof t=="string";});}function ao(){for(var _len7=arguments.length,t=new Array(_len7),_key7=0;_key7<_len7;_key7++){t[_key7]=arguments[_key7];}if(!t.length){throw new h("observable-bind-to-parse-error",null);}var e={to:[]};var n;if(typeof t[t.length-1]=="function"){e.callback=t.pop();}t.forEach(function(t){if(typeof t=="string"){n.properties.push(t);}else if(_typeof(t)=="object"){n={observable:t,properties:[]};e.to.push(n);}else{throw new h("observable-bind-to-parse-error",null);}});return e;}function co(t,e,n,o){var i=t[Zn];var r=i.get(n);var s=r||{};if(!s[o]){s[o]=new Set();}s[o].add(e);if(!r){i.set(n,s);}}function lo(t){var e;t._bindings.forEach(function(n,o){t._to.forEach(function(i){e=i.properties[n.callback?0:t._bindProperties.indexOf(o)];n.to.push([i.observable,e]);co(t._observable,n,i.observable,e);});});}function ho(t,e){var n=t[Yn];var o=n.get(e);var i;if(o.callback){i=o.callback.apply(t,o.to.map(function(t){return t[0][t[1]];}));}else{i=o.to[0];i=i[0][i[1]];}if(Object.prototype.hasOwnProperty.call(t,e)){t[e]=i;}else{t.set(e,i);}}function uo(t,e){e.forEach(function(e){var n=t[Zn];var o;if(!n.get(e.observable)){t.listenTo(e.observable,"change",function(i,r){o=n.get(e.observable)[r];if(o){o.forEach(function(e){ho(t,e.property);});}});}});}function fo(t){for(var _len8=arguments.length,e=new Array(_len8>1?_len8-1:0),_key8=1;_key8<_len8;_key8++){e[_key8-1]=arguments[_key8];}e.forEach(function(e){Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e)).forEach(function(n){if(n in t.prototype){return;}var o=Object.getOwnPropertyDescriptor(e,n);o.enumerable=false;Object.defineProperty(t.prototype,n,o);});});}var go=/*#__PURE__*/function(){function go(t){_classCallCheck(this,go);this.editor=t;this.set("isEnabled",true);this._disableStack=new Set();}_createClass(go,[{key:"forceDisabled",value:function forceDisabled(t){this._disableStack.add(t);if(this._disableStack.size==1){this.on("set:isEnabled",po,{priority:"highest"});this.isEnabled=false;}}},{key:"clearForceDisabled",value:function clearForceDisabled(t){this._disableStack.delete(t);if(this._disableStack.size==0){this.off("set:isEnabled",po);this.isEnabled=true;}}},{key:"destroy",value:function destroy(){this.stopListening();}}],[{key:"isContextPlugin",get:function get(){return false;}}]);return go;}();fo(go,eo);function po(t){t.return=false;t.stop();}var mo=/*#__PURE__*/function(){function mo(t){var _this8=this;_classCallCheck(this,mo);this.editor=t;this.set("value",undefined);this.set("isEnabled",false);this.affectsData=true;this._disableStack=new Set();this.decorate("execute");this.listenTo(this.editor.model.document,"change",function(){_this8.refresh();});this.on("execute",function(t){if(!_this8.isEnabled){t.stop();}},{priority:"high"});this.listenTo(t,"change:isReadOnly",function(t,e,n){if(n&&_this8.affectsData){_this8.forceDisabled("readOnlyMode");}else{_this8.clearForceDisabled("readOnlyMode");}});}_createClass(mo,[{key:"refresh",value:function refresh(){this.isEnabled=true;}},{key:"forceDisabled",value:function forceDisabled(t){this._disableStack.add(t);if(this._disableStack.size==1){this.on("set:isEnabled",ko,{priority:"highest"});this.isEnabled=false;}}},{key:"clearForceDisabled",value:function clearForceDisabled(t){this._disableStack.delete(t);if(this._disableStack.size==0){this.off("set:isEnabled",ko);this.refresh();}}},{key:"execute",value:function execute(){}},{key:"destroy",value:function destroy(){this.stopListening();}}]);return mo;}();fo(mo,eo);function ko(t){t.return=false;t.stop();}var bo=/*#__PURE__*/function(_ref){_inherits(bo,_ref);var _super2=_createSuper(bo);function bo(t){var _this9;_classCallCheck(this,bo);_this9=_super2.call(this,t);_this9._childCommandsDefinitions=[];return _this9;}_createClass(bo,[{key:"refresh",value:function refresh(){}},{key:"execute",value:function execute(){var e=this._getFirstEnabledCommand();for(var _len9=arguments.length,t=new Array(_len9),_key9=0;_key9<_len9;_key9++){t[_key9]=arguments[_key9];}return!!e&&e.execute(t);}},{key:"registerChildCommand",value:function registerChildCommand(t){var _this10=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{priority:"normal"};insertToPriorityArray(this._childCommandsDefinitions,{command:t,priority:e.priority});t.on("change:isEnabled",function(){return _this10._checkEnabled();});this._checkEnabled();}},{key:"_checkEnabled",value:function _checkEnabled(){this.isEnabled=!!this._getFirstEnabledCommand();}},{key:"_getFirstEnabledCommand",value:function _getFirstEnabledCommand(){var t=this._childCommandsDefinitions.find(function(_ref2){var t=_ref2.command;return t.isEnabled;});return t&&t.command;}}]);return bo;}(null&&Command);function wo(t,e){return function(n){return t(e(n));};}var _o=wo;var vo=_o(Object.getPrototypeOf,Object);var Ao=vo;var Co="[object Object]";var yo=Function.prototype,xo=Object.prototype;var Eo=yo.toString;var Do=xo.hasOwnProperty;var So=Eo.call(Object);function Po(t){if(!De(t)||it(t)!=Co){return false;}var e=Ao(t);if(e===null){return true;}var n=Do.call(e,"constructor")&&e.constructor;return typeof n=="function"&&n instanceof n&&Eo.call(n)==So;}var To=Po;function Bo(){this.__data__=[];this.size=0;}var Io=Bo;function Ro(t,e){var n=t.length;while(n--){if(Ft(t[n][0],e)){return n;}}return-1;}var Oo=Ro;var zo=Array.prototype;var Mo=zo.splice;function No(t){var e=this.__data__,n=Oo(e,t);if(n<0){return false;}var o=e.length-1;if(n==o){e.pop();}else{Mo.call(e,n,1);}--this.size;return true;}var Fo=No;function Vo(t){var e=this.__data__,n=Oo(e,t);return n<0?undefined:e[n][1];}var Lo=Vo;function Ho(t){return Oo(this.__data__,t)>-1;}var jo=Ho;function qo(t,e){var n=this.__data__,o=Oo(n,t);if(o<0){++this.size;n.push([t,e]);}else{n[o][1]=e;}return this;}var Wo=qo;function Ko(t){var e=-1,n=t==null?0:t.length;this.clear();while(++e<n){var o=t[e];this.set(o[0],o[1]);}}Ko.prototype.clear=Io;Ko.prototype["delete"]=Fo;Ko.prototype.get=Lo;Ko.prototype.has=jo;Ko.prototype.set=Wo;var Go=Ko;function $o(){this.__data__=new Go();this.size=0;}var Uo=$o;function Jo(t){var e=this.__data__,n=e["delete"](t);this.size=e.size;return n;}var Zo=Jo;function Yo(t){return this.__data__.get(t);}var Qo=Yo;function Xo(t){return this.__data__.has(t);}var ti=Xo;var ei=It(H,"Map");var ni=ei;var oi=It(Object,"create");var ii=oi;function ri(){this.__data__=ii?ii(null):{};this.size=0;}var si=ri;function ai(t){var e=this.has(t)&&delete this.__data__[t];this.size-=e?1:0;return e;}var ci=ai;var li="__lodash_hash_undefined__";var di=Object.prototype;var hi=di.hasOwnProperty;function ui(t){var e=this.__data__;if(ii){var n=e[t];return n===li?undefined:n;}return hi.call(e,t)?e[t]:undefined;}var fi=ui;var gi=Object.prototype;var pi=gi.hasOwnProperty;function mi(t){var e=this.__data__;return ii?e[t]!==undefined:pi.call(e,t);}var ki=mi;var bi="__lodash_hash_undefined__";function wi(t,e){var n=this.__data__;this.size+=this.has(t)?0:1;n[t]=ii&&e===undefined?bi:e;return this;}var _i=wi;function vi(t){var e=-1,n=t==null?0:t.length;this.clear();while(++e<n){var o=t[e];this.set(o[0],o[1]);}}vi.prototype.clear=si;vi.prototype["delete"]=ci;vi.prototype.get=fi;vi.prototype.has=ki;vi.prototype.set=_i;var Ai=vi;function Ci(){this.size=0;this.__data__={hash:new Ai(),map:new(ni||Go)(),string:new Ai()};}var yi=Ci;function xi(t){var e=_typeof(t);return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null;}var Ei=xi;function Di(t,e){var n=t.__data__;return Ei(e)?n[typeof e=="string"?"string":"hash"]:n.map;}var Si=Di;function Pi(t){var e=Si(this,t)["delete"](t);this.size-=e?1:0;return e;}var Ti=Pi;function Bi(t){return Si(this,t).get(t);}var Ii=Bi;function Ri(t){return Si(this,t).has(t);}var Oi=Ri;function zi(t,e){var n=Si(this,t),o=n.size;n.set(t,e);this.size+=n.size==o?0:1;return this;}var Mi=zi;function Ni(t){var e=-1,n=t==null?0:t.length;this.clear();while(++e<n){var o=t[e];this.set(o[0],o[1]);}}Ni.prototype.clear=yi;Ni.prototype["delete"]=Ti;Ni.prototype.get=Ii;Ni.prototype.has=Oi;Ni.prototype.set=Mi;var Fi=Ni;var Vi=200;function Li(t,e){var n=this.__data__;if(n instanceof Go){var o=n.__data__;if(!ni||o.length<Vi-1){o.push([t,e]);this.size=++n.size;return this;}n=this.__data__=new Fi(o);}n.set(t,e);this.size=n.size;return this;}var Hi=Li;function ji(t){var e=this.__data__=new Go(t);this.size=e.size;}ji.prototype.clear=Uo;ji.prototype["delete"]=Zo;ji.prototype.get=Qo;ji.prototype.has=ti;ji.prototype.set=Hi;var qi=ji;function Wi(t,e){var n=-1,o=t==null?0:t.length;while(++n<o){if(e(t[n],n,t)===false){break;}}return t;}var Ki=Wi;var Gi=_o(Object.keys,Object);var $i=Gi;var Ui=Object.prototype;var Ji=Ui.hasOwnProperty;function Zi(t){if(!Fn(t)){return $i(t);}var e=[];for(var n in Object(t)){if(Ji.call(t,n)&&n!="constructor"){e.push(n);}}return e;}var Yi=Zi;function Qi(t){return pe(t)?zn(t):Yi(t);}var Xi=Qi;function tr(t,e){return t&&Wt(e,Xi(e),t);}var er=tr;function nr(t,e){return t&&Wt(e,Gn(e),t);}var or=nr;var ir=(typeof exports==="undefined"?"undefined":_typeof(exports))=="object"&&exports&&!exports.nodeType&&exports;var rr=ir&&(typeof module==="undefined"?"undefined":_typeof(module))=="object"&&module&&!module.nodeType&&module;var sr=rr&&rr.exports===ir;var ar=sr?H.Buffer:undefined,cr=ar?ar.allocUnsafe:undefined;function lr(t,e){if(e){return t.slice();}var n=t.length,o=cr?cr(n):new t.constructor(n);t.copy(o);return o;}var dr=lr;function hr(t,e){var n=-1,o=t.length;e||(e=Array(o));while(++n<o){e[n]=t[n];}return e;}var ur=hr;function fr(t,e){var n=-1,o=t==null?0:t.length,i=0,r=[];while(++n<o){var s=t[n];if(e(s,n,t)){r[i++]=s;}}return r;}var gr=fr;function pr(){return[];}var mr=pr;var kr=Object.prototype;var br=kr.propertyIsEnumerable;var wr=Object.getOwnPropertySymbols;var _r=!wr?mr:function(t){if(t==null){return[];}t=Object(t);return gr(wr(t),function(e){return br.call(t,e);});};var vr=_r;function Ar(t,e){return Wt(t,vr(t),e);}var Cr=Ar;function yr(t,e){var n=-1,o=e.length,i=t.length;while(++n<o){t[i+n]=e[n];}return t;}var xr=yr;var Er=Object.getOwnPropertySymbols;var Dr=!Er?mr:function(t){var e=[];while(t){xr(e,vr(t));t=Ao(t);}return e;};var Sr=Dr;function Pr(t,e){return Wt(t,Sr(t),e);}var Tr=Pr;function Br(t,e,n){var o=e(t);return Ne(t)?o:xr(o,n(t));}var Ir=Br;function Rr(t){return Ir(t,Xi,vr);}var Or=Rr;function zr(t){return Ir(t,Gn,Sr);}var Mr=zr;var Nr=It(H,"DataView");var Fr=Nr;var Vr=It(H,"Promise");var Lr=Vr;var Hr=It(H,"Set");var jr=Hr;var qr=It(H,"WeakMap");var Wr=qr;var Kr="[object Map]",Gr="[object Object]",$r="[object Promise]",Ur="[object Set]",Jr="[object WeakMap]";var Zr="[object DataView]";var Yr=wt(Fr),Qr=wt(ni),Xr=wt(Lr),ts=wt(jr),es=wt(Wr);var ns=it;if(Fr&&ns(new Fr(new ArrayBuffer(1)))!=Zr||ni&&ns(new ni())!=Kr||Lr&&ns(Lr.resolve())!=$r||jr&&ns(new jr())!=Ur||Wr&&ns(new Wr())!=Jr){ns=function ns(t){var e=it(t),n=e==Gr?t.constructor:undefined,o=n?wt(n):"";if(o){switch(o){case Yr:return Zr;case Qr:return Kr;case Xr:return $r;case ts:return Ur;case es:return Jr;}}return e;};}var os=ns;var is=Object.prototype;var rs=is.hasOwnProperty;function ss(t){var e=t.length,n=new t.constructor(e);if(e&&typeof t[0]=="string"&&rs.call(t,"index")){n.index=t.index;n.input=t.input;}return n;}var as=ss;var cs=H.Uint8Array;var ls=cs;function ds(t){var e=new t.constructor(t.byteLength);new ls(e).set(new ls(t));return e;}var hs=ds;function us(t,e){var n=e?hs(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength);}var fs=us;var gs=/\w*$/;function ps(t){var e=new t.constructor(t.source,gs.exec(t));e.lastIndex=t.lastIndex;return e;}var ms=ps;var ks=q?q.prototype:undefined,bs=ks?ks.valueOf:undefined;function ws(t){return bs?Object(bs.call(t)):{};}var _s=ws;function vs(t,e){var n=e?hs(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length);}var As=vs;var Cs="[object Boolean]",ys="[object Date]",xs="[object Map]",Es="[object Number]",Ds="[object RegExp]",Ss="[object Set]",Ps="[object String]",Ts="[object Symbol]";var Bs="[object ArrayBuffer]",Is="[object DataView]",Rs="[object Float32Array]",Os="[object Float64Array]",zs="[object Int8Array]",Ms="[object Int16Array]",Ns="[object Int32Array]",Fs="[object Uint8Array]",Vs="[object Uint8ClampedArray]",Ls="[object Uint16Array]",Hs="[object Uint32Array]";function js(t,e,n){var o=t.constructor;switch(e){case Bs:return hs(t);case Cs:case ys:return new o(+t);case Is:return fs(t,n);case Rs:case Os:case zs:case Ms:case Ns:case Fs:case Vs:case Ls:case Hs:return As(t,n);case xs:return new o();case Es:case Ps:return new o(t);case Ds:return ms(t);case Ss:return new o();case Ts:return _s(t);}}var qs=js;var Ws=Object.create;var Ks=function(){function t(){}return function(e){if(!M(e)){return{};}if(Ws){return Ws(e);}t.prototype=e;var n=new t();t.prototype=undefined;return n;};}();var Gs=Ks;function $s(t){return typeof t.constructor=="function"&&!Fn(t)?Gs(Ao(t)):{};}var Us=$s;var Js="[object Map]";function Zs(t){return De(t)&&os(t)==Js;}var Ys=Zs;var Qs=Sn&&Sn.isMap;var Xs=Qs?An(Qs):Ys;var ta=Xs;var ea="[object Set]";function na(t){return De(t)&&os(t)==ea;}var oa=na;var ia=Sn&&Sn.isSet;var ra=ia?An(ia):oa;var sa=ra;var aa=1,ca=2,la=4;var da="[object Arguments]",ha="[object Array]",ua="[object Boolean]",fa="[object Date]",ga="[object Error]",pa="[object Function]",ma="[object GeneratorFunction]",ka="[object Map]",ba="[object Number]",wa="[object Object]",_a="[object RegExp]",va="[object Set]",Aa="[object String]",Ca="[object Symbol]",ya="[object WeakMap]";var xa="[object ArrayBuffer]",Ea="[object DataView]",Da="[object Float32Array]",Sa="[object Float64Array]",Pa="[object Int8Array]",Ta="[object Int16Array]",Ba="[object Int32Array]",Ia="[object Uint8Array]",Ra="[object Uint8ClampedArray]",Oa="[object Uint16Array]",za="[object Uint32Array]";var Ma={};Ma[da]=Ma[ha]=Ma[xa]=Ma[Ea]=Ma[ua]=Ma[fa]=Ma[Da]=Ma[Sa]=Ma[Pa]=Ma[Ta]=Ma[Ba]=Ma[ka]=Ma[ba]=Ma[wa]=Ma[_a]=Ma[va]=Ma[Aa]=Ma[Ca]=Ma[Ia]=Ma[Ra]=Ma[Oa]=Ma[za]=true;Ma[ga]=Ma[pa]=Ma[ya]=false;function Na(t,e,n,o,i,r){var s,a=e&aa,c=e&ca,l=e&la;if(n){s=i?n(t,o,i,r):n(t);}if(s!==undefined){return s;}if(!M(t)){return t;}var d=Ne(t);if(d){s=as(t);if(!a){return ur(t,s);}}else{var h=os(t),u=h==pa||h==ma;if(Ge(t)){return dr(t,a);}if(h==wa||h==da||u&&!i){s=c||u?{}:Us(t);if(!a){return c?Tr(t,or(s,t)):Cr(t,er(s,t));}}else{if(!Ma[h]){return i?t:{};}s=qs(t,h,a);}}r||(r=new qi());var f=r.get(t);if(f){return f;}r.set(t,s);if(sa(t)){t.forEach(function(o){s.add(Na(o,e,n,o,t,r));});}else if(ta(t)){t.forEach(function(o,i){s.set(i,Na(o,e,n,i,t,r));});}var g=l?c?Mr:Or:c?Gn:Xi;var p=d?undefined:g(t);Ki(p||t,function(o,i){if(p){i=o;o=t[i];}jt(s,i,Na(o,e,n,i,t,r));});return s;}var Fa=Na;var Va=1,La=4;function Ha(t,e){e=typeof e=="function"?e:undefined;return Fa(t,Va|La,e);}var ja=Ha;function qa(t){return De(t)&&t.nodeType===1&&!To(t);}var Wa=qa;var Ka=/*#__PURE__*/function(){function Ka(t,e){_classCallCheck(this,Ka);this._config={};if(e){this.define(Ga(e));}if(t){this._setObjectToTarget(this._config,t);}}_createClass(Ka,[{key:"set",value:function set(t,e){this._setToTarget(this._config,t,e);}},{key:"define",value:function define(t,e){var n=true;this._setToTarget(this._config,t,e,n);}},{key:"get",value:function get(t){return this._getFromSource(this._config,t);}},{key:"names",value:/*#__PURE__*/regeneratorRuntime.mark(function names(){var _i4,_Object$keys,_t9;return regeneratorRuntime.wrap(function names$(_context){while(1){switch(_context.prev=_context.next){case 0:_i4=0,_Object$keys=Object.keys(this._config);case 1:if(!(_i4<_Object$keys.length)){_context.next=8;break;}_t9=_Object$keys[_i4];_context.next=5;return _t9;case 5:_i4++;_context.next=1;break;case 8:case"end":return _context.stop();}}},names,this);})},{key:"_setToTarget",value:function _setToTarget(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(To(e)){this._setObjectToTarget(t,e,o);return;}var i=e.split(".");e=i.pop();var _iterator6=_createForOfIteratorHelper(i),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _e4=_step6.value;if(!To(t[_e4])){t[_e4]={};}t=t[_e4];}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}if(To(n)){if(!To(t[e])){t[e]={};}t=t[e];this._setObjectToTarget(t,n,o);return;}if(o&&typeof t[e]!="undefined"){return;}t[e]=n;}},{key:"_getFromSource",value:function _getFromSource(t,e){var n=e.split(".");e=n.pop();var _iterator7=_createForOfIteratorHelper(n),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var _e5=_step7.value;if(!To(t[_e5])){t=null;break;}t=t[_e5];}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return t?Ga(t[e]):undefined;}},{key:"_setObjectToTarget",value:function _setObjectToTarget(t,e,n){var _this11=this;Object.keys(e).forEach(function(o){_this11._setToTarget(t,o,e[o],n);});}}]);return Ka;}();function Ga(t){return ja(t,$a);}function $a(t){return Wa(t)?t:undefined;}function Ua(t){return!!(t&&t[Symbol.iterator]);}var Ja=/*#__PURE__*/function(_Symbol$iterator){function Ja(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Ja);var n=Ua(t);if(!n){e=t;}this._items=[];this._itemMap=new Map();this._idProperty=e.idProperty||"id";this._bindToExternalToInternalMap=new WeakMap();this._bindToInternalToExternalMap=new WeakMap();this._skippedIndexesFromExternal=[];if(n){var _iterator8=_createForOfIteratorHelper(t),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var _e6=_step8.value;this._items.push(_e6);this._itemMap.set(this._getItemIdBeforeAdding(_e6),_e6);}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}}}_createClass(Ja,[{key:"length",get:function get(){return this._items.length;}},{key:"first",get:function get(){return this._items[0]||null;}},{key:"last",get:function get(){return this._items[this.length-1]||null;}},{key:"add",value:function add(t,e){return this.addMany([t],e);}},{key:"addMany",value:function addMany(t,e){if(e===undefined){e=this._items.length;}else if(e>this._items.length||e<0){throw new h("collection-add-item-invalid-index",this);}for(var _n5=0;_n5<t.length;_n5++){var _o6=t[_n5];var _i5=this._getItemIdBeforeAdding(_o6);var _r4=e+_n5;this._items.splice(_r4,0,_o6);this._itemMap.set(_i5,_o6);this.fire("add",_o6,_r4);}this.fire("change",{added:t,removed:[],index:e});return this;}},{key:"get",value:function get(t){var e;if(typeof t=="string"){e=this._itemMap.get(t);}else if(typeof t=="number"){e=this._items[t];}else{throw new h("collection-get-invalid-arg",this);}return e||null;}},{key:"has",value:function has(t){if(typeof t=="string"){return this._itemMap.has(t);}else{var _e7=this._idProperty;var _n6=t[_e7];return this._itemMap.has(_n6);}}},{key:"getIndex",value:function getIndex(t){var e;if(typeof t=="string"){e=this._itemMap.get(t);}else{e=t;}return this._items.indexOf(e);}},{key:"remove",value:function remove(t){var _this$_remove=this._remove(t),_this$_remove2=_slicedToArray(_this$_remove,2),e=_this$_remove2[0],n=_this$_remove2[1];this.fire("change",{added:[],removed:[e],index:n});return e;}},{key:"map",value:function map(t,e){return this._items.map(t,e);}},{key:"find",value:function find(t,e){return this._items.find(t,e);}},{key:"filter",value:function filter(t,e){return this._items.filter(t,e);}},{key:"clear",value:function clear(){if(this._bindToCollection){this.stopListening(this._bindToCollection);this._bindToCollection=null;}var t=Array.from(this._items);while(this.length){this._remove(0);}this.fire("change",{added:[],removed:t,index:0});}},{key:"bindTo",value:function bindTo(t){var _this12=this;if(this._bindToCollection){throw new h("collection-bind-to-rebind",this);}this._bindToCollection=t;return{as:function as(t){_this12._setUpBindToBinding(function(e){return new t(e);});},using:function using(t){if(typeof t=="function"){_this12._setUpBindToBinding(function(e){return t(e);});}else{_this12._setUpBindToBinding(function(e){return e[t];});}}};}},{key:"_setUpBindToBinding",value:function _setUpBindToBinding(t){var _this13=this;var e=this._bindToCollection;var n=function n(_n8,o,i){var r=e._bindToCollection==_this13;var s=e._bindToInternalToExternalMap.get(o);if(r&&s){_this13._bindToExternalToInternalMap.set(o,s);_this13._bindToInternalToExternalMap.set(s,o);}else{var _n7=t(o);if(!_n7){_this13._skippedIndexesFromExternal.push(i);return;}var _r5=i;var _iterator9=_createForOfIteratorHelper(_this13._skippedIndexesFromExternal),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var _t11=_step9.value;if(i>_t11){_r5--;}}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}var _iterator10=_createForOfIteratorHelper(e._skippedIndexesFromExternal),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var _t12=_step10.value;if(_r5>=_t12){_r5++;}}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}_this13._bindToExternalToInternalMap.set(o,_n7);_this13._bindToInternalToExternalMap.set(_n7,o);_this13.add(_n7,_r5);for(var _t10=0;_t10<e._skippedIndexesFromExternal.length;_t10++){if(_r5<=e._skippedIndexesFromExternal[_t10]){e._skippedIndexesFromExternal[_t10]++;}}}};var _iterator11=_createForOfIteratorHelper(e),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var _t13=_step11.value;n(null,_t13,e.getIndex(_t13));}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}this.listenTo(e,"add",n);this.listenTo(e,"remove",function(t,e,n){var o=_this13._bindToExternalToInternalMap.get(e);if(o){_this13.remove(o);}_this13._skippedIndexesFromExternal=_this13._skippedIndexesFromExternal.reduce(function(t,e){if(n<e){t.push(e-1);}if(n>e){t.push(e);}return t;},[]);});}},{key:"_getItemIdBeforeAdding",value:function _getItemIdBeforeAdding(t){var e=this._idProperty;var n;if(e in t){n=t[e];if(typeof n!="string"){throw new h("collection-add-invalid-id",this);}if(this.get(n)){throw new h("collection-add-item-already-exists",this);}}else{t[e]=n=s();}return n;}},{key:"_remove",value:function _remove(t){var e,n,o;var i=false;var r=this._idProperty;if(typeof t=="string"){n=t;o=this._itemMap.get(n);i=!o;if(o){e=this._items.indexOf(o);}}else if(typeof t=="number"){e=t;o=this._items[e];i=!o;if(o){n=o[r];}}else{o=t;n=o[r];e=this._items.indexOf(o);i=e==-1||!this._itemMap.get(n);}if(i){throw new h("collection-remove-404",this);}this._items.splice(e,1);this._itemMap.delete(n);var s=this._bindToInternalToExternalMap.get(o);this._bindToInternalToExternalMap.delete(o);this._bindToExternalToInternalMap.delete(s);this.fire("remove",o,e);return[o,e];}},{key:_Symbol$iterator,value:function value(){return this._items[Symbol.iterator]();}}]);return Ja;}(Symbol.iterator);fo(Ja,C);var Za=/*#__PURE__*/function(_Symbol$iterator2){function Za(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];_classCallCheck(this,Za);this._context=t;this._plugins=new Map();this._availablePlugins=new Map();var _iterator12=_createForOfIteratorHelper(e),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var _t14=_step12.value;if(_t14.pluginName){this._availablePlugins.set(_t14.pluginName,_t14);}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}this._contextPlugins=new Map();var _iterator13=_createForOfIteratorHelper(n),_step13;try{for(_iterator13.s();!(_step13=_iterator13.n()).done;){var _step13$value=_slicedToArray(_step13.value,2),_t15=_step13$value[0],_e8=_step13$value[1];this._contextPlugins.set(_t15,_e8);this._contextPlugins.set(_e8,_t15);if(_t15.pluginName){this._availablePlugins.set(_t15.pluginName,_t15);}}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}}_createClass(Za,[{key:_Symbol$iterator2,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){var _iterator14,_step14,_t16;return regeneratorRuntime.wrap(function value$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_iterator14=_createForOfIteratorHelper(this._plugins);_context2.prev=1;_iterator14.s();case 3:if((_step14=_iterator14.n()).done){_context2.next=10;break;}_t16=_step14.value;if(!(typeof _t16[0]=="function")){_context2.next=8;break;}_context2.next=8;return _t16;case 8:_context2.next=3;break;case 10:_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2["catch"](1);_iterator14.e(_context2.t0);case 15:_context2.prev=15;_iterator14.f();return _context2.finish(15);case 18:case"end":return _context2.stop();}}},value,this,[[1,12,15,18]]);})},{key:"get",value:function get(t){var e=this._plugins.get(t);if(!e){var _e9=t;if(typeof t=="function"){_e9=t.pluginName||t.name;}throw new h("plugincollection-plugin-not-loaded",this._context,{plugin:_e9});}return e;}},{key:"has",value:function has(t){return this._plugins.has(t);}},{key:"init",value:function init(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var o=this;var i=this._context;f(t);p(t);var r=t.filter(function(t){return!d(t,e);});var s=_toConsumableArray(g(r));v(s,n);var a=w(s);return _(a,"init").then(function(){return _(a,"afterInit");}).then(function(){return a;});function c(t){return typeof t==="function";}function l(t){return c(t)&&t.isContextPlugin;}function d(t,e){return e.some(function(e){if(e===t){return true;}if(u(t)===e){return true;}if(u(e)===t){return true;}return false;});}function u(t){return c(t)?t.pluginName||t.name:t;}function f(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();t.forEach(function(t){if(!c(t)){return;}if(e.has(t)){return;}e.add(t);if(t.pluginName&&!o._availablePlugins.has(t.pluginName)){o._availablePlugins.set(t.pluginName,t);}if(t.requires){f(t.requires,e);}});}function g(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();return t.map(function(t){return c(t)?t:o._availablePlugins.get(t);}).reduce(function(t,n){if(e.has(n)){return t;}e.add(n);if(n.requires){p(n.requires,n);g(n.requires,e).forEach(function(e){return t.add(e);});}return t.add(n);},new Set());}function p(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;t.map(function(t){return c(t)?t:o._availablePlugins.get(t)||t;}).forEach(function(t){m(t,e);k(t,e);b(t,e);});}function m(t,e){if(c(t)){return;}if(e){throw new h("plugincollection-soft-required",i,{missingPlugin:t,requiredBy:u(e)});}throw new h("plugincollection-plugin-not-found",i,{plugin:t});}function k(t,e){if(!l(e)){return;}if(l(t)){return;}throw new h("plugincollection-context-required",i,{plugin:u(t),requiredBy:u(e)});}function b(t,n){if(!n){return;}if(!d(t,e)){return;}throw new h("plugincollection-required",i,{plugin:u(t),requiredBy:u(n)});}function w(t){return t.map(function(t){var e=o._contextPlugins.get(t)||new t(i);o._add(t,e);return e;});}function _(t,e){return t.reduce(function(t,n){if(!n[e]){return t;}if(o._contextPlugins.has(n)){return t;}return t.then(n[e].bind(n));},Promise.resolve());}function v(t,e){var _iterator15=_createForOfIteratorHelper(e),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var _n9=_step15.value;if(typeof _n9!="function"){throw new h("plugincollection-replace-plugin-invalid-type",null,{pluginItem:_n9});}var _e10=_n9.pluginName;if(!_e10){throw new h("plugincollection-replace-plugin-missing-name",null,{pluginItem:_n9});}if(_n9.requires&&_n9.requires.length){throw new h("plugincollection-plugin-for-replacing-cannot-have-dependencies",null,{pluginName:_e10});}var _i6=o._availablePlugins.get(_e10);if(!_i6){throw new h("plugincollection-plugin-for-replacing-not-exist",null,{pluginName:_e10});}var _r6=t.indexOf(_i6);if(_r6===-1){if(o._contextPlugins.has(_i6)){return;}throw new h("plugincollection-plugin-for-replacing-not-loaded",null,{pluginName:_e10});}if(_i6.requires&&_i6.requires.length){throw new h("plugincollection-replaced-plugin-cannot-have-dependencies",null,{pluginName:_e10});}t.splice(_r6,1,_n9);o._availablePlugins.set(_e10,_n9);}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}}}},{key:"destroy",value:function destroy(){var t=[];var _iterator16=_createForOfIteratorHelper(this),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var _step16$value=_slicedToArray(_step16.value,2),_e11=_step16$value[1];if(typeof _e11.destroy=="function"&&!this._contextPlugins.has(_e11)){t.push(_e11.destroy());}}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}return Promise.all(t);}},{key:"_add",value:function _add(t,e){this._plugins.set(t,e);var n=t.pluginName;if(!n){return;}if(this._plugins.has(n)){throw new h("plugincollection-plugin-name-conflict",null,{pluginName:n,plugin1:this._plugins.get(n).constructor,plugin2:t});}this._plugins.set(n,e);}}]);return Za;}(Symbol.iterator);fo(Za,C);function Ya(t){return Array.isArray(t)?t:[t];}if(!window.CKEDITOR_TRANSLATIONS){window.CKEDITOR_TRANSLATIONS={};}function Qa(t,e,n){if(!window.CKEDITOR_TRANSLATIONS[t]){window.CKEDITOR_TRANSLATIONS[t]={};}var o=window.CKEDITOR_TRANSLATIONS[t];o.dictionary=o.dictionary||{};o.getPluralForm=n||o.getPluralForm;Object.assign(o.dictionary,e);}function Xa(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;if(typeof n!=="number"){throw new h("translation-service-quantity-not-a-number",null,{quantity:n});}var o=nc();if(o===1){t=Object.keys(window.CKEDITOR_TRANSLATIONS)[0];}var i=e.id||e.string;if(o===0||!ec(t,i)){if(n!==1){return e.plural;}return e.string;}var r=window.CKEDITOR_TRANSLATIONS[t].dictionary;var s=window.CKEDITOR_TRANSLATIONS[t].getPluralForm||function(t){return t===1?0:1;};if(typeof r[i]==="string"){return r[i];}var a=Number(s(n));return r[i][a];}function tc(){window.CKEDITOR_TRANSLATIONS={};}function ec(t,e){return!!window.CKEDITOR_TRANSLATIONS[t]&&!!window.CKEDITOR_TRANSLATIONS[t].dictionary[e];}function nc(){return Object.keys(window.CKEDITOR_TRANSLATIONS).length;}var oc=["ar","ara","fa","per","fas","he","heb","ku","kur","ug","uig"];function ic(t){return oc.includes(t)?"rtl":"ltr";}var rc=/*#__PURE__*/function(){function rc(){var _this14=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,rc);this.uiLanguage=t.uiLanguage||"en";this.contentLanguage=t.contentLanguage||this.uiLanguage;this.uiLanguageDirection=ic(this.uiLanguage);this.contentLanguageDirection=ic(this.contentLanguage);this.t=function(t,e){return _this14._t(t,e);};}_createClass(rc,[{key:"language",get:function get(){console.warn("locale-deprecated-language-property: "+"The Locale#language property has been deprecated and will be removed in the near future. "+"Please use #uiLanguage and #contentLanguage properties instead.");return this.uiLanguage;}},{key:"_t",value:function _t(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];e=Ya(e);if(typeof t==="string"){t={string:t};}var n=!!t.plural;var o=n?e[0]:1;var i=Xa(this.uiLanguage,t,o);return sc(i,e);}}]);return rc;}();function sc(t,e){return t.replace(/%(\d+)/g,function(t,n){return n<e.length?e[n]:t;});}var ac=/*#__PURE__*/function(){function ac(t){_classCallCheck(this,ac);this.config=new Ka(t,this.constructor.defaultConfig);var e=this.constructor.builtinPlugins;this.config.define("plugins",e);this.plugins=new Za(this,e);var n=this.config.get("language")||{};this.locale=new rc({uiLanguage:typeof n==="string"?n:n.ui,contentLanguage:this.config.get("language.content")});this.t=this.locale.t;this.editors=new Ja();this._contextOwner=null;}_createClass(ac,[{key:"initPlugins",value:function initPlugins(){var t=this.config.get("plugins")||[];var e=this.config.get("substitutePlugins")||[];var _iterator17=_createForOfIteratorHelper(t.concat(e)),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var _n10=_step17.value;if(typeof _n10!="function"){throw new h("context-initplugins-constructor-only",null,{Plugin:_n10});}if(_n10.isContextPlugin!==true){throw new h("context-initplugins-invalid-plugin",null,{Plugin:_n10});}}}catch(err){_iterator17.e(err);}finally{_iterator17.f();}return this.plugins.init(t,[],e);}},{key:"destroy",value:function destroy(){var _this15=this;return Promise.all(Array.from(this.editors,function(t){return t.destroy();})).then(function(){return _this15.plugins.destroy();});}},{key:"_addEditor",value:function _addEditor(t,e){if(this._contextOwner){throw new h("context-addeditor-private-context");}this.editors.add(t);if(e){this._contextOwner=t;}}},{key:"_removeEditor",value:function _removeEditor(t){if(this.editors.has(t)){this.editors.remove(t);}if(this._contextOwner===t){return this.destroy();}return Promise.resolve();}},{key:"_getEditorConfig",value:function _getEditorConfig(){var t={};var _iterator18=_createForOfIteratorHelper(this.config.names()),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var _e12=_step18.value;if(!["plugins","removePlugins","extraPlugins"].includes(_e12)){t[_e12]=this.config.get(_e12);}}}catch(err){_iterator18.e(err);}finally{_iterator18.f();}return t;}}],[{key:"create",value:function create(t){var _this16=this;return new Promise(function(e){var n=new _this16(t);e(n.initPlugins().then(function(){return n;}));});}}]);return ac;}();var cc=/*#__PURE__*/function(){function cc(t){_classCallCheck(this,cc);this.context=t;}_createClass(cc,[{key:"destroy",value:function destroy(){this.stopListening();}}],[{key:"isContextPlugin",get:function get(){return true;}}]);return cc;}();fo(cc,eo);function lc(t,e){var n=Math.min(t.length,e.length);for(var _o7=0;_o7<n;_o7++){if(t[_o7]!=e[_o7]){return _o7;}}if(t.length==e.length){return"same";}else if(t.length<e.length){return"prefix";}else{return"extension";}}var dc=4;function hc(t){return Fa(t,dc);}var uc=hc;var fc=/*#__PURE__*/function(){function fc(t){_classCallCheck(this,fc);this.document=t;this.parent=null;}_createClass(fc,[{key:"index",get:function get(){var t;if(!this.parent){return null;}if((t=this.parent.getChildIndex(this))==-1){throw new h("view-node-not-found-in-parent",this);}return t;}},{key:"nextSibling",get:function get(){var t=this.index;return t!==null&&this.parent.getChild(t+1)||null;}},{key:"previousSibling",get:function get(){var t=this.index;return t!==null&&this.parent.getChild(t-1)||null;}},{key:"root",get:function get(){var t=this;while(t.parent){t=t.parent;}return t;}},{key:"isAttached",value:function isAttached(){return this.root.is("rootElement");}},{key:"getPath",value:function getPath(){var t=[];var e=this;while(e.parent){t.unshift(e.index);e=e.parent;}return t;}},{key:"getAncestors",value:function getAncestors(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{includeSelf:false,parentFirst:false};var e=[];var n=t.includeSelf?this:this.parent;while(n){e[t.parentFirst?"push":"unshift"](n);n=n.parent;}return e;}},{key:"getCommonAncestor",value:function getCommonAncestor(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.getAncestors(e);var o=t.getAncestors(e);var i=0;while(n[i]==o[i]&&n[i]){i++;}return i===0?null:n[i-1];}},{key:"isBefore",value:function isBefore(t){if(this==t){return false;}if(this.root!==t.root){return false;}var e=this.getPath();var n=t.getPath();var o=lc(e,n);switch(o){case"prefix":return true;case"extension":return false;default:return e[o]<n[o];}}},{key:"isAfter",value:function isAfter(t){if(this==t){return false;}if(this.root!==t.root){return false;}return!this.isBefore(t);}},{key:"_remove",value:function _remove(){this.parent._removeChildren(this.index);}},{key:"_fireChange",value:function _fireChange(t,e){this.fire("change:"+t,e);if(this.parent){this.parent._fireChange(t,e);}}},{key:"toJSON",value:function toJSON(){var t=uc(this);delete t.parent;return t;}},{key:"is",value:function is(t){return t==="node"||t==="view:node";}}]);return fc;}();fo(fc,C);var gc=/*#__PURE__*/function(_fc){_inherits(gc,_fc);var _super3=_createSuper(gc);function gc(t,e){var _this17;_classCallCheck(this,gc);_this17=_super3.call(this,t);_this17._textData=e;return _this17;}_createClass(gc,[{key:"is",value:function is(t){return t==="$text"||t==="view:$text"||t==="text"||t==="view:text"||t==="node"||t==="view:node";}},{key:"data",get:function get(){return this._textData;}},{key:"_data",get:function get(){return this.data;},set:function set(t){this._fireChange("text",this);this._textData=t;}},{key:"isSimilar",value:function isSimilar(t){if(!(t instanceof gc)){return false;}return this===t||this.data===t.data;}},{key:"_clone",value:function _clone(){return new gc(this.document,this.data);}}]);return gc;}(fc);var pc=/*#__PURE__*/function(){function pc(t,e,n){_classCallCheck(this,pc);this.textNode=t;if(e<0||e>t.data.length){throw new h("view-textproxy-wrong-offsetintext",this);}if(n<0||e+n>t.data.length){throw new h("view-textproxy-wrong-length",this);}this.data=t.data.substring(e,e+n);this.offsetInText=e;}_createClass(pc,[{key:"offsetSize",get:function get(){return this.data.length;}},{key:"isPartial",get:function get(){return this.data.length!==this.textNode.data.length;}},{key:"parent",get:function get(){return this.textNode.parent;}},{key:"root",get:function get(){return this.textNode.root;}},{key:"document",get:function get(){return this.textNode.document;}},{key:"is",value:function is(t){return t==="$textProxy"||t==="view:$textProxy"||t==="textProxy"||t==="view:textProxy";}},{key:"getAncestors",value:function getAncestors(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{includeSelf:false,parentFirst:false};var e=[];var n=t.includeSelf?this.textNode:this.parent;while(n!==null){e[t.parentFirst?"push":"unshift"](n);n=n.parent;}return e;}}]);return pc;}();function mc(t){var e=new Map();for(var _n11 in t){e.set(_n11,t[_n11]);}return e;}function kc(t){if(Ua(t)){return new Map(t);}else{return mc(t);}}var bc=/*#__PURE__*/function(){function bc(){_classCallCheck(this,bc);this._patterns=[];this.add.apply(this,arguments);}_createClass(bc,[{key:"add",value:function add(){for(var _len10=arguments.length,t=new Array(_len10),_key10=0;_key10<_len10;_key10++){t[_key10]=arguments[_key10];}for(var _i7=0,_t17=t;_i7<_t17.length;_i7++){var _e13=_t17[_i7];if(typeof _e13=="string"||_e13 instanceof RegExp){_e13={name:_e13};}this._patterns.push(_e13);}}},{key:"match",value:function match(){for(var _len11=arguments.length,t=new Array(_len11),_key11=0;_key11<_len11;_key11++){t[_key11]=arguments[_key11];}for(var _i8=0,_t18=t;_i8<_t18.length;_i8++){var _e14=_t18[_i8];var _iterator19=_createForOfIteratorHelper(this._patterns),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var _t19=_step19.value;var _n12=wc(_e14,_t19);if(_n12){return{element:_e14,pattern:_t19,match:_n12};}}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}}return null;}},{key:"matchAll",value:function matchAll(){var e=[];for(var _len12=arguments.length,t=new Array(_len12),_key12=0;_key12<_len12;_key12++){t[_key12]=arguments[_key12];}for(var _i9=0,_t20=t;_i9<_t20.length;_i9++){var _n13=_t20[_i9];var _iterator20=_createForOfIteratorHelper(this._patterns),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var _t21=_step20.value;var _o8=wc(_n13,_t21);if(_o8){e.push({element:_n13,pattern:_t21,match:_o8});}}}catch(err){_iterator20.e(err);}finally{_iterator20.f();}}return e.length>0?e:null;}},{key:"getElementName",value:function getElementName(){if(this._patterns.length!==1){return null;}var t=this._patterns[0];var e=t.name;return typeof t!="function"&&e&&!(e instanceof RegExp)?e:null;}}]);return bc;}();function wc(t,e){if(typeof e=="function"){return e(t);}var n={};if(e.name){n.name=_c(e.name,t.name);if(!n.name){return null;}}if(e.attributes){n.attributes=xc(e.attributes,t);if(!n.attributes){return null;}}if(e.classes){n.classes=Ec(e.classes,t);if(!n.classes){return false;}}if(e.styles){n.styles=Dc(e.styles,t);if(!n.styles){return false;}}return n;}function _c(t,e){if(t instanceof RegExp){return!!e.match(t);}return t===e;}function vc(t,e,n){var o=Ac(t);var i=Array.from(e);var r=[];o.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),t=_ref4[0],e=_ref4[1];i.forEach(function(o){if(Cc(t,o)&&yc(e,o,n)){r.push(o);}});});if(!o.length||r.length<o.length){return null;}return r;}function Ac(t){if(Array.isArray(t)){return t.map(function(t){if(To(t)){if(t.key===undefined||t.value===undefined){u("matcher-pattern-missing-key-or-value",t);}return[t.key,t.value];}return[t,true];});}if(To(t)){return Object.entries(t);}return[[t,true]];}function Cc(t,e){return t===true||t===e||t instanceof RegExp&&e.match(t);}function yc(t,e,n){if(t===true){return true;}var o=n(e);return t===o||t instanceof RegExp&&!!String(o).match(t);}function xc(t,e){var n=new Set(e.getAttributeKeys());if(To(t)){if(t.style!==undefined){u("matcher-pattern-deprecated-attributes-style-key",t);}if(t.class!==undefined){u("matcher-pattern-deprecated-attributes-class-key",t);}}else{n.delete("style");n.delete("class");}return vc(t,n,function(t){return e.getAttribute(t);});}function Ec(t,e){return vc(t,e.getClassNames());}function Dc(t,e){return vc(t,e.getStyleNames(true),function(t){return e.getStyle(t);});}var Sc="[object Symbol]";function Pc(t){return _typeof(t)=="symbol"||De(t)&&it(t)==Sc;}var Tc=Pc;var Bc=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Ic=/^\w*$/;function Rc(t,e){if(Ne(t)){return false;}var n=_typeof(t);if(n=="number"||n=="symbol"||n=="boolean"||t==null||Tc(t)){return true;}return Ic.test(t)||!Bc.test(t)||e!=null&&t in Object(e);}var Oc=Rc;var zc="Expected a function";function Mc(t,e){if(typeof t!="function"||e!=null&&typeof e!="function"){throw new TypeError(zc);}var n=function n(){var o=arguments,i=e?e.apply(this,o):o[0],r=n.cache;if(r.has(i)){return r.get(i);}var s=t.apply(this,o);n.cache=r.set(i,s)||r;return s;};n.cache=new(Mc.Cache||Fi)();return n;}Mc.Cache=Fi;var Nc=Mc;var Fc=500;function Vc(t){var e=Nc(t,function(t){if(n.size===Fc){n.clear();}return t;});var n=e.cache;return e;}var Lc=Vc;var Hc=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var jc=/\\(\\)?/g;var qc=Lc(function(t){var e=[];if(t.charCodeAt(0)===46){e.push("");}t.replace(Hc,function(t,n,o,i){e.push(o?i.replace(jc,"$1"):n||t);});return e;});var Wc=qc;function Kc(t,e){var n=-1,o=t==null?0:t.length,i=Array(o);while(++n<o){i[n]=e(t[n],n,t);}return i;}var Gc=Kc;var $c=1/0;var Uc=q?q.prototype:undefined,Jc=Uc?Uc.toString:undefined;function Zc(t){if(typeof t=="string"){return t;}if(Ne(t)){return Gc(t,Zc)+"";}if(Tc(t)){return Jc?Jc.call(t):"";}var e=t+"";return e=="0"&&1/t==-$c?"-0":e;}var Yc=Zc;function Qc(t){return t==null?"":Yc(t);}var Xc=Qc;function tl(t,e){if(Ne(t)){return t;}return Oc(t,e)?[t]:Wc(Xc(t));}var el=tl;function nl(t){var e=t==null?0:t.length;return e?t[e-1]:undefined;}var ol=nl;var il=1/0;function rl(t){if(typeof t=="string"||Tc(t)){return t;}var e=t+"";return e=="0"&&1/t==-il?"-0":e;}var sl=rl;function al(t,e){e=el(e,t);var n=0,o=e.length;while(t!=null&&n<o){t=t[sl(e[n++])];}return n&&n==o?t:undefined;}var cl=al;function ll(t,e,n){var o=-1,i=t.length;if(e<0){e=-e>i?0:i+e;}n=n>i?i:n;if(n<0){n+=i;}i=e>n?0:n-e>>>0;e>>>=0;var r=Array(i);while(++o<i){r[o]=t[o+e];}return r;}var dl=ll;function hl(t,e){return e.length<2?t:cl(t,dl(e,0,-1));}var ul=hl;function fl(t,e){e=el(e,t);t=ul(t,e);return t==null||delete t[sl(ol(e))];}var gl=fl;function pl(t,e){return t==null?true:gl(t,e);}var ml=pl;function kl(t,e,n){var o=t==null?undefined:cl(t,e);return o===undefined?n:o;}var bl=kl;function wl(t,e,n){if(n!==undefined&&!Ft(t[e],n)||n===undefined&&!(e in t)){Mt(t,e,n);}}var _l=wl;function vl(t){return function(e,n,o){var i=-1,r=Object(e),s=o(e),a=s.length;while(a--){var c=s[t?a:++i];if(n(r[c],c,r)===false){break;}}return e;};}var Al=vl;var Cl=Al();var yl=Cl;function xl(t){return De(t)&&pe(t);}var El=xl;function Dl(t,e){if(e==="constructor"&&typeof t[e]==="function"){return;}if(e=="__proto__"){return;}return t[e];}var Sl=Dl;function Pl(t){return Wt(t,Gn(t));}var Tl=Pl;function Bl(t,e,n,o,i,r,s){var a=Sl(t,n),c=Sl(e,n),l=s.get(c);if(l){_l(t,n,l);return;}var d=r?r(a,c,n+"",t,e,s):undefined;var h=d===undefined;if(h){var u=Ne(c),f=!u&&Ge(c),g=!u&&!f&&Bn(c);d=c;if(u||f||g){if(Ne(a)){d=a;}else if(El(a)){d=ur(a);}else if(f){h=false;d=dr(c,true);}else if(g){h=false;d=As(c,true);}else{d=[];}}else if(To(c)||ze(c)){d=a;if(ze(a)){d=Tl(a);}else if(!M(a)||dt(a)){d=Us(c);}}else{h=false;}}if(h){s.set(c,d);i(d,c,o,r,s);s["delete"](c);}_l(t,n,d);}var Il=Bl;function Rl(t,e,n,o,i){if(t===e){return;}yl(e,function(r,s){i||(i=new qi());if(M(r)){Il(t,e,s,n,Rl,o,i);}else{var a=o?o(Sl(t,s),r,s+"",t,e,i):undefined;if(a===undefined){a=r;}_l(t,s,a);}},Gn);}var Ol=Rl;var zl=Ce(function(t,e,n){Ol(t,e,n);});var Ml=zl;function Nl(t,e,n,o){if(!M(t)){return t;}e=el(e,t);var i=-1,r=e.length,s=r-1,a=t;while(a!=null&&++i<r){var c=sl(e[i]),l=n;if(c==="__proto__"||c==="constructor"||c==="prototype"){return t;}if(i!=s){var d=a[c];l=o?o(d,c,a):undefined;if(l===undefined){l=M(d)?d:we(e[i+1])?[]:{};}}jt(a,c,l);a=a[c];}return t;}var Fl=Nl;function Vl(t,e,n){return t==null?t:Fl(t,e,n);}var Ll=Vl;var Hl=/*#__PURE__*/function(){function Hl(t){_classCallCheck(this,Hl);this._styles={};this._styleProcessor=t;}_createClass(Hl,[{key:"isEmpty",get:function get(){var t=Object.entries(this._styles);var e=Array.from(t);return!e.length;}},{key:"size",get:function get(){if(this.isEmpty){return 0;}return this.getStyleNames().length;}},{key:"setTo",value:function setTo(t){this.clear();var e=Array.from(ql(t).entries());for(var _i10=0,_e15=e;_i10<_e15.length;_i10++){var _e15$_i=_slicedToArray(_e15[_i10],2),_t22=_e15$_i[0],_n14=_e15$_i[1];this._styleProcessor.toNormalizedForm(_t22,_n14,this._styles);}}},{key:"has",value:function has(t){if(this.isEmpty){return false;}var e=this._styleProcessor.getReducedForm(t,this._styles);var n=e.find(function(_ref5){var _ref6=_slicedToArray(_ref5,1),e=_ref6[0];return e===t;});return Array.isArray(n);}},{key:"set",value:function set(t,e){if(M(t)){for(var _i11=0,_Object$entries=Object.entries(t);_i11<_Object$entries.length;_i11++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i11],2),_e16=_Object$entries$_i[0],_n15=_Object$entries$_i[1];this._styleProcessor.toNormalizedForm(_e16,_n15,this._styles);}}else{this._styleProcessor.toNormalizedForm(t,e,this._styles);}}},{key:"remove",value:function remove(t){var e=Wl(t);ml(this._styles,e);delete this._styles[t];this._cleanEmptyObjectsOnPath(e);}},{key:"getNormalized",value:function getNormalized(t){return this._styleProcessor.getNormalized(t,this._styles);}},{key:"toString",value:function toString(){if(this.isEmpty){return"";}return this._getStylesEntries().map(function(t){return t.join(":");}).sort().join(";")+";";}},{key:"getAsString",value:function getAsString(t){if(this.isEmpty){return;}if(this._styles[t]&&!M(this._styles[t])){return this._styles[t];}var e=this._styleProcessor.getReducedForm(t,this._styles);var n=e.find(function(_ref7){var _ref8=_slicedToArray(_ref7,1),e=_ref8[0];return e===t;});if(Array.isArray(n)){return n[1];}}},{key:"getStyleNames",value:function getStyleNames(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.isEmpty){return[];}if(t){return this._styleProcessor.getStyleNames(this._styles);}var e=this._getStylesEntries();return e.map(function(_ref9){var _ref10=_slicedToArray(_ref9,1),t=_ref10[0];return t;});}},{key:"clear",value:function clear(){this._styles={};}},{key:"_getStylesEntries",value:function _getStylesEntries(){var t=[];var e=Object.keys(this._styles);for(var _i12=0,_e17=e;_i12<_e17.length;_i12++){var _n16=_e17[_i12];t.push.apply(t,_toConsumableArray(this._styleProcessor.getReducedForm(_n16,this._styles)));}return t;}},{key:"_cleanEmptyObjectsOnPath",value:function _cleanEmptyObjectsOnPath(t){var e=t.split(".");var n=e.length>1;if(!n){return;}var o=e.splice(0,e.length-1).join(".");var i=bl(this._styles,o);if(!i){return;}var r=!Array.from(Object.keys(i)).length;if(r){this.remove(o);}}}]);return Hl;}();var jl=/*#__PURE__*/function(){function jl(){_classCallCheck(this,jl);this._normalizers=new Map();this._extractors=new Map();this._reducers=new Map();this._consumables=new Map();}_createClass(jl,[{key:"toNormalizedForm",value:function toNormalizedForm(t,e,n){if(M(e)){Kl(n,Wl(t),e);return;}if(this._normalizers.has(t)){var _o9=this._normalizers.get(t);var _o10=_o9(e),_i13=_o10.path,_r7=_o10.value;Kl(n,_i13,_r7);}else{Kl(n,t,e);}}},{key:"getNormalized",value:function getNormalized(t,e){if(!t){return Ml({},e);}if(e[t]!==undefined){return e[t];}if(this._extractors.has(t)){var _n17=this._extractors.get(t);if(typeof _n17==="string"){return bl(e,_n17);}var _o11=_n17(t,e);if(_o11){return _o11;}}return bl(e,Wl(t));}},{key:"getReducedForm",value:function getReducedForm(t,e){var n=this.getNormalized(t,e);if(n===undefined){return[];}if(this._reducers.has(t)){var _e18=this._reducers.get(t);return _e18(n);}return[[t,n]];}},{key:"getStyleNames",value:function getStyleNames(t){var _this18=this;var e=Array.from(this._consumables.keys()).filter(function(e){var n=_this18.getNormalized(e,t);if(n&&_typeof(n)=="object"){return Object.keys(n).length;}return n;});var n=new Set([].concat(_toConsumableArray(e),_toConsumableArray(Object.keys(t))));return Array.from(n.values());}},{key:"getRelatedStyles",value:function getRelatedStyles(t){return this._consumables.get(t)||[];}},{key:"setNormalizer",value:function setNormalizer(t,e){this._normalizers.set(t,e);}},{key:"setExtractor",value:function setExtractor(t,e){this._extractors.set(t,e);}},{key:"setReducer",value:function setReducer(t,e){this._reducers.set(t,e);}},{key:"setStyleRelation",value:function setStyleRelation(t,e){this._mapStyleNames(t,e);var _iterator21=_createForOfIteratorHelper(e),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var _n18=_step21.value;this._mapStyleNames(_n18,[t]);}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}}},{key:"_mapStyleNames",value:function _mapStyleNames(t,e){var _this$_consumables$ge;if(!this._consumables.has(t)){this._consumables.set(t,[]);}(_this$_consumables$ge=this._consumables.get(t)).push.apply(_this$_consumables$ge,_toConsumableArray(e));}}]);return jl;}();function ql(t){var e=null;var n=0;var o=0;var i=null;var r=new Map();if(t===""){return r;}if(t.charAt(t.length-1)!=";"){t=t+";";}for(var _s2=0;_s2<t.length;_s2++){var _a2=t.charAt(_s2);if(e===null){switch(_a2){case":":if(!i){i=t.substr(n,_s2-n);o=_s2+1;}break;case'"':case"'":e=_a2;break;case";":{var _e19=t.substr(o,_s2-o);if(i){r.set(i.trim(),_e19.trim());}i=null;n=_s2+1;break;}}}else if(_a2===e){e=null;}}return r;}function Wl(t){return t.replace("-",".");}function Kl(t,e,n){var o=n;if(M(n)){o=Ml({},bl(t,e),n);}Ll(t,e,o);}var Gl=/*#__PURE__*/function(_fc2){_inherits(Gl,_fc2);var _super4=_createSuper(Gl);function Gl(t,e,n,o){var _this19;_classCallCheck(this,Gl);_this19=_super4.call(this,t);_this19.name=e;_this19._attrs=$l(n);_this19._children=[];if(o){_this19._insertChild(0,o);}_this19._classes=new Set();if(_this19._attrs.has("class")){var _t23=_this19._attrs.get("class");Ul(_this19._classes,_t23);_this19._attrs.delete("class");}_this19._styles=new Hl(_this19.document.stylesProcessor);if(_this19._attrs.has("style")){_this19._styles.setTo(_this19._attrs.get("style"));_this19._attrs.delete("style");}_this19._customProperties=new Map();_this19._unsafeAttributesToRender=[];return _this19;}_createClass(Gl,[{key:"childCount",get:function get(){return this._children.length;}},{key:"isEmpty",get:function get(){return this._children.length===0;}},{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="element"||t==="view:element");}}},{key:"getChild",value:function getChild(t){return this._children[t];}},{key:"getChildIndex",value:function getChildIndex(t){return this._children.indexOf(t);}},{key:"getChildren",value:function getChildren(){return this._children[Symbol.iterator]();}},{key:"getAttributeKeys",value:/*#__PURE__*/regeneratorRuntime.mark(function getAttributeKeys(){return regeneratorRuntime.wrap(function getAttributeKeys$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(this._classes.size>0)){_context3.next=3;break;}_context3.next=3;return"class";case 3:if(this._styles.isEmpty){_context3.next=6;break;}_context3.next=6;return"style";case 6:return _context3.delegateYield(this._attrs.keys(),"t0",7);case 7:case"end":return _context3.stop();}}},getAttributeKeys,this);})},{key:"getAttributes",value:/*#__PURE__*/regeneratorRuntime.mark(function getAttributes(){return regeneratorRuntime.wrap(function getAttributes$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.delegateYield(this._attrs.entries(),"t0",1);case 1:if(!(this._classes.size>0)){_context4.next=4;break;}_context4.next=4;return["class",this.getAttribute("class")];case 4:if(this._styles.isEmpty){_context4.next=7;break;}_context4.next=7;return["style",this.getAttribute("style")];case 7:case"end":return _context4.stop();}}},getAttributes,this);})},{key:"getAttribute",value:function getAttribute(t){if(t=="class"){if(this._classes.size>0){return _toConsumableArray(this._classes).join(" ");}return undefined;}if(t=="style"){var _t24=this._styles.toString();return _t24==""?undefined:_t24;}return this._attrs.get(t);}},{key:"hasAttribute",value:function hasAttribute(t){if(t=="class"){return this._classes.size>0;}if(t=="style"){return!this._styles.isEmpty;}return this._attrs.has(t);}},{key:"isSimilar",value:function isSimilar(t){if(!(t instanceof Gl)){return false;}if(this===t){return true;}if(this.name!=t.name){return false;}if(this._attrs.size!==t._attrs.size||this._classes.size!==t._classes.size||this._styles.size!==t._styles.size){return false;}var _iterator22=_createForOfIteratorHelper(this._attrs),_step22;try{for(_iterator22.s();!(_step22=_iterator22.n()).done;){var _step22$value=_slicedToArray(_step22.value,2),_e20=_step22$value[0],_n19=_step22$value[1];if(!t._attrs.has(_e20)||t._attrs.get(_e20)!==_n19){return false;}}}catch(err){_iterator22.e(err);}finally{_iterator22.f();}var _iterator23=_createForOfIteratorHelper(this._classes),_step23;try{for(_iterator23.s();!(_step23=_iterator23.n()).done;){var _e21=_step23.value;if(!t._classes.has(_e21)){return false;}}}catch(err){_iterator23.e(err);}finally{_iterator23.f();}var _iterator24=_createForOfIteratorHelper(this._styles.getStyleNames()),_step24;try{for(_iterator24.s();!(_step24=_iterator24.n()).done;){var _e22=_step24.value;if(!t._styles.has(_e22)||t._styles.getAsString(_e22)!==this._styles.getAsString(_e22)){return false;}}}catch(err){_iterator24.e(err);}finally{_iterator24.f();}return true;}},{key:"hasClass",value:function hasClass(){for(var _len13=arguments.length,t=new Array(_len13),_key13=0;_key13<_len13;_key13++){t[_key13]=arguments[_key13];}for(var _i14=0,_t25=t;_i14<_t25.length;_i14++){var _e23=_t25[_i14];if(!this._classes.has(_e23)){return false;}}return true;}},{key:"getClassNames",value:function getClassNames(){return this._classes.keys();}},{key:"getStyle",value:function getStyle(t){return this._styles.getAsString(t);}},{key:"getNormalizedStyle",value:function getNormalizedStyle(t){return this._styles.getNormalized(t);}},{key:"getStyleNames",value:function getStyleNames(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return this._styles.getStyleNames(t);}},{key:"hasStyle",value:function hasStyle(){for(var _len14=arguments.length,t=new Array(_len14),_key14=0;_key14<_len14;_key14++){t[_key14]=arguments[_key14];}for(var _i15=0,_t26=t;_i15<_t26.length;_i15++){var _e24=_t26[_i15];if(!this._styles.has(_e24)){return false;}}return true;}},{key:"findAncestor",value:function findAncestor(){for(var _len15=arguments.length,t=new Array(_len15),_key15=0;_key15<_len15;_key15++){t[_key15]=arguments[_key15];}var e=_construct(bc,t);var n=this.parent;while(n){if(e.match(n)){return n;}n=n.parent;}return null;}},{key:"getCustomProperty",value:function getCustomProperty(t){return this._customProperties.get(t);}},{key:"getCustomProperties",value:/*#__PURE__*/regeneratorRuntime.mark(function getCustomProperties(){return regeneratorRuntime.wrap(function getCustomProperties$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.delegateYield(this._customProperties.entries(),"t0",1);case 1:case"end":return _context5.stop();}}},getCustomProperties,this);})},{key:"getIdentity",value:function getIdentity(){var t=Array.from(this._classes).sort().join(",");var e=this._styles.toString();var n=Array.from(this._attrs).map(function(t){return"".concat(t[0],"=\"").concat(t[1],"\"");}).sort().join(" ");return this.name+(t==""?"":" class=\"".concat(t,"\""))+(!e?"":" style=\"".concat(e,"\""))+(n==""?"":" ".concat(n));}},{key:"shouldRenderUnsafeAttribute",value:function shouldRenderUnsafeAttribute(t){return this._unsafeAttributesToRender.includes(t);}},{key:"_clone",value:function _clone(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var e=[];if(t){var _iterator25=_createForOfIteratorHelper(this.getChildren()),_step25;try{for(_iterator25.s();!(_step25=_iterator25.n()).done;){var _n20=_step25.value;e.push(_n20._clone(t));}}catch(err){_iterator25.e(err);}finally{_iterator25.f();}}var n=new this.constructor(this.document,this.name,this._attrs,e);n._classes=new Set(this._classes);n._styles.set(this._styles.getNormalized());n._customProperties=new Map(this._customProperties);n.getFillerOffset=this.getFillerOffset;return n;}},{key:"_appendChild",value:function _appendChild(t){return this._insertChild(this.childCount,t);}},{key:"_insertChild",value:function _insertChild(t,e){this._fireChange("children",this);var n=0;var o=Jl(this.document,e);var _iterator26=_createForOfIteratorHelper(o),_step26;try{for(_iterator26.s();!(_step26=_iterator26.n()).done;){var _e25=_step26.value;if(_e25.parent!==null){_e25._remove();}_e25.parent=this;_e25.document=this.document;this._children.splice(t,0,_e25);t++;n++;}}catch(err){_iterator26.e(err);}finally{_iterator26.f();}return n;}},{key:"_removeChildren",value:function _removeChildren(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;this._fireChange("children",this);for(var _n21=t;_n21<t+e;_n21++){this._children[_n21].parent=null;}return this._children.splice(t,e);}},{key:"_setAttribute",value:function _setAttribute(t,e){e=String(e);this._fireChange("attributes",this);if(t=="class"){Ul(this._classes,e);}else if(t=="style"){this._styles.setTo(e);}else{this._attrs.set(t,e);}}},{key:"_removeAttribute",value:function _removeAttribute(t){this._fireChange("attributes",this);if(t=="class"){if(this._classes.size>0){this._classes.clear();return true;}return false;}if(t=="style"){if(!this._styles.isEmpty){this._styles.clear();return true;}return false;}return this._attrs.delete(t);}},{key:"_addClass",value:function _addClass(t){this._fireChange("attributes",this);var _iterator27=_createForOfIteratorHelper(Ya(t)),_step27;try{for(_iterator27.s();!(_step27=_iterator27.n()).done;){var _e26=_step27.value;this._classes.add(_e26);}}catch(err){_iterator27.e(err);}finally{_iterator27.f();}}},{key:"_removeClass",value:function _removeClass(t){this._fireChange("attributes",this);var _iterator28=_createForOfIteratorHelper(Ya(t)),_step28;try{for(_iterator28.s();!(_step28=_iterator28.n()).done;){var _e27=_step28.value;this._classes.delete(_e27);}}catch(err){_iterator28.e(err);}finally{_iterator28.f();}}},{key:"_setStyle",value:function _setStyle(t,e){this._fireChange("attributes",this);this._styles.set(t,e);}},{key:"_removeStyle",value:function _removeStyle(t){this._fireChange("attributes",this);var _iterator29=_createForOfIteratorHelper(Ya(t)),_step29;try{for(_iterator29.s();!(_step29=_iterator29.n()).done;){var _e28=_step29.value;this._styles.remove(_e28);}}catch(err){_iterator29.e(err);}finally{_iterator29.f();}}},{key:"_setCustomProperty",value:function _setCustomProperty(t,e){this._customProperties.set(t,e);}},{key:"_removeCustomProperty",value:function _removeCustomProperty(t){return this._customProperties.delete(t);}}]);return Gl;}(fc);function $l(t){t=kc(t);var _iterator30=_createForOfIteratorHelper(t),_step30;try{for(_iterator30.s();!(_step30=_iterator30.n()).done;){var _step30$value=_slicedToArray(_step30.value,2),_e29=_step30$value[0],_n22=_step30$value[1];if(_n22===null){t.delete(_e29);}else if(typeof _n22!="string"){t.set(_e29,String(_n22));}}}catch(err){_iterator30.e(err);}finally{_iterator30.f();}return t;}function Ul(t,e){var n=e.split(/\s+/);t.clear();n.forEach(function(e){return t.add(e);});}function Jl(t,e){if(typeof e=="string"){return[new gc(t,e)];}if(!Ua(e)){e=[e];}return Array.from(e).map(function(e){if(typeof e=="string"){return new gc(t,e);}if(e instanceof pc){return new gc(t,e.data);}return e;});}var Zl=/*#__PURE__*/function(_Gl){_inherits(Zl,_Gl);var _super5=_createSuper(Zl);function Zl(t,e,n,o){var _this20;_classCallCheck(this,Zl);_this20=_super5.call(this,t,e,n,o);_this20.getFillerOffset=Yl;return _this20;}_createClass(Zl,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element");}}}]);return Zl;}(Gl);function Yl(){var t=_toConsumableArray(this.getChildren());var e=t[this.childCount-1];if(e&&e.is("element","br")){return this.childCount;}var _iterator31=_createForOfIteratorHelper(t),_step31;try{for(_iterator31.s();!(_step31=_iterator31.n()).done;){var _e30=_step31.value;if(!_e30.is("uiElement")){return null;}}}catch(err){_iterator31.e(err);}finally{_iterator31.f();}return this.childCount;}var Ql=/*#__PURE__*/function(_Zl){_inherits(Ql,_Zl);var _super6=_createSuper(Ql);function Ql(t,e,n,o){var _this21;_classCallCheck(this,Ql);_this21=_super6.call(this,t,e,n,o);_this21.set("isReadOnly",false);_this21.set("isFocused",false);_this21.bind("isReadOnly").to(t);_this21.bind("isFocused").to(t,"isFocused",function(e){return e&&t.selection.editableElement==_assertThisInitialized(_this21);});_this21.listenTo(t.selection,"change",function(){_this21.isFocused=t.isFocused&&t.selection.editableElement==_assertThisInitialized(_this21);});return _this21;}_createClass(Ql,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="editableElement"||t==="view:editableElement"||t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="editableElement"||t==="view:editableElement"||t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element");}}},{key:"destroy",value:function destroy(){this.stopListening();}}]);return Ql;}(Zl);fo(Ql,eo);var Xl=Symbol("rootName");var td=/*#__PURE__*/function(_Ql){_inherits(td,_Ql);var _super7=_createSuper(td);function td(t,e){var _this22;_classCallCheck(this,td);_this22=_super7.call(this,t,e);_this22.rootName="main";return _this22;}_createClass(td,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="rootElement"||t==="view:rootElement"||t==="editableElement"||t==="view:editableElement"||t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="rootElement"||t==="view:rootElement"||t==="editableElement"||t==="view:editableElement"||t==="containerElement"||t==="view:containerElement"||t==="element"||t==="view:element");}}},{key:"rootName",get:function get(){return this.getCustomProperty(Xl);},set:function set(t){this._setCustomProperty(Xl,t);}},{key:"_name",set:function set(t){this.name=t;}}]);return td;}(Ql);var ed=/*#__PURE__*/function(_Symbol$iterator3){function ed(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,ed);if(!t.boundaries&&!t.startPosition){throw new h("view-tree-walker-no-start-position",null);}if(t.direction&&t.direction!="forward"&&t.direction!="backward"){throw new h("view-tree-walker-unknown-direction",t.startPosition,{direction:t.direction});}this.boundaries=t.boundaries||null;if(t.startPosition){this.position=nd._createAt(t.startPosition);}else{this.position=nd._createAt(t.boundaries[t.direction=="backward"?"end":"start"]);}this.direction=t.direction||"forward";this.singleCharacters=!!t.singleCharacters;this.shallow=!!t.shallow;this.ignoreElementEnd=!!t.ignoreElementEnd;this._boundaryStartParent=this.boundaries?this.boundaries.start.parent:null;this._boundaryEndParent=this.boundaries?this.boundaries.end.parent:null;}_createClass(ed,[{key:_Symbol$iterator3,value:function value(){return this;}},{key:"skip",value:function skip(t){var e,n,o;do{o=this.position;var _this$next=this.next();e=_this$next.done;n=_this$next.value;}while(!e&&t(n));if(!e){this.position=o;}}},{key:"next",value:function next(){if(this.direction=="forward"){return this._next();}else{return this._previous();}}},{key:"_next",value:function _next(){var t=this.position.clone();var e=this.position;var n=t.parent;if(n.parent===null&&t.offset===n.childCount){return{done:true};}if(n===this._boundaryEndParent&&t.offset==this.boundaries.end.offset){return{done:true};}var o;if(n instanceof gc){if(t.isAtEnd){this.position=nd._createAfter(n);return this._next();}o=n.data[t.offset];}else{o=n.getChild(t.offset);}if(o instanceof Gl){if(!this.shallow){t=new nd(o,0);}else{t.offset++;}this.position=t;return this._formatReturnValue("elementStart",o,e,t,1);}else if(o instanceof gc){if(this.singleCharacters){t=new nd(o,0);this.position=t;return this._next();}else{var _n23=o.data.length;var _i16;if(o==this._boundaryEndParent){_n23=this.boundaries.end.offset;_i16=new pc(o,0,_n23);t=nd._createAfter(_i16);}else{_i16=new pc(o,0,o.data.length);t.offset++;}this.position=t;return this._formatReturnValue("text",_i16,e,t,_n23);}}else if(typeof o=="string"){var _o12;if(this.singleCharacters){_o12=1;}else{var _e31=n===this._boundaryEndParent?this.boundaries.end.offset:n.data.length;_o12=_e31-t.offset;}var _i17=new pc(n,t.offset,_o12);t.offset+=_o12;this.position=t;return this._formatReturnValue("text",_i17,e,t,_o12);}else{t=nd._createAfter(n);this.position=t;if(this.ignoreElementEnd){return this._next();}else{return this._formatReturnValue("elementEnd",n,e,t);}}}},{key:"_previous",value:function _previous(){var t=this.position.clone();var e=this.position;var n=t.parent;if(n.parent===null&&t.offset===0){return{done:true};}if(n==this._boundaryStartParent&&t.offset==this.boundaries.start.offset){return{done:true};}var o;if(n instanceof gc){if(t.isAtStart){this.position=nd._createBefore(n);return this._previous();}o=n.data[t.offset-1];}else{o=n.getChild(t.offset-1);}if(o instanceof Gl){if(!this.shallow){t=new nd(o,o.childCount);this.position=t;if(this.ignoreElementEnd){return this._previous();}else{return this._formatReturnValue("elementEnd",o,e,t);}}else{t.offset--;this.position=t;return this._formatReturnValue("elementStart",o,e,t,1);}}else if(o instanceof gc){if(this.singleCharacters){t=new nd(o,o.data.length);this.position=t;return this._previous();}else{var _n24=o.data.length;var _i18;if(o==this._boundaryStartParent){var _e32=this.boundaries.start.offset;_i18=new pc(o,_e32,o.data.length-_e32);_n24=_i18.data.length;t=nd._createBefore(_i18);}else{_i18=new pc(o,0,o.data.length);t.offset--;}this.position=t;return this._formatReturnValue("text",_i18,e,t,_n24);}}else if(typeof o=="string"){var _o13;if(!this.singleCharacters){var _e33=n===this._boundaryStartParent?this.boundaries.start.offset:0;_o13=t.offset-_e33;}else{_o13=1;}t.offset-=_o13;var _i19=new pc(n,t.offset,_o13);this.position=t;return this._formatReturnValue("text",_i19,e,t,_o13);}else{t=nd._createBefore(n);this.position=t;return this._formatReturnValue("elementStart",n,e,t,1);}}},{key:"_formatReturnValue",value:function _formatReturnValue(t,e,n,o,i){if(e instanceof pc){if(e.offsetInText+e.data.length==e.textNode.data.length){if(this.direction=="forward"&&!(this.boundaries&&this.boundaries.end.isEqual(this.position))){o=nd._createAfter(e.textNode);this.position=o;}else{n=nd._createAfter(e.textNode);}}if(e.offsetInText===0){if(this.direction=="backward"&&!(this.boundaries&&this.boundaries.start.isEqual(this.position))){o=nd._createBefore(e.textNode);this.position=o;}else{n=nd._createBefore(e.textNode);}}}return{done:false,value:{type:t,item:e,previousPosition:n,nextPosition:o,length:i}};}}]);return ed;}(Symbol.iterator);var nd=/*#__PURE__*/function(){function nd(t,e){_classCallCheck(this,nd);this.parent=t;this.offset=e;}_createClass(nd,[{key:"nodeAfter",get:function get(){if(this.parent.is("$text")){return null;}return this.parent.getChild(this.offset)||null;}},{key:"nodeBefore",get:function get(){if(this.parent.is("$text")){return null;}return this.parent.getChild(this.offset-1)||null;}},{key:"isAtStart",get:function get(){return this.offset===0;}},{key:"isAtEnd",get:function get(){var t=this.parent.is("$text")?this.parent.data.length:this.parent.childCount;return this.offset===t;}},{key:"root",get:function get(){return this.parent.root;}},{key:"editableElement",get:function get(){var t=this.parent;while(!(t instanceof Ql)){if(t.parent){t=t.parent;}else{return null;}}return t;}},{key:"getShiftedBy",value:function getShiftedBy(t){var e=nd._createAt(this);var n=e.offset+t;e.offset=n<0?0:n;return e;}},{key:"getLastMatchingPosition",value:function getLastMatchingPosition(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};e.startPosition=this;var n=new ed(e);n.skip(t);return n.position;}},{key:"getAncestors",value:function getAncestors(){if(this.parent.is("documentFragment")){return[this.parent];}else{return this.parent.getAncestors({includeSelf:true});}}},{key:"getCommonAncestor",value:function getCommonAncestor(t){var e=this.getAncestors();var n=t.getAncestors();var o=0;while(e[o]==n[o]&&e[o]){o++;}return o===0?null:e[o-1];}},{key:"is",value:function is(t){return t==="position"||t==="view:position";}},{key:"isEqual",value:function isEqual(t){return this.parent==t.parent&&this.offset==t.offset;}},{key:"isBefore",value:function isBefore(t){return this.compareWith(t)=="before";}},{key:"isAfter",value:function isAfter(t){return this.compareWith(t)=="after";}},{key:"compareWith",value:function compareWith(t){if(this.root!==t.root){return"different";}if(this.isEqual(t)){return"same";}var e=this.parent.is("node")?this.parent.getPath():[];var n=t.parent.is("node")?t.parent.getPath():[];e.push(this.offset);n.push(t.offset);var o=lc(e,n);switch(o){case"prefix":return"before";case"extension":return"after";default:return e[o]<n[o]?"before":"after";}}},{key:"getWalker",value:function getWalker(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};t.startPosition=this;return new ed(t);}},{key:"clone",value:function clone(){return new nd(this.parent,this.offset);}}],[{key:"_createAt",value:function _createAt(t,e){if(t instanceof nd){return new this(t.parent,t.offset);}else{var _n25=t;if(e=="end"){e=_n25.is("$text")?_n25.data.length:_n25.childCount;}else if(e=="before"){return this._createBefore(_n25);}else if(e=="after"){return this._createAfter(_n25);}else if(e!==0&&!e){throw new h("view-createpositionat-offset-required",_n25);}return new nd(_n25,e);}}},{key:"_createAfter",value:function _createAfter(t){if(t.is("$textProxy")){return new nd(t.textNode,t.offsetInText+t.data.length);}if(!t.parent){throw new h("view-position-after-root",t,{root:t});}return new nd(t.parent,t.index+1);}},{key:"_createBefore",value:function _createBefore(t){if(t.is("$textProxy")){return new nd(t.textNode,t.offsetInText);}if(!t.parent){throw new h("view-position-before-root",t,{root:t});}return new nd(t.parent,t.index);}}]);return nd;}();var od=/*#__PURE__*/function(_Symbol$iterator4){function od(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,od);this.start=t.clone();this.end=e?e.clone():t.clone();}_createClass(od,[{key:_Symbol$iterator4,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.delegateYield(new ed({boundaries:this,ignoreElementEnd:true}),"t0",1);case 1:case"end":return _context6.stop();}}},value,this);})},{key:"isCollapsed",get:function get(){return this.start.isEqual(this.end);}},{key:"isFlat",get:function get(){return this.start.parent===this.end.parent;}},{key:"root",get:function get(){return this.start.root;}},{key:"getEnlarged",value:function getEnlarged(){var t=this.start.getLastMatchingPosition(id,{direction:"backward"});var e=this.end.getLastMatchingPosition(id);if(t.parent.is("$text")&&t.isAtStart){t=nd._createBefore(t.parent);}if(e.parent.is("$text")&&e.isAtEnd){e=nd._createAfter(e.parent);}return new od(t,e);}},{key:"getTrimmed",value:function getTrimmed(){var t=this.start.getLastMatchingPosition(id);if(t.isAfter(this.end)||t.isEqual(this.end)){return new od(t,t);}var e=this.end.getLastMatchingPosition(id,{direction:"backward"});var n=t.nodeAfter;var o=e.nodeBefore;if(n&&n.is("$text")){t=new nd(n,0);}if(o&&o.is("$text")){e=new nd(o,o.data.length);}return new od(t,e);}},{key:"isEqual",value:function isEqual(t){return this==t||this.start.isEqual(t.start)&&this.end.isEqual(t.end);}},{key:"containsPosition",value:function containsPosition(t){return t.isAfter(this.start)&&t.isBefore(this.end);}},{key:"containsRange",value:function containsRange(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(t.isCollapsed){e=false;}var n=this.containsPosition(t.start)||e&&this.start.isEqual(t.start);var o=this.containsPosition(t.end)||e&&this.end.isEqual(t.end);return n&&o;}},{key:"getDifference",value:function getDifference(t){var e=[];if(this.isIntersecting(t)){if(this.containsPosition(t.start)){e.push(new od(this.start,t.start));}if(this.containsPosition(t.end)){e.push(new od(t.end,this.end));}}else{e.push(this.clone());}return e;}},{key:"getIntersection",value:function getIntersection(t){if(this.isIntersecting(t)){var _e34=this.start;var _n26=this.end;if(this.containsPosition(t.start)){_e34=t.start;}if(this.containsPosition(t.end)){_n26=t.end;}return new od(_e34,_n26);}return null;}},{key:"getWalker",value:function getWalker(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};t.boundaries=this;return new ed(t);}},{key:"getCommonAncestor",value:function getCommonAncestor(){return this.start.getCommonAncestor(this.end);}},{key:"getContainedElement",value:function getContainedElement(){if(this.isCollapsed){return null;}var t=this.start.nodeAfter;var e=this.end.nodeBefore;if(this.start.parent.is("$text")&&this.start.isAtEnd&&this.start.parent.nextSibling){t=this.start.parent.nextSibling;}if(this.end.parent.is("$text")&&this.end.isAtStart&&this.end.parent.previousSibling){e=this.end.parent.previousSibling;}if(t&&t.is("element")&&t===e){return t;}return null;}},{key:"clone",value:function clone(){return new od(this.start,this.end);}},{key:"getItems",value:/*#__PURE__*/regeneratorRuntime.mark(function getItems(){var t,e,_iterator32,_step32,_t27,_args7=arguments;return regeneratorRuntime.wrap(function getItems$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:t=_args7.length>0&&_args7[0]!==undefined?_args7[0]:{};t.boundaries=this;t.ignoreElementEnd=true;e=new ed(t);_iterator32=_createForOfIteratorHelper(e);_context7.prev=5;_iterator32.s();case 7:if((_step32=_iterator32.n()).done){_context7.next=13;break;}_t27=_step32.value;_context7.next=11;return _t27.item;case 11:_context7.next=7;break;case 13:_context7.next=18;break;case 15:_context7.prev=15;_context7.t0=_context7["catch"](5);_iterator32.e(_context7.t0);case 18:_context7.prev=18;_iterator32.f();return _context7.finish(18);case 21:case"end":return _context7.stop();}}},getItems,this,[[5,15,18,21]]);})},{key:"getPositions",value:/*#__PURE__*/regeneratorRuntime.mark(function getPositions(){var t,e,_iterator33,_step33,_t28,_args8=arguments;return regeneratorRuntime.wrap(function getPositions$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:t=_args8.length>0&&_args8[0]!==undefined?_args8[0]:{};t.boundaries=this;e=new ed(t);_context8.next=5;return e.position;case 5:_iterator33=_createForOfIteratorHelper(e);_context8.prev=6;_iterator33.s();case 8:if((_step33=_iterator33.n()).done){_context8.next=14;break;}_t28=_step33.value;_context8.next=12;return _t28.nextPosition;case 12:_context8.next=8;break;case 14:_context8.next=19;break;case 16:_context8.prev=16;_context8.t0=_context8["catch"](6);_iterator33.e(_context8.t0);case 19:_context8.prev=19;_iterator33.f();return _context8.finish(19);case 22:case"end":return _context8.stop();}}},getPositions,this,[[6,16,19,22]]);})},{key:"is",value:function is(t){return t==="range"||t==="view:range";}},{key:"isIntersecting",value:function isIntersecting(t){return this.start.isBefore(t.end)&&this.end.isAfter(t.start);}}],[{key:"_createFromParentsAndOffsets",value:function _createFromParentsAndOffsets(t,e,n,o){return new this(new nd(t,e),new nd(n,o));}},{key:"_createFromPositionAndShift",value:function _createFromPositionAndShift(t,e){var n=t;var o=t.getShiftedBy(e);return e>0?new this(n,o):new this(o,n);}},{key:"_createIn",value:function _createIn(t){return this._createFromParentsAndOffsets(t,0,t,t.childCount);}},{key:"_createOn",value:function _createOn(t){var e=t.is("$textProxy")?t.offsetSize:1;return this._createFromPositionAndShift(nd._createBefore(t),e);}}]);return od;}(Symbol.iterator);function id(t){if(t.item.is("attributeElement")||t.item.is("uiElement")){return true;}return false;}function rd(t){var e=0;var _iterator34=_createForOfIteratorHelper(t),_step34;try{for(_iterator34.s();!(_step34=_iterator34.n()).done;){var _n27=_step34.value;e++;}}catch(err){_iterator34.e(err);}finally{_iterator34.f();}return e;}var sd=/*#__PURE__*/function(){function sd(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var e=arguments.length>1?arguments[1]:undefined;var n=arguments.length>2?arguments[2]:undefined;_classCallCheck(this,sd);this._ranges=[];this._lastRangeBackward=false;this._isFake=false;this._fakeSelectionLabel="";this.setTo(t,e,n);}_createClass(sd,[{key:"isFake",get:function get(){return this._isFake;}},{key:"fakeSelectionLabel",get:function get(){return this._fakeSelectionLabel;}},{key:"anchor",get:function get(){if(!this._ranges.length){return null;}var t=this._ranges[this._ranges.length-1];var e=this._lastRangeBackward?t.end:t.start;return e.clone();}},{key:"focus",get:function get(){if(!this._ranges.length){return null;}var t=this._ranges[this._ranges.length-1];var e=this._lastRangeBackward?t.start:t.end;return e.clone();}},{key:"isCollapsed",get:function get(){return this.rangeCount===1&&this._ranges[0].isCollapsed;}},{key:"rangeCount",get:function get(){return this._ranges.length;}},{key:"isBackward",get:function get(){return!this.isCollapsed&&this._lastRangeBackward;}},{key:"editableElement",get:function get(){if(this.anchor){return this.anchor.editableElement;}return null;}},{key:"getRanges",value:/*#__PURE__*/regeneratorRuntime.mark(function getRanges(){var _iterator35,_step35,_t29;return regeneratorRuntime.wrap(function getRanges$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_iterator35=_createForOfIteratorHelper(this._ranges);_context9.prev=1;_iterator35.s();case 3:if((_step35=_iterator35.n()).done){_context9.next=9;break;}_t29=_step35.value;_context9.next=7;return _t29.clone();case 7:_context9.next=3;break;case 9:_context9.next=14;break;case 11:_context9.prev=11;_context9.t0=_context9["catch"](1);_iterator35.e(_context9.t0);case 14:_context9.prev=14;_iterator35.f();return _context9.finish(14);case 17:case"end":return _context9.stop();}}},getRanges,this,[[1,11,14,17]]);})},{key:"getFirstRange",value:function getFirstRange(){var t=null;var _iterator36=_createForOfIteratorHelper(this._ranges),_step36;try{for(_iterator36.s();!(_step36=_iterator36.n()).done;){var _e35=_step36.value;if(!t||_e35.start.isBefore(t.start)){t=_e35;}}}catch(err){_iterator36.e(err);}finally{_iterator36.f();}return t?t.clone():null;}},{key:"getLastRange",value:function getLastRange(){var t=null;var _iterator37=_createForOfIteratorHelper(this._ranges),_step37;try{for(_iterator37.s();!(_step37=_iterator37.n()).done;){var _e36=_step37.value;if(!t||_e36.end.isAfter(t.end)){t=_e36;}}}catch(err){_iterator37.e(err);}finally{_iterator37.f();}return t?t.clone():null;}},{key:"getFirstPosition",value:function getFirstPosition(){var t=this.getFirstRange();return t?t.start.clone():null;}},{key:"getLastPosition",value:function getLastPosition(){var t=this.getLastRange();return t?t.end.clone():null;}},{key:"isEqual",value:function isEqual(t){if(this.isFake!=t.isFake){return false;}if(this.isFake&&this.fakeSelectionLabel!=t.fakeSelectionLabel){return false;}if(this.rangeCount!=t.rangeCount){return false;}else if(this.rangeCount===0){return true;}if(!this.anchor.isEqual(t.anchor)||!this.focus.isEqual(t.focus)){return false;}var _iterator38=_createForOfIteratorHelper(this._ranges),_step38;try{for(_iterator38.s();!(_step38=_iterator38.n()).done;){var _e37=_step38.value;var _n28=false;var _iterator39=_createForOfIteratorHelper(t._ranges),_step39;try{for(_iterator39.s();!(_step39=_iterator39.n()).done;){var _o14=_step39.value;if(_e37.isEqual(_o14)){_n28=true;break;}}}catch(err){_iterator39.e(err);}finally{_iterator39.f();}if(!_n28){return false;}}}catch(err){_iterator38.e(err);}finally{_iterator38.f();}return true;}},{key:"isSimilar",value:function isSimilar(t){if(this.isBackward!=t.isBackward){return false;}var e=rd(this.getRanges());var n=rd(t.getRanges());if(e!=n){return false;}if(e==0){return true;}var _iterator40=_createForOfIteratorHelper(this.getRanges()),_step40;try{for(_iterator40.s();!(_step40=_iterator40.n()).done;){var _e38=_step40.value;_e38=_e38.getTrimmed();var _n29=false;var _iterator41=_createForOfIteratorHelper(t.getRanges()),_step41;try{for(_iterator41.s();!(_step41=_iterator41.n()).done;){var _o15=_step41.value;_o15=_o15.getTrimmed();if(_e38.start.isEqual(_o15.start)&&_e38.end.isEqual(_o15.end)){_n29=true;break;}}}catch(err){_iterator41.e(err);}finally{_iterator41.f();}if(!_n29){return false;}}}catch(err){_iterator40.e(err);}finally{_iterator40.f();}return true;}},{key:"getSelectedElement",value:function getSelectedElement(){if(this.rangeCount!==1){return null;}return this.getFirstRange().getContainedElement();}},{key:"setTo",value:function setTo(t,e,n){if(t===null){this._setRanges([]);this._setFakeOptions(e);}else if(t instanceof sd||t instanceof ad){this._setRanges(t.getRanges(),t.isBackward);this._setFakeOptions({fake:t.isFake,label:t.fakeSelectionLabel});}else if(t instanceof od){this._setRanges([t],e&&e.backward);this._setFakeOptions(e);}else if(t instanceof nd){this._setRanges([new od(t)]);this._setFakeOptions(e);}else if(t instanceof fc){var _o16=!!n&&!!n.backward;var _i20;if(e===undefined){throw new h("view-selection-setto-required-second-parameter",this);}else if(e=="in"){_i20=od._createIn(t);}else if(e=="on"){_i20=od._createOn(t);}else{_i20=new od(nd._createAt(t,e));}this._setRanges([_i20],_o16);this._setFakeOptions(n);}else if(Ua(t)){this._setRanges(t,e&&e.backward);this._setFakeOptions(e);}else{throw new h("view-selection-setto-not-selectable",this);}this.fire("change");}},{key:"setFocus",value:function setFocus(t,e){if(this.anchor===null){throw new h("view-selection-setfocus-no-ranges",this);}var n=nd._createAt(t,e);if(n.compareWith(this.focus)=="same"){return;}var o=this.anchor;this._ranges.pop();if(n.compareWith(o)=="before"){this._addRange(new od(n,o),true);}else{this._addRange(new od(o,n));}this.fire("change");}},{key:"is",value:function is(t){return t==="selection"||t==="view:selection";}},{key:"_setRanges",value:function _setRanges(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;t=Array.from(t);this._ranges=[];var _iterator42=_createForOfIteratorHelper(t),_step42;try{for(_iterator42.s();!(_step42=_iterator42.n()).done;){var _e39=_step42.value;this._addRange(_e39);}}catch(err){_iterator42.e(err);}finally{_iterator42.f();}this._lastRangeBackward=!!e;}},{key:"_setFakeOptions",value:function _setFakeOptions(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this._isFake=!!t.fake;this._fakeSelectionLabel=t.fake?t.label||"":"";}},{key:"_addRange",value:function _addRange(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!(t instanceof od)){throw new h("view-selection-add-range-not-range",this);}this._pushRange(t);this._lastRangeBackward=!!e;}},{key:"_pushRange",value:function _pushRange(t){var _iterator43=_createForOfIteratorHelper(this._ranges),_step43;try{for(_iterator43.s();!(_step43=_iterator43.n()).done;){var _e40=_step43.value;if(t.isIntersecting(_e40)){throw new h("view-selection-range-intersects",this,{addedRange:t,intersectingRange:_e40});}}}catch(err){_iterator43.e(err);}finally{_iterator43.f();}this._ranges.push(new od(t.start,t.end));}}]);return sd;}();fo(sd,C);var ad=/*#__PURE__*/function(){function ad(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var e=arguments.length>1?arguments[1]:undefined;var n=arguments.length>2?arguments[2]:undefined;_classCallCheck(this,ad);this._selection=new sd();this._selection.delegate("change").to(this);this._selection.setTo(t,e,n);}_createClass(ad,[{key:"isFake",get:function get(){return this._selection.isFake;}},{key:"fakeSelectionLabel",get:function get(){return this._selection.fakeSelectionLabel;}},{key:"anchor",get:function get(){return this._selection.anchor;}},{key:"focus",get:function get(){return this._selection.focus;}},{key:"isCollapsed",get:function get(){return this._selection.isCollapsed;}},{key:"rangeCount",get:function get(){return this._selection.rangeCount;}},{key:"isBackward",get:function get(){return this._selection.isBackward;}},{key:"editableElement",get:function get(){return this._selection.editableElement;}},{key:"_ranges",get:function get(){return this._selection._ranges;}},{key:"getRanges",value:/*#__PURE__*/regeneratorRuntime.mark(function getRanges(){return regeneratorRuntime.wrap(function getRanges$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.delegateYield(this._selection.getRanges(),"t0",1);case 1:case"end":return _context10.stop();}}},getRanges,this);})},{key:"getFirstRange",value:function getFirstRange(){return this._selection.getFirstRange();}},{key:"getLastRange",value:function getLastRange(){return this._selection.getLastRange();}},{key:"getFirstPosition",value:function getFirstPosition(){return this._selection.getFirstPosition();}},{key:"getLastPosition",value:function getLastPosition(){return this._selection.getLastPosition();}},{key:"getSelectedElement",value:function getSelectedElement(){return this._selection.getSelectedElement();}},{key:"isEqual",value:function isEqual(t){return this._selection.isEqual(t);}},{key:"isSimilar",value:function isSimilar(t){return this._selection.isSimilar(t);}},{key:"is",value:function is(t){return t==="selection"||t=="documentSelection"||t=="view:selection"||t=="view:documentSelection";}},{key:"_setTo",value:function _setTo(t,e,n){this._selection.setTo(t,e,n);}},{key:"_setFocus",value:function _setFocus(t,e){this._selection.setFocus(t,e);}}]);return ad;}();fo(ad,C);var cd=/*#__PURE__*/function(_i21){_inherits(cd,_i21);var _super8=_createSuper(cd);function cd(t,e,n){var _this23;_classCallCheck(this,cd);_this23=_super8.call(this,t,e);_this23.startRange=n;_this23._eventPhase="none";_this23._currentTarget=null;return _this23;}_createClass(cd,[{key:"eventPhase",get:function get(){return this._eventPhase;}},{key:"currentTarget",get:function get(){return this._currentTarget;}}]);return cd;}(i);var ld=Symbol("bubbling contexts");var dd={fire:function fire(t){try{var _n30=t instanceof i?t:new i(this,t);var _o17=pd(this);if(!_o17.size){return;}ud(_n30,"capturing",this);for(var _len16=arguments.length,e=new Array(_len16>1?_len16-1:0),_key16=1;_key16<_len16;_key16++){e[_key16-1]=arguments[_key16];}if(fd.apply(void 0,[_o17,"$capture",_n30].concat(e))){return _n30.return;}var _r8=_n30.startRange||this.selection.getFirstRange();var _s3=_r8?_r8.getContainedElement():null;var _a3=_s3?Boolean(gd(_o17,_s3)):false;var _c2=_s3||md(_r8);ud(_n30,"atTarget",_c2);if(!_a3){if(fd.apply(void 0,[_o17,"$text",_n30].concat(e))){return _n30.return;}ud(_n30,"bubbling",_c2);}while(_c2){if(_c2.is("rootElement")){if(fd.apply(void 0,[_o17,"$root",_n30].concat(e))){return _n30.return;}}else if(_c2.is("element")){if(fd.apply(void 0,[_o17,_c2.name,_n30].concat(e))){return _n30.return;}}if(fd.apply(void 0,[_o17,_c2,_n30].concat(e))){return _n30.return;}_c2=_c2.parent;ud(_n30,"bubbling",_c2);}ud(_n30,"bubbling",this);fd.apply(void 0,[_o17,"$document",_n30].concat(e));return _n30.return;}catch(t){h.rethrowUnexpectedError(t,this);}},_addEventListener:function _addEventListener(t,e,n){var o=Ya(n.context||"$document");var i=pd(this);var _iterator44=_createForOfIteratorHelper(o),_step44;try{for(_iterator44.s();!(_step44=_iterator44.n()).done;){var _r9=_step44.value;var _o18=i.get(_r9);if(!_o18){_o18=Object.create(C);i.set(_r9,_o18);}this.listenTo(_o18,t,e,n);}}catch(err){_iterator44.e(err);}finally{_iterator44.f();}},_removeEventListener:function _removeEventListener(t,e){var n=pd(this);var _iterator45=_createForOfIteratorHelper(n.values()),_step45;try{for(_iterator45.s();!(_step45=_iterator45.n()).done;){var _o19=_step45.value;this.stopListening(_o19,t,e);}}catch(err){_iterator45.e(err);}finally{_iterator45.f();}}};var hd=dd;function ud(t,e,n){if(t instanceof cd){t._eventPhase=e;t._currentTarget=n;}}function fd(t,e,n){var i=typeof e=="string"?t.get(e):gd(t,e);if(!i){return false;}for(var _len17=arguments.length,o=new Array(_len17>3?_len17-3:0),_key17=3;_key17<_len17;_key17++){o[_key17-3]=arguments[_key17];}i.fire.apply(i,[n].concat(o));return n.stop.called;}function gd(t,e){var _iterator46=_createForOfIteratorHelper(t),_step46;try{for(_iterator46.s();!(_step46=_iterator46.n()).done;){var _step46$value=_slicedToArray(_step46.value,2),_n31=_step46$value[0],_o20=_step46$value[1];if(typeof _n31=="function"&&_n31(e)){return _o20;}}}catch(err){_iterator46.e(err);}finally{_iterator46.f();}return null;}function pd(t){if(!t[ld]){t[ld]=new Map();}return t[ld];}function md(t){if(!t){return null;}var e=t.start.parent;var n=t.end.parent;var o=e.getPath();var i=n.getPath();return o.length>i.length?e:n;}var kd=/*#__PURE__*/function(){function kd(t){_classCallCheck(this,kd);this.selection=new ad();this.roots=new Ja({idProperty:"rootName"});this.stylesProcessor=t;this.set("isReadOnly",false);this.set("isFocused",false);this.set("isSelecting",false);this.set("isComposing",false);this._postFixers=new Set();}_createClass(kd,[{key:"getRoot",value:function getRoot(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"main";return this.roots.get(t);}},{key:"registerPostFixer",value:function registerPostFixer(t){this._postFixers.add(t);}},{key:"destroy",value:function destroy(){this.roots.map(function(t){return t.destroy();});this.stopListening();}},{key:"_callPostFixers",value:function _callPostFixers(t){var e=false;do{var _iterator47=_createForOfIteratorHelper(this._postFixers),_step47;try{for(_iterator47.s();!(_step47=_iterator47.n()).done;){var _n32=_step47.value;e=_n32(t);if(e){break;}}}catch(err){_iterator47.e(err);}finally{_iterator47.f();}}while(e);}}]);return kd;}();fo(kd,hd);fo(kd,eo);var bd=10;var wd=/*#__PURE__*/function(_Gl2){_inherits(wd,_Gl2);var _super9=_createSuper(wd);function wd(t,e,n,o){var _this24;_classCallCheck(this,wd);_this24=_super9.call(this,t,e,n,o);_this24.getFillerOffset=_d;_this24._priority=bd;_this24._id=null;_this24._clonesGroup=null;return _this24;}_createClass(wd,[{key:"priority",get:function get(){return this._priority;}},{key:"id",get:function get(){return this._id;}},{key:"getElementsWithSameId",value:function getElementsWithSameId(){if(this.id===null){throw new h("attribute-element-get-elements-with-same-id-no-id",this);}return new Set(this._clonesGroup);}},{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="attributeElement"||t==="view:attributeElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="attributeElement"||t==="view:attributeElement"||t==="element"||t==="view:element");}}},{key:"isSimilar",value:function isSimilar(t){if(this.id!==null||t.id!==null){return this.id===t.id;}return _get(_getPrototypeOf(wd.prototype),"isSimilar",this).call(this,t)&&this.priority==t.priority;}},{key:"_clone",value:function _clone(t){var e=_get(_getPrototypeOf(wd.prototype),"_clone",this).call(this,t);e._priority=this._priority;e._id=this._id;return e;}}]);return wd;}(Gl);wd.DEFAULT_PRIORITY=bd;function _d(){if(vd(this)){return null;}var t=this.parent;while(t&&t.is("attributeElement")){if(vd(t)>1){return null;}t=t.parent;}if(!t||vd(t)>1){return null;}return this.childCount;}function vd(t){return Array.from(t.getChildren()).filter(function(t){return!t.is("uiElement");}).length;}var Ad=/*#__PURE__*/function(_Gl3){_inherits(Ad,_Gl3);var _super10=_createSuper(Ad);function Ad(t,e,n,o){var _this25;_classCallCheck(this,Ad);_this25=_super10.call(this,t,e,n,o);_this25.getFillerOffset=Cd;return _this25;}_createClass(Ad,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="emptyElement"||t==="view:emptyElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="emptyElement"||t==="view:emptyElement"||t==="element"||t==="view:element");}}},{key:"_insertChild",value:function _insertChild(t,e){if(e&&(e instanceof fc||Array.from(e).length>0)){throw new h("view-emptyelement-cannot-add",[this,e]);}}}]);return Ad;}(Gl);function Cd(){return null;}var yd=navigator.userAgent.toLowerCase();var xd={isMac:Dd(yd),isWindows:Sd(yd),isGecko:Pd(yd),isSafari:Td(yd),isiOS:Bd(yd),isAndroid:Id(yd),isBlink:Rd(yd),features:{isRegExpUnicodePropertySupported:Od()}};var Ed=xd;function Dd(t){return t.indexOf("macintosh")>-1;}function Sd(t){return t.indexOf("windows")>-1;}function Pd(t){return!!t.match(/gecko\/\d+/);}function Td(t){return t.indexOf(" applewebkit/")>-1&&t.indexOf("chrome")===-1;}function Bd(t){return!!t.match(/iphone|ipad/i)||Dd(t)&&navigator.maxTouchPoints>0;}function Id(t){return t.indexOf("android")>-1;}function Rd(t){return t.indexOf("chrome/")>-1&&t.indexOf("edge/")<0;}function Od(){var t=false;try{t="ć".search(new RegExp("[\\p{L}]","u"))===0;}catch(t){}return t;}var zd={ctrl:"⌃",cmd:"⌘",alt:"⌥",shift:"⇧"};var Md={ctrl:"Ctrl+",alt:"Alt+",shift:"Shift+"};var Nd=Gd();var Fd=Object.fromEntries(Object.entries(Nd).map(function(_ref11){var _ref12=_slicedToArray(_ref11,2),t=_ref12[0],e=_ref12[1];return[e,t.charAt(0).toUpperCase()+t.slice(1)];}));function Vd(t){var e;if(typeof t=="string"){e=Nd[t.toLowerCase()];if(!e){throw new h("keyboard-unknown-key",null,{key:t});}}else{e=t.keyCode+(t.altKey?Nd.alt:0)+(t.ctrlKey?Nd.ctrl:0)+(t.shiftKey?Nd.shift:0)+(t.metaKey?Nd.cmd:0);}return e;}function Ld(t){if(typeof t=="string"){t=$d(t);}return t.map(function(t){return typeof t=="string"?Wd(t):t;}).reduce(function(t,e){return e+t;},0);}function Hd(t){var e=Ld(t);var n=Object.entries(Ed.isMac?zd:Md);var o=n.reduce(function(t,_ref13){var _ref14=_slicedToArray(_ref13,2),n=_ref14[0],o=_ref14[1];if((e&Nd[n])!=0){e&=~Nd[n];t+=o;}return t;},"");return o+(e?Fd[e]:"");}function jd(t){return t==Nd.arrowright||t==Nd.arrowleft||t==Nd.arrowup||t==Nd.arrowdown;}function qd(t,e){var n=e==="ltr";switch(t){case Nd.arrowleft:return n?"left":"right";case Nd.arrowright:return n?"right":"left";case Nd.arrowup:return"up";case Nd.arrowdown:return"down";}}function Wd(t){if(t.endsWith("!")){return Vd(t.slice(0,-1));}var e=Vd(t);return Ed.isMac&&e==Nd.ctrl?Nd.cmd:e;}function Kd(t,e){var n=qd(t,e);return n==="down"||n==="right";}function Gd(){var t={arrowleft:37,arrowup:38,arrowright:39,arrowdown:40,backspace:8,delete:46,enter:13,space:32,esc:27,tab:9,ctrl:1114112,shift:2228224,alt:4456448,cmd:8912896};for(var _e41=65;_e41<=90;_e41++){var _n33=String.fromCharCode(_e41);t[_n33.toLowerCase()]=_e41;}for(var _e42=48;_e42<=57;_e42++){t[_e42-48]=_e42;}for(var _e43=112;_e43<=123;_e43++){t["f"+(_e43-111)]=_e43;}var _iterator48=_createForOfIteratorHelper("`-=[];',./\\"),_step48;try{for(_iterator48.s();!(_step48=_iterator48.n()).done;){var _e44=_step48.value;t[_e44]=_e44.charCodeAt(0);}}catch(err){_iterator48.e(err);}finally{_iterator48.f();}return t;}function $d(t){return t.split("+").map(function(t){return t.trim();});}var Ud=/*#__PURE__*/function(_Gl4){_inherits(Ud,_Gl4);var _super11=_createSuper(Ud);function Ud(t,e,n,o){var _this26;_classCallCheck(this,Ud);_this26=_super11.call(this,t,e,n,o);_this26.getFillerOffset=Zd;return _this26;}_createClass(Ud,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="uiElement"||t==="view:uiElement"||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="uiElement"||t==="view:uiElement"||t==="element"||t==="view:element");}}},{key:"_insertChild",value:function _insertChild(t,e){if(e&&(e instanceof fc||Array.from(e).length>0)){throw new h("view-uielement-cannot-add",this);}}},{key:"render",value:function render(t){return this.toDomElement(t);}},{key:"toDomElement",value:function toDomElement(t){var e=t.createElement(this.name);var _iterator49=_createForOfIteratorHelper(this.getAttributeKeys()),_step49;try{for(_iterator49.s();!(_step49=_iterator49.n()).done;){var _t30=_step49.value;e.setAttribute(_t30,this.getAttribute(_t30));}}catch(err){_iterator49.e(err);}finally{_iterator49.f();}return e;}}]);return Ud;}(Gl);function Jd(t){t.document.on("arrowKey",function(e,n){return Yd(e,n,t.domConverter);},{priority:"low"});}function Zd(){return null;}function Yd(t,e,n){if(e.keyCode==Nd.arrowright){var _t31=e.domTarget.ownerDocument.defaultView.getSelection();var _o21=_t31.rangeCount==1&&_t31.getRangeAt(0).collapsed;if(_o21||e.shiftKey){var _e45=_t31.focusNode;var _i22=_t31.focusOffset;var _r10=n.domPositionToView(_e45,_i22);if(_r10===null){return;}var _s4=false;var _a4=_r10.getLastMatchingPosition(function(t){if(t.item.is("uiElement")){_s4=true;}if(t.item.is("uiElement")||t.item.is("attributeElement")){return true;}return false;});if(_s4){var _e46=n.viewPositionToDom(_a4);if(_o21){_t31.collapse(_e46.parent,_e46.offset);}else{_t31.extend(_e46.parent,_e46.offset);}}}}}var Qd=/*#__PURE__*/function(_Gl5){_inherits(Qd,_Gl5);var _super12=_createSuper(Qd);function Qd(t,e,n,o){var _this27;_classCallCheck(this,Qd);_this27=_super12.call(this,t,e,n,o);_this27.getFillerOffset=Xd;return _this27;}_createClass(Qd,[{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="rawElement"||t==="view:rawElement"||t===this.name||t==="view:"+this.name||t==="element"||t==="view:element"||t==="node"||t==="view:node";}else{return e===this.name&&(t==="rawElement"||t==="view:rawElement"||t==="element"||t==="view:element");}}},{key:"_insertChild",value:function _insertChild(t,e){if(e&&(e instanceof fc||Array.from(e).length>0)){throw new h("view-rawelement-cannot-add",[this,e]);}}}]);return Qd;}(Gl);function Xd(){return null;}var th=/*#__PURE__*/function(_Symbol$iterator5){function th(t,e){_classCallCheck(this,th);this.document=t;this._children=[];if(e){this._insertChild(0,e);}}_createClass(th,[{key:_Symbol$iterator5,value:function value(){return this._children[Symbol.iterator]();}},{key:"childCount",get:function get(){return this._children.length;}},{key:"isEmpty",get:function get(){return this.childCount===0;}},{key:"root",get:function get(){return this;}},{key:"parent",get:function get(){return null;}},{key:"is",value:function is(t){return t==="documentFragment"||t==="view:documentFragment";}},{key:"_appendChild",value:function _appendChild(t){return this._insertChild(this.childCount,t);}},{key:"getChild",value:function getChild(t){return this._children[t];}},{key:"getChildIndex",value:function getChildIndex(t){return this._children.indexOf(t);}},{key:"getChildren",value:function getChildren(){return this._children[Symbol.iterator]();}},{key:"_insertChild",value:function _insertChild(t,e){this._fireChange("children",this);var n=0;var o=eh(this.document,e);var _iterator50=_createForOfIteratorHelper(o),_step50;try{for(_iterator50.s();!(_step50=_iterator50.n()).done;){var _e47=_step50.value;if(_e47.parent!==null){_e47._remove();}_e47.parent=this;this._children.splice(t,0,_e47);t++;n++;}}catch(err){_iterator50.e(err);}finally{_iterator50.f();}return n;}},{key:"_removeChildren",value:function _removeChildren(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;this._fireChange("children",this);for(var _n34=t;_n34<t+e;_n34++){this._children[_n34].parent=null;}return this._children.splice(t,e);}},{key:"_fireChange",value:function _fireChange(t,e){this.fire("change:"+t,e);}}]);return th;}(Symbol.iterator);fo(th,C);function eh(t,e){if(typeof e=="string"){return[new gc(t,e)];}if(!Ua(e)){e=[e];}return Array.from(e).map(function(e){if(typeof e=="string"){return new gc(t,e);}if(e instanceof pc){return new gc(t,e.data);}return e;});}var nh=/*#__PURE__*/function(){function nh(t){_classCallCheck(this,nh);this.document=t;this._cloneGroups=new Map();this._slotFactory=null;}_createClass(nh,[{key:"setSelection",value:function setSelection(t,e,n){this.document.selection._setTo(t,e,n);}},{key:"setSelectionFocus",value:function setSelectionFocus(t,e){this.document.selection._setFocus(t,e);}},{key:"createDocumentFragment",value:function createDocumentFragment(t){return new th(this.document,t);}},{key:"createText",value:function createText(t){return new gc(this.document,t);}},{key:"createAttributeElement",value:function createAttributeElement(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=new wd(this.document,t,e);if(typeof n.priority==="number"){o._priority=n.priority;}if(n.id){o._id=n.id;}if(n.renderUnsafeAttributes){var _o$_unsafeAttributesT;(_o$_unsafeAttributesT=o._unsafeAttributesToRender).push.apply(_o$_unsafeAttributesT,_toConsumableArray(n.renderUnsafeAttributes));}return o;}},{key:"createContainerElement",value:function createContainerElement(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var i=null;if(To(n)){o=n;}else{i=n;}var r=new Zl(this.document,t,e,i);if(o.renderUnsafeAttributes){var _r$_unsafeAttributesT;(_r$_unsafeAttributesT=r._unsafeAttributesToRender).push.apply(_r$_unsafeAttributesT,_toConsumableArray(o.renderUnsafeAttributes));}return r;}},{key:"createEditableElement",value:function createEditableElement(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=new Ql(this.document,t,e);o._document=this.document;if(n.renderUnsafeAttributes){var _o$_unsafeAttributesT2;(_o$_unsafeAttributesT2=o._unsafeAttributesToRender).push.apply(_o$_unsafeAttributesT2,_toConsumableArray(n.renderUnsafeAttributes));}return o;}},{key:"createEmptyElement",value:function createEmptyElement(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=new Ad(this.document,t,e);if(n.renderUnsafeAttributes){var _o$_unsafeAttributesT3;(_o$_unsafeAttributesT3=o._unsafeAttributesToRender).push.apply(_o$_unsafeAttributesT3,_toConsumableArray(n.renderUnsafeAttributes));}return o;}},{key:"createUIElement",value:function createUIElement(t,e,n){var o=new Ud(this.document,t,e);if(n){o.render=n;}return o;}},{key:"createRawElement",value:function createRawElement(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var i=new Qd(this.document,t,e);i.render=n||function(){};if(o.renderUnsafeAttributes){var _i$_unsafeAttributesT;(_i$_unsafeAttributesT=i._unsafeAttributesToRender).push.apply(_i$_unsafeAttributesT,_toConsumableArray(o.renderUnsafeAttributes));}return i;}},{key:"setAttribute",value:function setAttribute(t,e,n){n._setAttribute(t,e);}},{key:"removeAttribute",value:function removeAttribute(t,e){e._removeAttribute(t);}},{key:"addClass",value:function addClass(t,e){e._addClass(t);}},{key:"removeClass",value:function removeClass(t,e){e._removeClass(t);}},{key:"setStyle",value:function setStyle(t,e,n){if(To(t)&&n===undefined){n=e;}n._setStyle(t,e);}},{key:"removeStyle",value:function removeStyle(t,e){e._removeStyle(t);}},{key:"setCustomProperty",value:function setCustomProperty(t,e,n){n._setCustomProperty(t,e);}},{key:"removeCustomProperty",value:function removeCustomProperty(t,e){return e._removeCustomProperty(t);}},{key:"breakAttributes",value:function breakAttributes(t){if(t instanceof nd){return this._breakAttributes(t);}else{return this._breakAttributesRange(t);}}},{key:"breakContainer",value:function breakContainer(t){var e=t.parent;if(!e.is("containerElement")){throw new h("view-writer-break-non-container-element",this.document);}if(!e.parent){throw new h("view-writer-break-root",this.document);}if(t.isAtStart){return nd._createBefore(e);}else if(!t.isAtEnd){var _n35=e._clone(false);this.insert(nd._createAfter(e),_n35);var _o22=new od(t,nd._createAt(e,"end"));var _i23=new nd(_n35,0);this.move(_o22,_i23);}return nd._createAfter(e);}},{key:"mergeAttributes",value:function mergeAttributes(t){var e=t.offset;var n=t.parent;if(n.is("$text")){return t;}if(n.is("attributeElement")&&n.childCount===0){var _t32=n.parent;var _e48=n.index;n._remove();this._removeFromClonedElementsGroup(n);return this.mergeAttributes(new nd(_t32,_e48));}var o=n.getChild(e-1);var i=n.getChild(e);if(!o||!i){return t;}if(o.is("$text")&&i.is("$text")){return ch(o,i);}else if(o.is("attributeElement")&&i.is("attributeElement")&&o.isSimilar(i)){var _t33=o.childCount;o._appendChild(i.getChildren());i._remove();this._removeFromClonedElementsGroup(i);return this.mergeAttributes(new nd(o,_t33));}return t;}},{key:"mergeContainers",value:function mergeContainers(t){var e=t.nodeBefore;var n=t.nodeAfter;if(!e||!n||!e.is("containerElement")||!n.is("containerElement")){throw new h("view-writer-merge-containers-invalid-position",this.document);}var o=e.getChild(e.childCount-1);var i=o instanceof gc?nd._createAt(o,"end"):nd._createAt(e,"end");this.move(od._createIn(n),nd._createAt(e,"end"));this.remove(od._createOn(n));return i;}},{key:"insert",value:function insert(t,e){e=Ua(e)?_toConsumableArray(e):[e];lh(e,this.document);var n=e.reduce(function(t,e){var n=t[t.length-1];var o=!e.is("uiElement");if(!n||n.breakAttributes!=o){t.push({breakAttributes:o,nodes:[e]});}else{n.nodes.push(e);}return t;},[]);var o=null;var i=t;var _iterator51=_createForOfIteratorHelper(n),_step51;try{for(_iterator51.s();!(_step51=_iterator51.n()).done;){var _step51$value=_step51.value,_t34=_step51$value.nodes,_e49=_step51$value.breakAttributes;var _n36=this._insertNodes(i,_t34,_e49);if(!o){o=_n36.start;}i=_n36.end;}}catch(err){_iterator51.e(err);}finally{_iterator51.f();}if(!o){return new od(t);}return new od(o,i);}},{key:"remove",value:function remove(t){var e=t instanceof od?t:od._createOn(t);uh(e,this.document);if(e.isCollapsed){return new th(this.document);}var _this$_breakAttribute=this._breakAttributesRange(e,true),n=_this$_breakAttribute.start,o=_this$_breakAttribute.end;var i=n.parent;var r=o.offset-n.offset;var s=i._removeChildren(n.offset,r);var _iterator52=_createForOfIteratorHelper(s),_step52;try{for(_iterator52.s();!(_step52=_iterator52.n()).done;){var _t35=_step52.value;this._removeFromClonedElementsGroup(_t35);}}catch(err){_iterator52.e(err);}finally{_iterator52.f();}var a=this.mergeAttributes(n);e.start=a;e.end=a.clone();return new th(this.document,s);}},{key:"clear",value:function clear(t,e){uh(t,this.document);var n=t.getWalker({direction:"backward",ignoreElementEnd:true});var _iterator53=_createForOfIteratorHelper(n),_step53;try{for(_iterator53.s();!(_step53=_iterator53.n()).done;){var _o23=_step53.value;var _n37=_o23.item;var _i24=void 0;if(_n37.is("element")&&e.isSimilar(_n37)){_i24=od._createOn(_n37);}else if(!_o23.nextPosition.isAfter(t.start)&&_n37.is("$textProxy")){var _t36=_n37.getAncestors().find(function(t){return t.is("element")&&e.isSimilar(t);});if(_t36){_i24=od._createIn(_t36);}}if(_i24){if(_i24.end.isAfter(t.end)){_i24.end=t.end;}if(_i24.start.isBefore(t.start)){_i24.start=t.start;}this.remove(_i24);}}}catch(err){_iterator53.e(err);}finally{_iterator53.f();}}},{key:"move",value:function move(t,e){var n;if(e.isAfter(t.end)){e=this._breakAttributes(e,true);var _o24=e.parent;var _i25=_o24.childCount;t=this._breakAttributesRange(t,true);n=this.remove(t);e.offset+=_o24.childCount-_i25;}else{n=this.remove(t);}return this.insert(e,n);}},{key:"wrap",value:function wrap(t,e){if(!(e instanceof wd)){throw new h("view-writer-wrap-invalid-attribute",this.document);}uh(t,this.document);if(!t.isCollapsed){return this._wrapRange(t,e);}else{var _n38=t.start;if(_n38.parent.is("element")&&!oh(_n38.parent)){_n38=_n38.getLastMatchingPosition(function(t){return t.item.is("uiElement");});}_n38=this._wrapPosition(_n38,e);var _o25=this.document.selection;if(_o25.isCollapsed&&_o25.getFirstPosition().isEqual(t.start)){this.setSelection(_n38);}return new od(_n38);}}},{key:"unwrap",value:function unwrap(t,e){if(!(e instanceof wd)){throw new h("view-writer-unwrap-invalid-attribute",this.document);}uh(t,this.document);if(t.isCollapsed){return t;}var _this$_breakAttribute2=this._breakAttributesRange(t,true),n=_this$_breakAttribute2.start,o=_this$_breakAttribute2.end;var i=n.parent;var r=this._unwrapChildren(i,n.offset,o.offset,e);var s=this.mergeAttributes(r.start);if(!s.isEqual(r.start)){r.end.offset--;}var a=this.mergeAttributes(r.end);return new od(s,a);}},{key:"rename",value:function rename(t,e){var n=new Zl(this.document,t,e.getAttributes());this.insert(nd._createAfter(e),n);this.move(od._createIn(e),nd._createAt(n,0));this.remove(od._createOn(e));return n;}},{key:"clearClonedElementsGroup",value:function clearClonedElementsGroup(t){this._cloneGroups.delete(t);}},{key:"createPositionAt",value:function createPositionAt(t,e){return nd._createAt(t,e);}},{key:"createPositionAfter",value:function createPositionAfter(t){return nd._createAfter(t);}},{key:"createPositionBefore",value:function createPositionBefore(t){return nd._createBefore(t);}},{key:"createRange",value:function createRange(t,e){return new od(t,e);}},{key:"createRangeOn",value:function createRangeOn(t){return od._createOn(t);}},{key:"createRangeIn",value:function createRangeIn(t){return od._createIn(t);}},{key:"createSelection",value:function createSelection(t,e,n){return new sd(t,e,n);}},{key:"createSlot",value:function createSlot(t){if(!this._slotFactory){throw new h("view-writer-invalid-create-slot-context",this.document);}return this._slotFactory(this,t);}},{key:"_registerSlotFactory",value:function _registerSlotFactory(t){this._slotFactory=t;}},{key:"_clearSlotFactory",value:function _clearSlotFactory(){this._slotFactory=null;}},{key:"_insertNodes",value:function _insertNodes(t,e,n){var o;if(n){o=ih(t);}else{o=t.parent.is("$text")?t.parent.parent:t.parent;}if(!o){throw new h("view-writer-invalid-position-container",this.document);}var i;if(n){i=this._breakAttributes(t,true);}else{i=t.parent.is("$text")?ah(t):t;}var r=o._insertChild(i.offset,e);var _iterator54=_createForOfIteratorHelper(e),_step54;try{for(_iterator54.s();!(_step54=_iterator54.n()).done;){var _t37=_step54.value;this._addToClonedElementsGroup(_t37);}}catch(err){_iterator54.e(err);}finally{_iterator54.f();}var s=i.getShiftedBy(r);var a=this.mergeAttributes(i);if(!a.isEqual(i)){s.offset--;}var c=this.mergeAttributes(s);return new od(a,c);}},{key:"_wrapChildren",value:function _wrapChildren(t,e,n,o){var i=e;var r=[];while(i<n){var _e50=t.getChild(i);var _n39=_e50.is("$text");var _s5=_e50.is("attributeElement");if(_s5&&this._wrapAttributeElement(o,_e50)){r.push(new nd(t,i));}else if(_n39||!_s5||rh(o,_e50)){var _n40=o._clone();_e50._remove();_n40._appendChild(_e50);t._insertChild(i,_n40);this._addToClonedElementsGroup(_n40);r.push(new nd(t,i));}else{this._wrapChildren(_e50,0,_e50.childCount,o);}i++;}var s=0;for(var _i26=0,_r11=r;_i26<_r11.length;_i26++){var _t38=_r11[_i26];_t38.offset-=s;if(_t38.offset==e){continue;}var _o26=this.mergeAttributes(_t38);if(!_o26.isEqual(_t38)){s++;n--;}}return od._createFromParentsAndOffsets(t,e,t,n);}},{key:"_unwrapChildren",value:function _unwrapChildren(t,e,n,o){var i=e;var r=[];while(i<n){var _e51=t.getChild(i);if(!_e51.is("attributeElement")){i++;continue;}if(_e51.isSimilar(o)){var _o27=_e51.getChildren();var _s6=_e51.childCount;_e51._remove();t._insertChild(i,_o27);this._removeFromClonedElementsGroup(_e51);r.push(new nd(t,i),new nd(t,i+_s6));i+=_s6;n+=_s6-1;continue;}if(this._unwrapAttributeElement(o,_e51)){r.push(new nd(t,i),new nd(t,i+1));i++;continue;}this._unwrapChildren(_e51,0,_e51.childCount,o);i++;}var s=0;for(var _i27=0,_r12=r;_i27<_r12.length;_i27++){var _t39=_r12[_i27];_t39.offset-=s;if(_t39.offset==e||_t39.offset==n){continue;}var _o28=this.mergeAttributes(_t39);if(!_o28.isEqual(_t39)){s++;n--;}}return od._createFromParentsAndOffsets(t,e,t,n);}},{key:"_wrapRange",value:function _wrapRange(t,e){var _this$_breakAttribute3=this._breakAttributesRange(t,true),n=_this$_breakAttribute3.start,o=_this$_breakAttribute3.end;var i=n.parent;var r=this._wrapChildren(i,n.offset,o.offset,e);var s=this.mergeAttributes(r.start);if(!s.isEqual(r.start)){r.end.offset--;}var a=this.mergeAttributes(r.end);return new od(s,a);}},{key:"_wrapPosition",value:function _wrapPosition(t,e){if(e.isSimilar(t.parent)){return sh(t.clone());}if(t.parent.is("$text")){t=ah(t);}var n=this.createAttributeElement();n._priority=Number.POSITIVE_INFINITY;n.isSimilar=function(){return false;};t.parent._insertChild(t.offset,n);var o=new od(t,t.getShiftedBy(1));this.wrap(o,e);var i=new nd(n.parent,n.index);n._remove();var r=i.nodeBefore;var s=i.nodeAfter;if(r instanceof gc&&s instanceof gc){return ch(r,s);}return sh(i);}},{key:"_wrapAttributeElement",value:function _wrapAttributeElement(t,e){if(!fh(t,e)){return false;}if(t.name!==e.name||t.priority!==e.priority){return false;}var _iterator55=_createForOfIteratorHelper(t.getAttributeKeys()),_step55;try{for(_iterator55.s();!(_step55=_iterator55.n()).done;){var _n41=_step55.value;if(_n41==="class"||_n41==="style"){continue;}if(e.hasAttribute(_n41)&&e.getAttribute(_n41)!==t.getAttribute(_n41)){return false;}}}catch(err){_iterator55.e(err);}finally{_iterator55.f();}var _iterator56=_createForOfIteratorHelper(t.getStyleNames()),_step56;try{for(_iterator56.s();!(_step56=_iterator56.n()).done;){var _n42=_step56.value;if(e.hasStyle(_n42)&&e.getStyle(_n42)!==t.getStyle(_n42)){return false;}}}catch(err){_iterator56.e(err);}finally{_iterator56.f();}var _iterator57=_createForOfIteratorHelper(t.getAttributeKeys()),_step57;try{for(_iterator57.s();!(_step57=_iterator57.n()).done;){var _n43=_step57.value;if(_n43==="class"||_n43==="style"){continue;}if(!e.hasAttribute(_n43)){this.setAttribute(_n43,t.getAttribute(_n43),e);}}}catch(err){_iterator57.e(err);}finally{_iterator57.f();}var _iterator58=_createForOfIteratorHelper(t.getStyleNames()),_step58;try{for(_iterator58.s();!(_step58=_iterator58.n()).done;){var _n44=_step58.value;if(!e.hasStyle(_n44)){this.setStyle(_n44,t.getStyle(_n44),e);}}}catch(err){_iterator58.e(err);}finally{_iterator58.f();}var _iterator59=_createForOfIteratorHelper(t.getClassNames()),_step59;try{for(_iterator59.s();!(_step59=_iterator59.n()).done;){var _n45=_step59.value;if(!e.hasClass(_n45)){this.addClass(_n45,e);}}}catch(err){_iterator59.e(err);}finally{_iterator59.f();}return true;}},{key:"_unwrapAttributeElement",value:function _unwrapAttributeElement(t,e){if(!fh(t,e)){return false;}if(t.name!==e.name||t.priority!==e.priority){return false;}var _iterator60=_createForOfIteratorHelper(t.getAttributeKeys()),_step60;try{for(_iterator60.s();!(_step60=_iterator60.n()).done;){var _n46=_step60.value;if(_n46==="class"||_n46==="style"){continue;}if(!e.hasAttribute(_n46)||e.getAttribute(_n46)!==t.getAttribute(_n46)){return false;}}}catch(err){_iterator60.e(err);}finally{_iterator60.f();}if(!e.hasClass.apply(e,_toConsumableArray(t.getClassNames()))){return false;}var _iterator61=_createForOfIteratorHelper(t.getStyleNames()),_step61;try{for(_iterator61.s();!(_step61=_iterator61.n()).done;){var _n47=_step61.value;if(!e.hasStyle(_n47)||e.getStyle(_n47)!==t.getStyle(_n47)){return false;}}}catch(err){_iterator61.e(err);}finally{_iterator61.f();}var _iterator62=_createForOfIteratorHelper(t.getAttributeKeys()),_step62;try{for(_iterator62.s();!(_step62=_iterator62.n()).done;){var _n48=_step62.value;if(_n48==="class"||_n48==="style"){continue;}this.removeAttribute(_n48,e);}}catch(err){_iterator62.e(err);}finally{_iterator62.f();}this.removeClass(Array.from(t.getClassNames()),e);this.removeStyle(Array.from(t.getStyleNames()),e);return true;}},{key:"_breakAttributesRange",value:function _breakAttributesRange(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var n=t.start;var o=t.end;uh(t,this.document);if(t.isCollapsed){var _n49=this._breakAttributes(t.start,e);return new od(_n49,_n49);}var i=this._breakAttributes(o,e);var r=i.parent.childCount;var s=this._breakAttributes(n,e);i.offset+=i.parent.childCount-r;return new od(s,i);}},{key:"_breakAttributes",value:function _breakAttributes(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var n=t.offset;var o=t.parent;if(t.parent.is("emptyElement")){throw new h("view-writer-cannot-break-empty-element",this.document);}if(t.parent.is("uiElement")){throw new h("view-writer-cannot-break-ui-element",this.document);}if(t.parent.is("rawElement")){throw new h("view-writer-cannot-break-raw-element",this.document);}if(!e&&o.is("$text")&&hh(o.parent)){return t.clone();}if(hh(o)){return t.clone();}if(o.is("$text")){return this._breakAttributes(ah(t),e);}var i=o.childCount;if(n==i){var _t40=new nd(o.parent,o.index+1);return this._breakAttributes(_t40,e);}else{if(n===0){var _t41=new nd(o.parent,o.index);return this._breakAttributes(_t41,e);}else{var _t42=o.index+1;var _i28=o._clone();o.parent._insertChild(_t42,_i28);this._addToClonedElementsGroup(_i28);var _r13=o.childCount-n;var _s7=o._removeChildren(n,_r13);_i28._appendChild(_s7);var _a5=new nd(o.parent,_t42);return this._breakAttributes(_a5,e);}}}},{key:"_addToClonedElementsGroup",value:function _addToClonedElementsGroup(t){if(!t.root.is("rootElement")){return;}if(t.is("element")){var _iterator63=_createForOfIteratorHelper(t.getChildren()),_step63;try{for(_iterator63.s();!(_step63=_iterator63.n()).done;){var _e52=_step63.value;this._addToClonedElementsGroup(_e52);}}catch(err){_iterator63.e(err);}finally{_iterator63.f();}}var e=t.id;if(!e){return;}var n=this._cloneGroups.get(e);if(!n){n=new Set();this._cloneGroups.set(e,n);}n.add(t);t._clonesGroup=n;}},{key:"_removeFromClonedElementsGroup",value:function _removeFromClonedElementsGroup(t){if(t.is("element")){var _iterator64=_createForOfIteratorHelper(t.getChildren()),_step64;try{for(_iterator64.s();!(_step64=_iterator64.n()).done;){var _e53=_step64.value;this._removeFromClonedElementsGroup(_e53);}}catch(err){_iterator64.e(err);}finally{_iterator64.f();}}var e=t.id;if(!e){return;}var n=this._cloneGroups.get(e);if(!n){return;}n.delete(t);}}]);return nh;}();function oh(t){return Array.from(t.getChildren()).some(function(t){return!t.is("uiElement");});}function ih(t){var e=t.parent;while(!hh(e)){if(!e){return undefined;}e=e.parent;}return e;}function rh(t,e){if(t.priority<e.priority){return true;}else if(t.priority>e.priority){return false;}return t.getIdentity()<e.getIdentity();}function sh(t){var e=t.nodeBefore;if(e&&e.is("$text")){return new nd(e,e.data.length);}var n=t.nodeAfter;if(n&&n.is("$text")){return new nd(n,0);}return t;}function ah(t){if(t.offset==t.parent.data.length){return new nd(t.parent.parent,t.parent.index+1);}if(t.offset===0){return new nd(t.parent.parent,t.parent.index);}var e=t.parent.data.slice(t.offset);t.parent._data=t.parent.data.slice(0,t.offset);t.parent.parent._insertChild(t.parent.index+1,new gc(t.root.document,e));return new nd(t.parent.parent,t.parent.index+1);}function ch(t,e){var n=t.data.length;t._data+=e.data;e._remove();return new nd(t,n);}function lh(t,e){var _iterator65=_createForOfIteratorHelper(t),_step65;try{var _loop=function _loop(){var n=_step65.value;if(!dh.some(function(t){return n instanceof t;})){throw new h("view-writer-insert-invalid-node-type",e);}if(!n.is("$text")){lh(n.getChildren(),e);}};for(_iterator65.s();!(_step65=_iterator65.n()).done;){_loop();}}catch(err){_iterator65.e(err);}finally{_iterator65.f();}}var dh=[gc,wd,Zl,Ad,Qd,Ud];function hh(t){return t&&(t.is("containerElement")||t.is("documentFragment"));}function uh(t,e){var n=ih(t.start);var o=ih(t.end);if(!n||!o||n!==o){throw new h("view-writer-invalid-range-container",e);}}function fh(t,e){return t.id===null&&e.id===null;}function gh(t){return Object.prototype.toString.call(t)=="[object Text]";}var ph=function ph(t){return t.createTextNode(" ");};var mh=function mh(t){var e=t.createElement("span");e.dataset.ckeFiller=true;e.innerHTML=" ";return e;};var kh=function kh(t){var e=t.createElement("br");e.dataset.ckeFiller=true;return e;};var bh=7;var wh="⁠".repeat(bh);function _h(t){return gh(t)&&t.data.substr(0,bh)===wh;}function vh(t){return t.data.length==bh&&_h(t);}function Ah(t){if(_h(t)){return t.data.slice(bh);}else{return t.data;}}function Ch(t){t.document.on("arrowKey",yh,{priority:"low"});}function yh(t,e){if(e.keyCode==Nd.arrowleft){var _t43=e.domTarget.ownerDocument.defaultView.getSelection();if(_t43.rangeCount==1&&_t43.getRangeAt(0).collapsed){var _e54=_t43.getRangeAt(0).startContainer;var _n50=_t43.getRangeAt(0).startOffset;if(_h(_e54)&&_n50<=bh){_t43.collapse(_e54,0);}}}}function xh(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;n=n||function(t,e){return t===e;};if(!Array.isArray(t)){t=Array.prototype.slice.call(t);}if(!Array.isArray(e)){e=Array.prototype.slice.call(e);}var i=Eh(t,e,n);return o?Th(i,e.length):Ph(e,i);}function Eh(t,e,n){var o=Dh(t,e,n);if(o===-1){return{firstIndex:-1,lastIndexOld:-1,lastIndexNew:-1};}var i=Sh(t,o);var r=Sh(e,o);var s=Dh(i,r,n);var a=t.length-s;var c=e.length-s;return{firstIndex:o,lastIndexOld:a,lastIndexNew:c};}function Dh(t,e,n){for(var _o29=0;_o29<Math.max(t.length,e.length);_o29++){if(t[_o29]===undefined||e[_o29]===undefined||!n(t[_o29],e[_o29])){return _o29;}}return-1;}function Sh(t,e){return t.slice(e).reverse();}function Ph(t,e){var n=[];var o=e.firstIndex,i=e.lastIndexOld,r=e.lastIndexNew;if(r-o>0){n.push({index:o,type:"insert",values:t.slice(o,r)});}if(i-o>0){n.push({index:o+(r-o),type:"delete",howMany:i-o});}return n;}function Th(t,e){var n=t.firstIndex,o=t.lastIndexOld,i=t.lastIndexNew;if(n===-1){return Array(e).fill("equal");}var r=[];if(n>0){r=r.concat(Array(n).fill("equal"));}if(i-n>0){r=r.concat(Array(i-n).fill("insert"));}if(o-n>0){r=r.concat(Array(o-n).fill("delete"));}if(i<e){r=r.concat(Array(e-i).fill("equal"));}return r;}function Bh(t,e,n){n=n||function(t,e){return t===e;};var o=t.length;var i=e.length;if(o>200||i>200||o+i>300){return Bh.fastDiff(t,e,n,true);}var r,s;if(i<o){var _n51=t;t=e;e=_n51;r="delete";s="insert";}else{r="insert";s="delete";}var a=t.length;var c=e.length;var l=c-a;var d={};var h={};function u(o){var i=(h[o-1]!==undefined?h[o-1]:-1)+1;var l=h[o+1]!==undefined?h[o+1]:-1;var u=i>l?-1:1;if(d[o+u]){d[o]=d[o+u].slice(0);}if(!d[o]){d[o]=[];}d[o].push(i>l?r:s);var f=Math.max(i,l);var g=f-o;while(g<a&&f<c&&n(t[g],e[f])){g++;f++;d[o].push("equal");}return f;}var f=0;var g;do{for(g=-f;g<l;g++){h[g]=u(g);}for(g=l+f;g>l;g--){h[g]=u(g);}h[l]=u(l);f++;}while(h[l]!==c);return d[l].slice(1);}Bh.fastDiff=xh;function Ih(t,e,n){t.insertBefore(n,t.childNodes[e]||null);}function Rh(t){var e=t.parentNode;if(e){e.removeChild(t);}}function Oh(t){return t&&t.nodeType===Node.COMMENT_NODE;}function zh(t){if(t){if(t.defaultView){return t instanceof t.defaultView.Document;}else if(t.ownerDocument&&t.ownerDocument.defaultView){return t instanceof t.ownerDocument.defaultView.Node;}}return false;}var Mh=n(379);var Nh=n.n(Mh);var Fh=n(401);var Vh={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Vh.insert="head";Vh.singleton=true;var Lh=Nh()(Fh.Z,Vh);var Hh=Fh.Z.locals||{};var jh=/*#__PURE__*/function(){function jh(t,e){var _this28=this;_classCallCheck(this,jh);this.domDocuments=new Set();this.domConverter=t;this.markedAttributes=new Set();this.markedChildren=new Set();this.markedTexts=new Set();this.selection=e;this.set("isFocused",false);this.set("isSelecting",false);if(Ed.isBlink&&!Ed.isAndroid){this.on("change:isSelecting",function(){if(!_this28.isSelecting){_this28.render();}});}this._inlineFiller=null;this._fakeSelectionContainer=null;}_createClass(jh,[{key:"markToSync",value:function markToSync(t,e){if(t==="text"){if(this.domConverter.mapViewToDom(e.parent)){this.markedTexts.add(e);}}else{if(!this.domConverter.mapViewToDom(e)){return;}if(t==="attributes"){this.markedAttributes.add(e);}else if(t==="children"){this.markedChildren.add(e);}else{throw new h("view-renderer-unknown-type",this);}}}},{key:"render",value:function render(){var t;var e=Ed.isBlink&&!Ed.isAndroid?!this.isSelecting:true;var _iterator66=_createForOfIteratorHelper(this.markedChildren),_step66;try{for(_iterator66.s();!(_step66=_iterator66.n()).done;){var _t44=_step66.value;this._updateChildrenMappings(_t44);}}catch(err){_iterator66.e(err);}finally{_iterator66.f();}if(e){if(this._inlineFiller&&!this._isSelectionInInlineFiller()){this._removeInlineFiller();}if(this._inlineFiller){t=this._getInlineFillerPosition();}else if(this._needsInlineFillerAtSelection()){t=this.selection.getFirstPosition();this.markedChildren.add(t.parent);}}else if(this._inlineFiller&&this._inlineFiller.parentNode){t=this.domConverter.domPositionToView(this._inlineFiller);}var _iterator67=_createForOfIteratorHelper(this.markedAttributes),_step67;try{for(_iterator67.s();!(_step67=_iterator67.n()).done;){var _t45=_step67.value;this._updateAttrs(_t45);}}catch(err){_iterator67.e(err);}finally{_iterator67.f();}var _iterator68=_createForOfIteratorHelper(this.markedChildren),_step68;try{for(_iterator68.s();!(_step68=_iterator68.n()).done;){var _e56=_step68.value;this._updateChildren(_e56,{inlineFillerPosition:t});}}catch(err){_iterator68.e(err);}finally{_iterator68.f();}var _iterator69=_createForOfIteratorHelper(this.markedTexts),_step69;try{for(_iterator69.s();!(_step69=_iterator69.n()).done;){var _e57=_step69.value;if(!this.markedChildren.has(_e57.parent)&&this.domConverter.mapViewToDom(_e57.parent)){this._updateText(_e57,{inlineFillerPosition:t});}}}catch(err){_iterator69.e(err);}finally{_iterator69.f();}if(e){if(t){var _e55=this.domConverter.viewPositionToDom(t);var _n52=_e55.parent.ownerDocument;if(!_h(_e55.parent)){this._inlineFiller=Wh(_n52,_e55.parent,_e55.offset);}else{this._inlineFiller=_e55.parent;}}else{this._inlineFiller=null;}}this._updateFocus();this._updateSelection();this.markedTexts.clear();this.markedAttributes.clear();this.markedChildren.clear();}},{key:"_updateChildrenMappings",value:function _updateChildrenMappings(t){var e=this.domConverter.mapViewToDom(t);if(!e){return;}var n=Array.from(this.domConverter.mapViewToDom(t).childNodes);var o=Array.from(this.domConverter.viewChildrenToDom(t,e.ownerDocument,{withChildren:false}));var i=this._diffNodeLists(n,o);var r=this._findReplaceActions(i,n,o);if(r.indexOf("replace")!==-1){var _e58={equal:0,insert:0,delete:0};var _iterator70=_createForOfIteratorHelper(r),_step70;try{for(_iterator70.s();!(_step70=_iterator70.n()).done;){var _i29=_step70.value;if(_i29==="replace"){var _i30=_e58.equal+_e58.insert;var _r14=_e58.equal+_e58.delete;var _s8=t.getChild(_i30);if(_s8&&!(_s8.is("uiElement")||_s8.is("rawElement"))){this._updateElementMappings(_s8,n[_r14]);}Rh(o[_i30]);_e58.equal++;}else{_e58[_i29]++;}}}catch(err){_iterator70.e(err);}finally{_iterator70.f();}}}},{key:"_updateElementMappings",value:function _updateElementMappings(t,e){this.domConverter.unbindDomElement(e);this.domConverter.bindElements(e,t);this.markedChildren.add(t);this.markedAttributes.add(t);}},{key:"_getInlineFillerPosition",value:function _getInlineFillerPosition(){var t=this.selection.getFirstPosition();if(t.parent.is("$text")){return nd._createBefore(this.selection.getFirstPosition().parent);}else{return t;}}},{key:"_isSelectionInInlineFiller",value:function _isSelectionInInlineFiller(){if(this.selection.rangeCount!=1||!this.selection.isCollapsed){return false;}var t=this.selection.getFirstPosition();var e=this.domConverter.viewPositionToDom(t);if(e&&gh(e.parent)&&_h(e.parent)){return true;}return false;}},{key:"_removeInlineFiller",value:function _removeInlineFiller(){var t=this._inlineFiller;if(!_h(t)){throw new h("view-renderer-filler-was-lost",this);}if(vh(t)){t.remove();}else{t.data=t.data.substr(bh);}this._inlineFiller=null;}},{key:"_needsInlineFillerAtSelection",value:function _needsInlineFillerAtSelection(){if(this.selection.rangeCount!=1||!this.selection.isCollapsed){return false;}var t=this.selection.getFirstPosition();var e=t.parent;var n=t.offset;if(!this.domConverter.mapViewToDom(e.root)){return false;}if(!e.is("element")){return false;}if(!qh(e)){return false;}if(n===e.getFillerOffset()){return false;}var o=t.nodeBefore;var i=t.nodeAfter;if(o instanceof gc||i instanceof gc){return false;}return true;}},{key:"_updateText",value:function _updateText(t,e){var n=this.domConverter.findCorrespondingDomText(t);var o=this.domConverter.viewToDom(t,n.ownerDocument);var i=n.data;var r=o.data;var s=e.inlineFillerPosition;if(s&&s.parent==t.parent&&s.offset==t.index){r=wh+r;}if(i!=r){var _t46=xh(i,r);var _iterator71=_createForOfIteratorHelper(_t46),_step71;try{for(_iterator71.s();!(_step71=_iterator71.n()).done;){var _e59=_step71.value;if(_e59.type==="insert"){n.insertData(_e59.index,_e59.values.join(""));}else{n.deleteData(_e59.index,_e59.howMany);}}}catch(err){_iterator71.e(err);}finally{_iterator71.f();}}}},{key:"_updateAttrs",value:function _updateAttrs(t){var e=this.domConverter.mapViewToDom(t);if(!e){return;}var n=Array.from(e.attributes).map(function(t){return t.name;});var o=t.getAttributeKeys();var _iterator72=_createForOfIteratorHelper(o),_step72;try{for(_iterator72.s();!(_step72=_iterator72.n()).done;){var _n53=_step72.value;this.domConverter.setDomElementAttribute(e,_n53,t.getAttribute(_n53),t);}}catch(err){_iterator72.e(err);}finally{_iterator72.f();}var _iterator73=_createForOfIteratorHelper(n),_step73;try{for(_iterator73.s();!(_step73=_iterator73.n()).done;){var _o30=_step73.value;if(!t.hasAttribute(_o30)){this.domConverter.removeDomElementAttribute(e,_o30);}}}catch(err){_iterator73.e(err);}finally{_iterator73.f();}}},{key:"_updateChildren",value:function _updateChildren(t,e){var n=this.domConverter.mapViewToDom(t);if(!n){return;}var o=e.inlineFillerPosition;var i=this.domConverter.mapViewToDom(t).childNodes;var r=Array.from(this.domConverter.viewChildrenToDom(t,n.ownerDocument,{bind:true}));if(o&&o.parent===t){Wh(n.ownerDocument,r,o.offset);}var s=this._diffNodeLists(i,r);var a=0;var c=new Set();var _iterator74=_createForOfIteratorHelper(s),_step74;try{for(_iterator74.s();!(_step74=_iterator74.n()).done;){var _t47=_step74.value;if(_t47==="delete"){c.add(i[a]);Rh(i[a]);}else if(_t47==="equal"){a++;}}}catch(err){_iterator74.e(err);}finally{_iterator74.f();}a=0;var _iterator75=_createForOfIteratorHelper(s),_step75;try{for(_iterator75.s();!(_step75=_iterator75.n()).done;){var _t48=_step75.value;if(_t48==="insert"){Ih(n,a,r[a]);a++;}else if(_t48==="equal"){this._markDescendantTextToSync(this.domConverter.domToView(r[a]));a++;}}}catch(err){_iterator75.e(err);}finally{_iterator75.f();}var _iterator76=_createForOfIteratorHelper(c),_step76;try{for(_iterator76.s();!(_step76=_iterator76.n()).done;){var _t49=_step76.value;if(!_t49.parentNode){this.domConverter.unbindDomElement(_t49);}}}catch(err){_iterator76.e(err);}finally{_iterator76.f();}}},{key:"_diffNodeLists",value:function _diffNodeLists(t,e){t=Uh(t,this._fakeSelectionContainer);return Bh(t,e,Gh.bind(null,this.domConverter));}},{key:"_findReplaceActions",value:function _findReplaceActions(t,e,n){if(t.indexOf("insert")===-1||t.indexOf("delete")===-1){return t;}var o=[];var i=[];var r=[];var s={equal:0,insert:0,delete:0};var _iterator77=_createForOfIteratorHelper(t),_step77;try{for(_iterator77.s();!(_step77=_iterator77.n()).done;){var _a6=_step77.value;if(_a6==="insert"){r.push(n[s.equal+s.insert]);}else if(_a6==="delete"){i.push(e[s.equal+s.delete]);}else{o=o.concat(Bh(i,r,Kh).map(function(t){return t==="equal"?"replace":t;}));o.push("equal");i=[];r=[];}s[_a6]++;}}catch(err){_iterator77.e(err);}finally{_iterator77.f();}return o.concat(Bh(i,r,Kh).map(function(t){return t==="equal"?"replace":t;}));}},{key:"_markDescendantTextToSync",value:function _markDescendantTextToSync(t){if(!t){return;}if(t.is("$text")){this.markedTexts.add(t);}else if(t.is("element")){var _iterator78=_createForOfIteratorHelper(t.getChildren()),_step78;try{for(_iterator78.s();!(_step78=_iterator78.n()).done;){var _e60=_step78.value;this._markDescendantTextToSync(_e60);}}catch(err){_iterator78.e(err);}finally{_iterator78.f();}}}},{key:"_updateSelection",value:function _updateSelection(){if(Ed.isBlink&&!Ed.isAndroid&&this.isSelecting&&!this.markedChildren.size){return;}if(this.selection.rangeCount===0){this._removeDomSelection();this._removeFakeSelection();return;}var t=this.domConverter.mapViewToDom(this.selection.editableElement);if(!this.isFocused||!t){return;}if(this.selection.isFake){this._updateFakeSelection(t);}else{this._removeFakeSelection();this._updateDomSelection(t);}}},{key:"_updateFakeSelection",value:function _updateFakeSelection(t){var e=t.ownerDocument;if(!this._fakeSelectionContainer){this._fakeSelectionContainer=Jh(e);}var n=this._fakeSelectionContainer;this.domConverter.bindFakeSelection(n,this.selection);if(!this._fakeSelectionNeedsUpdate(t)){return;}if(!n.parentElement||n.parentElement!=t){t.appendChild(n);}n.textContent=this.selection.fakeSelectionLabel||" ";var o=e.getSelection();var i=e.createRange();o.removeAllRanges();i.selectNodeContents(n);o.addRange(i);}},{key:"_updateDomSelection",value:function _updateDomSelection(t){var e=t.ownerDocument.defaultView.getSelection();if(!this._domSelectionNeedsUpdate(e)){return;}var n=this.domConverter.viewPositionToDom(this.selection.anchor);var o=this.domConverter.viewPositionToDom(this.selection.focus);e.collapse(n.parent,n.offset);e.extend(o.parent,o.offset);if(Ed.isGecko){$h(o,e);}}},{key:"_domSelectionNeedsUpdate",value:function _domSelectionNeedsUpdate(t){if(!this.domConverter.isDomSelectionCorrect(t)){return true;}var e=t&&this.domConverter.domSelectionToView(t);if(e&&this.selection.isEqual(e)){return false;}if(!this.selection.isCollapsed&&this.selection.isSimilar(e)){return false;}return true;}},{key:"_fakeSelectionNeedsUpdate",value:function _fakeSelectionNeedsUpdate(t){var e=this._fakeSelectionContainer;var n=t.ownerDocument.getSelection();if(!e||e.parentElement!==t){return true;}if(n.anchorNode!==e&&!e.contains(n.anchorNode)){return true;}return e.textContent!==this.selection.fakeSelectionLabel;}},{key:"_removeDomSelection",value:function _removeDomSelection(){var _iterator79=_createForOfIteratorHelper(this.domDocuments),_step79;try{for(_iterator79.s();!(_step79=_iterator79.n()).done;){var _t50=_step79.value;var _e61=_t50.getSelection();if(_e61.rangeCount){var _e62=_t50.activeElement;var _n54=this.domConverter.mapDomToView(_e62);if(_e62&&_n54){_t50.getSelection().removeAllRanges();}}}}catch(err){_iterator79.e(err);}finally{_iterator79.f();}}},{key:"_removeFakeSelection",value:function _removeFakeSelection(){var t=this._fakeSelectionContainer;if(t){t.remove();}}},{key:"_updateFocus",value:function _updateFocus(){if(this.isFocused){var _t51=this.selection.editableElement;if(_t51){this.domConverter.focus(_t51);}}}}]);return jh;}();fo(jh,eo);function qh(t){if(t.getAttribute("contenteditable")=="false"){return false;}var e=t.findAncestor(function(t){return t.hasAttribute("contenteditable");});return!e||e.getAttribute("contenteditable")=="true";}function Wh(t,e,n){var o=e instanceof Array?e:e.childNodes;var i=o[n];if(gh(i)){i.data=wh+i.data;return i;}else{var _i31=t.createTextNode(wh);if(Array.isArray(e)){o.splice(n,0,_i31);}else{Ih(e,n,_i31);}return _i31;}}function Kh(t,e){return zh(t)&&zh(e)&&!gh(t)&&!gh(e)&&!Oh(t)&&!Oh(e)&&t.tagName.toLowerCase()===e.tagName.toLowerCase();}function Gh(t,e,n){if(e===n){return true;}else if(gh(e)&&gh(n)){return e.data===n.data;}else if(t.isBlockFiller(e)&&t.isBlockFiller(n)){return true;}return false;}function $h(t,e){var n=t.parent;if(n.nodeType!=Node.ELEMENT_NODE||t.offset!=n.childNodes.length-1){return;}var o=n.childNodes[t.offset];if(o&&o.tagName=="BR"){e.addRange(e.getRangeAt(0));}}function Uh(t,e){var n=Array.from(t);if(n.length==0||!e){return n;}var o=n[n.length-1];if(o==e){n.pop();}return n;}function Jh(t){var e=t.createElement("div");e.className="ck-fake-selection-container";Object.assign(e.style,{position:"fixed",top:0,left:"-9999px",width:"42px"});e.textContent=" ";return e;}var Zh={window:window,document:document};function Yh(t){var e=0;while(t.previousSibling){t=t.previousSibling;e++;}return e;}function Qh(t){var e=[];while(t&&t.nodeType!=Node.DOCUMENT_NODE){e.unshift(t);t=t.parentNode;}return e;}var Xh=kh(document);var tu=ph(document);var eu=mh(document);var nu="data-ck-unsafe-attribute-";var ou="data-ck-unsafe-element";var iu=["script","style"];var ru=/*#__PURE__*/function(){function ru(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,ru);this.document=t;this.renderingMode=e.renderingMode||"editing";this.blockFillerMode=e.blockFillerMode||(this.renderingMode==="editing"?"br":"nbsp");this.preElements=["pre"];this.blockElements=["address","article","aside","blockquote","caption","center","dd","details","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","legend","li","main","menu","nav","ol","p","pre","section","summary","table","tbody","td","tfoot","th","thead","tr","ul"];this.inlineObjectElements=["object","iframe","input","button","textarea","select","option","video","embed","audio","img","canvas"];this._domToViewMapping=new WeakMap();this._viewToDomMapping=new WeakMap();this._fakeSelectionMapping=new WeakMap();this._rawContentElementMatcher=new bc();this._encounteredRawContentDomNodes=new WeakSet();}_createClass(ru,[{key:"bindFakeSelection",value:function bindFakeSelection(t,e){this._fakeSelectionMapping.set(t,new sd(e));}},{key:"fakeSelectionToView",value:function fakeSelectionToView(t){return this._fakeSelectionMapping.get(t);}},{key:"bindElements",value:function bindElements(t,e){this._domToViewMapping.set(t,e);this._viewToDomMapping.set(e,t);}},{key:"unbindDomElement",value:function unbindDomElement(t){var e=this._domToViewMapping.get(t);if(e){this._domToViewMapping.delete(t);this._viewToDomMapping.delete(e);var _iterator80=_createForOfIteratorHelper(t.childNodes),_step80;try{for(_iterator80.s();!(_step80=_iterator80.n()).done;){var _e63=_step80.value;this.unbindDomElement(_e63);}}catch(err){_iterator80.e(err);}finally{_iterator80.f();}}}},{key:"bindDocumentFragments",value:function bindDocumentFragments(t,e){this._domToViewMapping.set(t,e);this._viewToDomMapping.set(e,t);}},{key:"shouldRenderAttribute",value:function shouldRenderAttribute(t,e,n){if(this.renderingMode==="data"){return true;}t=t.toLowerCase();if(t.startsWith("on")){return false;}if(t==="srcdoc"&&e.match(/\bon\S+\s*=|javascript:|<\s*\/*script/i)){return false;}if(n==="img"&&(t==="src"||t==="srcset")){return true;}if(n==="source"&&t==="srcset"){return true;}if(e.match(/^\s*(javascript:|data:(image\/svg|text\/x?html))/i)){return false;}return true;}},{key:"setContentOf",value:function setContentOf(t,e){if(this.renderingMode==="data"){t.innerHTML=e;return;}var n=new DOMParser().parseFromString(e,"text/html");var o=n.createDocumentFragment();var i=n.body.childNodes;while(i.length>0){o.appendChild(i[0]);}var r=n.createTreeWalker(o,NodeFilter.SHOW_ELEMENT);var s=[];var a;while(a=r.nextNode()){s.push(a);}for(var _i32=0,_s9=s;_i32<_s9.length;_i32++){var _t52=_s9[_i32];var _iterator81=_createForOfIteratorHelper(_t52.getAttributeNames()),_step81;try{for(_iterator81.s();!(_step81=_iterator81.n()).done;){var _e65=_step81.value;this.setDomElementAttribute(_t52,_e65,_t52.getAttribute(_e65));}}catch(err){_iterator81.e(err);}finally{_iterator81.f();}var _e64=_t52.tagName.toLowerCase();if(this._shouldRenameElement(_e64)){du(_e64);_t52.replaceWith(this._createReplacementDomElement(_e64,_t52));}}while(t.firstChild){t.firstChild.remove();}t.append(o);}},{key:"viewToDom",value:function viewToDom(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(t.is("$text")){var _n55=this._processDataFromViewText(t);return e.createTextNode(_n55);}else{if(this.mapViewToDom(t)){return this.mapViewToDom(t);}var _o31;if(t.is("documentFragment")){_o31=e.createDocumentFragment();if(n.bind){this.bindDocumentFragments(_o31,t);}}else if(t.is("uiElement")){if(t.name==="$comment"){_o31=e.createComment(t.getCustomProperty("$rawContent"));}else{_o31=t.render(e,this);}if(n.bind){this.bindElements(_o31,t);}return _o31;}else{if(this._shouldRenameElement(t.name)){du(t.name);_o31=this._createReplacementDomElement(t.name);}else if(t.hasAttribute("xmlns")){_o31=e.createElementNS(t.getAttribute("xmlns"),t.name);}else{_o31=e.createElement(t.name);}if(t.is("rawElement")){t.render(_o31,this);}if(n.bind){this.bindElements(_o31,t);}var _iterator82=_createForOfIteratorHelper(t.getAttributeKeys()),_step82;try{for(_iterator82.s();!(_step82=_iterator82.n()).done;){var _e66=_step82.value;this.setDomElementAttribute(_o31,_e66,t.getAttribute(_e66),t);}}catch(err){_iterator82.e(err);}finally{_iterator82.f();}}if(n.withChildren!==false){var _iterator83=_createForOfIteratorHelper(this.viewChildrenToDom(t,e,n)),_step83;try{for(_iterator83.s();!(_step83=_iterator83.n()).done;){var _i33=_step83.value;_o31.appendChild(_i33);}}catch(err){_iterator83.e(err);}finally{_iterator83.f();}}return _o31;}}},{key:"setDomElementAttribute",value:function setDomElementAttribute(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var i=this.shouldRenderAttribute(e,n,t.tagName.toLowerCase())||o&&o.shouldRenderUnsafeAttribute(e);if(!i){u("domconverter-unsafe-attribute-detected",{domElement:t,key:e,value:n});}if(t.hasAttribute(e)&&!i){t.removeAttribute(e);}else if(t.hasAttribute(nu+e)&&i){t.removeAttribute(nu+e);}t.setAttribute(i?e:nu+e,n);}},{key:"removeDomElementAttribute",value:function removeDomElementAttribute(t,e){if(e==ou){return;}t.removeAttribute(e);t.removeAttribute(nu+e);}},{key:"viewChildrenToDom",value:/*#__PURE__*/regeneratorRuntime.mark(function viewChildrenToDom(t,e){var n,o,i,_iterator84,_step84,_r15,_t53,_args11=arguments;return regeneratorRuntime.wrap(function viewChildrenToDom$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:n=_args11.length>2&&_args11[2]!==undefined?_args11[2]:{};o=t.getFillerOffset&&t.getFillerOffset();i=0;_iterator84=_createForOfIteratorHelper(t.getChildren());_context11.prev=4;_iterator84.s();case 6:if((_step84=_iterator84.n()).done){_context11.next=22;break;}_r15=_step84.value;if(!(o===i)){_context11.next=11;break;}_context11.next=11;return this._getBlockFiller(e);case 11:_t53=_r15.is("element")&&_r15.getCustomProperty("dataPipeline:transparentRendering");if(!(_t53&&this.renderingMode=="data")){_context11.next=16;break;}return _context11.delegateYield(this.viewChildrenToDom(_r15,e,n),"t0",14);case 14:_context11.next=19;break;case 16:if(_t53){u("domconverter-transparent-rendering-unsupported-in-editing-pipeline",{viewElement:_r15});}_context11.next=19;return this.viewToDom(_r15,e,n);case 19:i++;case 20:_context11.next=6;break;case 22:_context11.next=27;break;case 24:_context11.prev=24;_context11.t1=_context11["catch"](4);_iterator84.e(_context11.t1);case 27:_context11.prev=27;_iterator84.f();return _context11.finish(27);case 30:if(!(o===i)){_context11.next=33;break;}_context11.next=33;return this._getBlockFiller(e);case 33:case"end":return _context11.stop();}}},viewChildrenToDom,this,[[4,24,27,30]]);})},{key:"viewRangeToDom",value:function viewRangeToDom(t){var e=this.viewPositionToDom(t.start);var n=this.viewPositionToDom(t.end);var o=document.createRange();o.setStart(e.parent,e.offset);o.setEnd(n.parent,n.offset);return o;}},{key:"viewPositionToDom",value:function viewPositionToDom(t){var e=t.parent;if(e.is("$text")){var _n56=this.findCorrespondingDomText(e);if(!_n56){return null;}var _o32=t.offset;if(_h(_n56)){_o32+=bh;}return{parent:_n56,offset:_o32};}else{var _n57,_o33,_i34;if(t.offset===0){_n57=this.mapViewToDom(e);if(!_n57){return null;}_i34=_n57.childNodes[0];}else{var _e67=t.nodeBefore;_o33=_e67.is("$text")?this.findCorrespondingDomText(_e67):this.mapViewToDom(t.nodeBefore);if(!_o33){return null;}_n57=_o33.parentNode;_i34=_o33.nextSibling;}if(gh(_i34)&&_h(_i34)){return{parent:_i34,offset:bh};}var _r16=_o33?Yh(_o33)+1:0;return{parent:_n57,offset:_r16};}}},{key:"domToView",value:function domToView(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(this.isBlockFiller(t)){return null;}var n=this.getHostViewElement(t);if(n){return n;}if(Oh(t)&&e.skipComments){return null;}if(gh(t)){if(vh(t)){return null;}else{var _e68=this._processDataFromDomText(t);return _e68===""?null:new gc(this.document,_e68);}}else{if(this.mapDomToView(t)){return this.mapDomToView(t);}var _n58;if(this.isDocumentFragment(t)){_n58=new th(this.document);if(e.bind){this.bindDocumentFragments(t,_n58);}}else{_n58=this._createViewElement(t,e);if(e.bind){this.bindElements(t,_n58);}var _o34=t.attributes;if(_o34){for(var _t54=_o34.length-1;_t54>=0;_t54--){_n58._setAttribute(_o34[_t54].name,_o34[_t54].value);}}if(this._isViewElementWithRawContent(_n58,e)||Oh(t)){var _e69=Oh(t)?t.data:t.innerHTML;_n58._setCustomProperty("$rawContent",_e69);this._encounteredRawContentDomNodes.add(t);return _n58;}}if(e.withChildren!==false){var _iterator85=_createForOfIteratorHelper(this.domChildrenToView(t,e)),_step85;try{for(_iterator85.s();!(_step85=_iterator85.n()).done;){var _o35=_step85.value;_n58._appendChild(_o35);}}catch(err){_iterator85.e(err);}finally{_iterator85.f();}}return _n58;}}},{key:"domChildrenToView",value:/*#__PURE__*/regeneratorRuntime.mark(function domChildrenToView(t){var e,_n59,_o36,_i35,_args12=arguments;return regeneratorRuntime.wrap(function domChildrenToView$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:e=_args12.length>1&&_args12[1]!==undefined?_args12[1]:{};_n59=0;case 2:if(!(_n59<t.childNodes.length)){_context12.next=11;break;}_o36=t.childNodes[_n59];_i35=this.domToView(_o36,e);if(!(_i35!==null)){_context12.next=8;break;}_context12.next=8;return _i35;case 8:_n59++;_context12.next=2;break;case 11:case"end":return _context12.stop();}}},domChildrenToView,this);})},{key:"domSelectionToView",value:function domSelectionToView(t){if(t.rangeCount===1){var _e70=t.getRangeAt(0).startContainer;if(gh(_e70)){_e70=_e70.parentNode;}var _n60=this.fakeSelectionToView(_e70);if(_n60){return _n60;}}var e=this.isDomSelectionBackward(t);var n=[];for(var _e71=0;_e71<t.rangeCount;_e71++){var _o37=t.getRangeAt(_e71);var _i36=this.domRangeToView(_o37);if(_i36){n.push(_i36);}}return new sd(n,{backward:e});}},{key:"domRangeToView",value:function domRangeToView(t){var e=this.domPositionToView(t.startContainer,t.startOffset);var n=this.domPositionToView(t.endContainer,t.endOffset);if(e&&n){return new od(e,n);}return null;}},{key:"domPositionToView",value:function domPositionToView(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(this.isBlockFiller(t)){return this.domPositionToView(t.parentNode,Yh(t));}var n=this.mapDomToView(t);if(n&&(n.is("uiElement")||n.is("rawElement"))){return nd._createBefore(n);}if(gh(t)){if(vh(t)){return this.domPositionToView(t.parentNode,Yh(t));}var _n61=this.findCorrespondingViewText(t);var _o38=e;if(!_n61){return null;}if(_h(t)){_o38-=bh;_o38=_o38<0?0:_o38;}return new nd(_n61,_o38);}else{if(e===0){var _e72=this.mapDomToView(t);if(_e72){return new nd(_e72,0);}}else{var _n62=t.childNodes[e-1];var _o39=gh(_n62)?this.findCorrespondingViewText(_n62):this.mapDomToView(_n62);if(_o39&&_o39.parent){return new nd(_o39.parent,_o39.index+1);}}return null;}}},{key:"mapDomToView",value:function mapDomToView(t){var e=this.getHostViewElement(t);return e||this._domToViewMapping.get(t);}},{key:"findCorrespondingViewText",value:function findCorrespondingViewText(t){if(vh(t)){return null;}var e=this.getHostViewElement(t);if(e){return e;}var n=t.previousSibling;if(n){if(!this.isElement(n)){return null;}var _t55=this.mapDomToView(n);if(_t55){var _e73=_t55.nextSibling;if(_e73 instanceof gc){return _t55.nextSibling;}else{return null;}}}else{var _e74=this.mapDomToView(t.parentNode);if(_e74){var _t56=_e74.getChild(0);if(_t56 instanceof gc){return _t56;}else{return null;}}}return null;}},{key:"mapViewToDom",value:function mapViewToDom(t){return this._viewToDomMapping.get(t);}},{key:"findCorrespondingDomText",value:function findCorrespondingDomText(t){var e=t.previousSibling;if(e&&this.mapViewToDom(e)){return this.mapViewToDom(e).nextSibling;}if(!e&&t.parent&&this.mapViewToDom(t.parent)){return this.mapViewToDom(t.parent).childNodes[0];}return null;}},{key:"focus",value:function focus(t){var e=this.mapViewToDom(t);if(e&&e.ownerDocument.activeElement!==e){var _Zh$window=Zh.window,_t57=_Zh$window.scrollX,_n63=_Zh$window.scrollY;var _o40=[];au(e,function(t){var e=t.scrollLeft,n=t.scrollTop;_o40.push([e,n]);});e.focus();au(e,function(t){var _o40$shift=_o40.shift(),_o40$shift2=_slicedToArray(_o40$shift,2),e=_o40$shift2[0],n=_o40$shift2[1];t.scrollLeft=e;t.scrollTop=n;});Zh.window.scrollTo(_t57,_n63);}}},{key:"isElement",value:function isElement(t){return t&&t.nodeType==Node.ELEMENT_NODE;}},{key:"isDocumentFragment",value:function isDocumentFragment(t){return t&&t.nodeType==Node.DOCUMENT_FRAGMENT_NODE;}},{key:"isBlockFiller",value:function isBlockFiller(t){if(this.blockFillerMode=="br"){return t.isEqualNode(Xh);}if(t.tagName==="BR"&&lu(t,this.blockElements)&&t.parentNode.childNodes.length===1){return true;}return t.isEqualNode(eu)||cu(t,this.blockElements);}},{key:"isDomSelectionBackward",value:function isDomSelectionBackward(t){if(t.isCollapsed){return false;}var e=document.createRange();e.setStart(t.anchorNode,t.anchorOffset);e.setEnd(t.focusNode,t.focusOffset);var n=e.collapsed;e.detach();return n;}},{key:"getHostViewElement",value:function getHostViewElement(t){var e=Qh(t);e.pop();while(e.length){var _t58=e.pop();var _n64=this._domToViewMapping.get(_t58);if(_n64&&(_n64.is("uiElement")||_n64.is("rawElement"))){return _n64;}}return null;}},{key:"isDomSelectionCorrect",value:function isDomSelectionCorrect(t){return this._isDomSelectionPositionCorrect(t.anchorNode,t.anchorOffset)&&this._isDomSelectionPositionCorrect(t.focusNode,t.focusOffset);}},{key:"registerRawContentMatcher",value:function registerRawContentMatcher(t){this._rawContentElementMatcher.add(t);}},{key:"_getBlockFiller",value:function _getBlockFiller(t){switch(this.blockFillerMode){case"nbsp":return ph(t);case"markedNbsp":return mh(t);case"br":return kh(t);}}},{key:"_isDomSelectionPositionCorrect",value:function _isDomSelectionPositionCorrect(t,e){if(gh(t)&&_h(t)&&e<bh){return false;}if(this.isElement(t)&&_h(t.childNodes[e])){return false;}var n=this.mapDomToView(t);if(n&&(n.is("uiElement")||n.is("rawElement"))){return false;}return true;}},{key:"_processDataFromViewText",value:function _processDataFromViewText(t){var _this29=this;var e=t.data;if(t.getAncestors().some(function(t){return _this29.preElements.includes(t.name);})){return e;}if(e.charAt(0)==" "){var _n65=this._getTouchingInlineViewNode(t,false);var _o41=_n65&&_n65.is("$textProxy")&&this._nodeEndsWithSpace(_n65);if(_o41||!_n65){e=" "+e.substr(1);}}if(e.charAt(e.length-1)==" "){var _n66=this._getTouchingInlineViewNode(t,true);var _o42=_n66&&_n66.is("$textProxy")&&_n66.data.charAt(0)==" ";if(e.charAt(e.length-2)==" "||!_n66||_o42){e=e.substr(0,e.length-1)+" ";}}return e.replace(/ {2}/g,"  ");}},{key:"_nodeEndsWithSpace",value:function _nodeEndsWithSpace(t){var _this30=this;if(t.getAncestors().some(function(t){return _this30.preElements.includes(t.name);})){return false;}var e=this._processDataFromViewText(t);return e.charAt(e.length-1)==" ";}},{key:"_processDataFromDomText",value:function _processDataFromDomText(t){var e=t.data;if(su(t,this.preElements)){return Ah(t);}e=e.replace(/[ \n\t\r]{1,}/g," ");var n=this._getTouchingInlineDomNode(t,false);var o=this._getTouchingInlineDomNode(t,true);var i=this._checkShouldLeftTrimDomText(t,n);var r=this._checkShouldRightTrimDomText(t,o);if(i){e=e.replace(/^ /,"");}if(r){e=e.replace(/ $/,"");}e=Ah(new Text(e));e=e.replace(/ \u00A0/g,"  ");var s=o&&this.isElement(o)&&o.tagName!="BR";var a=o&&gh(o)&&o.data.charAt(0)==" ";if(/( |\u00A0)\u00A0$/.test(e)||!o||s||a){e=e.replace(/\u00A0$/," ");}if(i||n&&this.isElement(n)&&n.tagName!="BR"){e=e.replace(/^\u00A0/," ");}return e;}},{key:"_checkShouldLeftTrimDomText",value:function _checkShouldLeftTrimDomText(t,e){if(!e){return true;}if(this.isElement(e)){return e.tagName==="BR";}if(this._encounteredRawContentDomNodes.has(t.previousSibling)){return false;}return /[^\S\u00A0]/.test(e.data.charAt(e.data.length-1));}},{key:"_checkShouldRightTrimDomText",value:function _checkShouldRightTrimDomText(t,e){if(e){return false;}return!_h(t);}},{key:"_getTouchingInlineViewNode",value:function _getTouchingInlineViewNode(t,e){var n=new ed({startPosition:e?nd._createAfter(t):nd._createBefore(t),direction:e?"forward":"backward"});var _iterator86=_createForOfIteratorHelper(n),_step86;try{for(_iterator86.s();!(_step86=_iterator86.n()).done;){var _t59=_step86.value;if(_t59.item.is("element")&&this.inlineObjectElements.includes(_t59.item.name)){return _t59.item;}else if(_t59.item.is("containerElement")){return null;}else if(_t59.item.is("element","br")){return null;}else if(_t59.item.is("$textProxy")){return _t59.item;}}}catch(err){_iterator86.e(err);}finally{_iterator86.f();}return null;}},{key:"_getTouchingInlineDomNode",value:function _getTouchingInlineDomNode(t,e){if(!t.parentNode){return null;}var n=e?"firstChild":"lastChild";var o=e?"nextSibling":"previousSibling";var i=true;do{if(!i&&t[n]){t=t[n];}else if(t[o]){t=t[o];i=false;}else{t=t.parentNode;i=true;}if(!t||this._isBlockElement(t)){return null;}}while(!(gh(t)||t.tagName=="BR"||this._isInlineObjectElement(t)));return t;}},{key:"_isBlockElement",value:function _isBlockElement(t){return this.isElement(t)&&this.blockElements.includes(t.tagName.toLowerCase());}},{key:"_isInlineObjectElement",value:function _isInlineObjectElement(t){return this.isElement(t)&&this.inlineObjectElements.includes(t.tagName.toLowerCase());}},{key:"_createViewElement",value:function _createViewElement(t,e){if(Oh(t)){return new Ud(this.document,"$comment");}var n=e.keepOriginalCase?t.tagName:t.tagName.toLowerCase();return new Gl(this.document,n);}},{key:"_isViewElementWithRawContent",value:function _isViewElementWithRawContent(t,e){return e.withChildren!==false&&this._rawContentElementMatcher.match(t);}},{key:"_shouldRenameElement",value:function _shouldRenameElement(t){var e=t.toLowerCase();return this.renderingMode==="editing"&&iu.includes(e);}},{key:"_createReplacementDomElement",value:function _createReplacementDomElement(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var n=document.createElement("span");n.setAttribute(ou,t);if(e){while(e.firstChild){n.appendChild(e.firstChild);}var _iterator87=_createForOfIteratorHelper(e.getAttributeNames()),_step87;try{for(_iterator87.s();!(_step87=_iterator87.n()).done;){var _t60=_step87.value;n.setAttribute(_t60,e.getAttribute(_t60));}}catch(err){_iterator87.e(err);}finally{_iterator87.f();}}return n;}}]);return ru;}();function su(t,e){var n=Qh(t);return n.some(function(t){return t.tagName&&e.includes(t.tagName.toLowerCase());});}function au(t,e){while(t&&t!=Zh.document){e(t);t=t.parentNode;}}function cu(t,e){var n=t.isEqualNode(tu);return n&&lu(t,e)&&t.parentNode.childNodes.length===1;}function lu(t,e){var n=t.parentNode;return n&&n.tagName&&e.includes(n.tagName.toLowerCase());}function du(t){if(t==="script"){u("domconverter-unsafe-script-element-detected");}if(t==="style"){u("domconverter-unsafe-style-element-detected");}}function hu(t){var e=Object.prototype.toString.apply(t);if(e=="[object Window]"){return true;}if(e=="[object global]"){return true;}return false;}var uu=Un({},C,{listenTo:function listenTo(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(zh(t)||hu(t)){var _i37={capture:!!o.useCapture,passive:!!o.usePassive};var _r17=this._getProxyEmitter(t,_i37)||new gu(t,_i37);this.listenTo(_r17,e,n,o);}else{C.listenTo.call(this,t,e,n,o);}},stopListening:function stopListening(t,e,n){if(zh(t)||hu(t)){var _o43=this._getAllProxyEmitters(t);var _iterator88=_createForOfIteratorHelper(_o43),_step88;try{for(_iterator88.s();!(_step88=_iterator88.n()).done;){var _t61=_step88.value;this.stopListening(_t61,e,n);}}catch(err){_iterator88.e(err);}finally{_iterator88.f();}}else{C.stopListening.call(this,t,e,n);}},_getProxyEmitter:function _getProxyEmitter(t,e){return y(this,mu(t,e));},_getAllProxyEmitters:function _getAllProxyEmitters(t){var _this31=this;return[{capture:false,passive:false},{capture:false,passive:true},{capture:true,passive:false},{capture:true,passive:true}].map(function(e){return _this31._getProxyEmitter(t,e);}).filter(function(t){return!!t;});}});var fu=uu;var gu=/*#__PURE__*/_createClass(function gu(t,e){_classCallCheck(this,gu);x(this,mu(t,e));this._domNode=t;this._options=e;});Un(gu.prototype,C,{attach:function attach(t){if(this._domListeners&&this._domListeners[t]){return;}var e=this._createDomListener(t);this._domNode.addEventListener(t,e,this._options);if(!this._domListeners){this._domListeners={};}this._domListeners[t]=e;},detach:function detach(t){var e;if(this._domListeners[t]&&(!(e=this._events[t])||!e.callbacks.length)){this._domListeners[t].removeListener();}},_addEventListener:function _addEventListener(t,e,n){this.attach(t);C._addEventListener.call(this,t,e,n);},_removeEventListener:function _removeEventListener(t,e){C._removeEventListener.call(this,t,e);this.detach(t);},_createDomListener:function _createDomListener(t){var _this32=this;var e=function e(_e75){_this32.fire(t,_e75);};e.removeListener=function(){_this32._domNode.removeEventListener(t,e,_this32._options);delete _this32._domListeners[t];};return e;}});function pu(t){return t["data-ck-expando"]||(t["data-ck-expando"]=s());}function mu(t,e){var n=pu(t);var _iterator89=_createForOfIteratorHelper(Object.keys(e).sort()),_step89;try{for(_iterator89.s();!(_step89=_iterator89.n()).done;){var _t62=_step89.value;if(e[_t62]){n+="-"+_t62;}}}catch(err){_iterator89.e(err);}finally{_iterator89.f();}return n;}var ku=/*#__PURE__*/function(){function ku(t){_classCallCheck(this,ku);this.view=t;this.document=t.document;this.isEnabled=false;}_createClass(ku,[{key:"enable",value:function enable(){this.isEnabled=true;}},{key:"disable",value:function disable(){this.isEnabled=false;}},{key:"destroy",value:function destroy(){this.disable();this.stopListening();}},{key:"checkShouldIgnoreEventFromTarget",value:function checkShouldIgnoreEventFromTarget(t){if(t&&t.nodeType===3){t=t.parentNode;}if(!t||t.nodeType!==1){return false;}return t.matches("[data-cke-ignore-events], [data-cke-ignore-events] *");}}]);return ku;}();fo(ku,fu);var bu="__lodash_hash_undefined__";function wu(t){this.__data__.set(t,bu);return this;}var _u=wu;function vu(t){return this.__data__.has(t);}var Au=vu;function Cu(t){var e=-1,n=t==null?0:t.length;this.__data__=new Fi();while(++e<n){this.add(t[e]);}}Cu.prototype.add=Cu.prototype.push=_u;Cu.prototype.has=Au;var yu=Cu;function xu(t,e){var n=-1,o=t==null?0:t.length;while(++n<o){if(e(t[n],n,t)){return true;}}return false;}var Eu=xu;function Du(t,e){return t.has(e);}var Su=Du;var Pu=1,Tu=2;function Bu(t,e,n,o,i,r){var s=n&Pu,a=t.length,c=e.length;if(a!=c&&!(s&&c>a)){return false;}var l=r.get(t);var d=r.get(e);if(l&&d){return l==e&&d==t;}var h=-1,u=true,f=n&Tu?new yu():undefined;r.set(t,e);r.set(e,t);while(++h<a){var g=t[h],p=e[h];if(o){var m=s?o(p,g,h,e,t,r):o(g,p,h,t,e,r);}if(m!==undefined){if(m){continue;}u=false;break;}if(f){if(!Eu(e,function(t,e){if(!Su(f,e)&&(g===t||i(g,t,n,o,r))){return f.push(e);}})){u=false;break;}}else if(!(g===p||i(g,p,n,o,r))){u=false;break;}}r["delete"](t);r["delete"](e);return u;}var Iu=Bu;function Ru(t){var e=-1,n=Array(t.size);t.forEach(function(t,o){n[++e]=[o,t];});return n;}var Ou=Ru;function zu(t){var e=-1,n=Array(t.size);t.forEach(function(t){n[++e]=t;});return n;}var Mu=zu;var Nu=1,Fu=2;var Vu="[object Boolean]",Lu="[object Date]",Hu="[object Error]",ju="[object Map]",qu="[object Number]",Wu="[object RegExp]",Ku="[object Set]",Gu="[object String]",$u="[object Symbol]";var Uu="[object ArrayBuffer]",Ju="[object DataView]";var Zu=q?q.prototype:undefined,Yu=Zu?Zu.valueOf:undefined;function Qu(t,e,n,o,i,r,s){switch(n){case Ju:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset){return false;}t=t.buffer;e=e.buffer;case Uu:if(t.byteLength!=e.byteLength||!r(new ls(t),new ls(e))){return false;}return true;case Vu:case Lu:case qu:return Ft(+t,+e);case Hu:return t.name==e.name&&t.message==e.message;case Wu:case Gu:return t==e+"";case ju:var a=Ou;case Ku:var c=o&Nu;a||(a=Mu);if(t.size!=e.size&&!c){return false;}var l=s.get(t);if(l){return l==e;}o|=Fu;s.set(t,e);var d=Iu(a(t),a(e),o,i,r,s);s["delete"](t);return d;case $u:if(Yu){return Yu.call(t)==Yu.call(e);}}return false;}var Xu=Qu;var tf=1;var ef=Object.prototype;var nf=ef.hasOwnProperty;function of(t,e,n,o,i,r){var s=n&tf,a=Or(t),c=a.length,l=Or(e),d=l.length;if(c!=d&&!s){return false;}var h=c;while(h--){var u=a[h];if(!(s?u in e:nf.call(e,u))){return false;}}var f=r.get(t);var g=r.get(e);if(f&&g){return f==e&&g==t;}var p=true;r.set(t,e);r.set(e,t);var m=s;while(++h<c){u=a[h];var k=t[u],b=e[u];if(o){var w=s?o(b,k,u,e,t,r):o(k,b,u,t,e,r);}if(!(w===undefined?k===b||i(k,b,n,o,r):w)){p=false;break;}m||(m=u=="constructor");}if(p&&!m){var _=t.constructor,v=e.constructor;if(_!=v&&"constructor"in t&&"constructor"in e&&!(typeof _=="function"&&_ instanceof _&&typeof v=="function"&&v instanceof v)){p=false;}}r["delete"](t);r["delete"](e);return p;}var rf=of;var sf=1;var af="[object Arguments]",cf="[object Array]",lf="[object Object]";var df=Object.prototype;var hf=df.hasOwnProperty;function uf(t,e,n,o,i,r){var s=Ne(t),a=Ne(e),c=s?cf:os(t),l=a?cf:os(e);c=c==af?lf:c;l=l==af?lf:l;var d=c==lf,h=l==lf,u=c==l;if(u&&Ge(t)){if(!Ge(e)){return false;}s=true;d=false;}if(u&&!d){r||(r=new qi());return s||Bn(t)?Iu(t,e,n,o,i,r):Xu(t,e,c,n,o,i,r);}if(!(n&sf)){var f=d&&hf.call(t,"__wrapped__"),g=h&&hf.call(e,"__wrapped__");if(f||g){var p=f?t.value():t,m=g?e.value():e;r||(r=new qi());return i(p,m,n,o,r);}}if(!u){return false;}r||(r=new qi());return rf(t,e,n,o,i,r);}var ff=uf;function gf(t,e,n,o,i){if(t===e){return true;}if(t==null||e==null||!De(t)&&!De(e)){return t!==t&&e!==e;}return ff(t,e,n,o,gf,i);}var pf=gf;function mf(t,e,n){n=typeof n=="function"?n:undefined;var o=n?n(t,e):undefined;return o===undefined?pf(t,e,undefined,n):!!o;}var kf=mf;var bf=/*#__PURE__*/function(_ku){_inherits(bf,_ku);var _super13=_createSuper(bf);function bf(t){var _this33;_classCallCheck(this,bf);_this33=_super13.call(this,t);_this33._config={childList:true,characterData:true,characterDataOldValue:true,subtree:true};_this33.domConverter=t.domConverter;_this33.renderer=t._renderer;_this33._domElements=[];_this33._mutationObserver=new window.MutationObserver(_this33._onMutations.bind(_assertThisInitialized(_this33)));return _this33;}_createClass(bf,[{key:"flush",value:function flush(){this._onMutations(this._mutationObserver.takeRecords());}},{key:"observe",value:function observe(t){this._domElements.push(t);if(this.isEnabled){this._mutationObserver.observe(t,this._config);}}},{key:"enable",value:function enable(){_get(_getPrototypeOf(bf.prototype),"enable",this).call(this);var _iterator90=_createForOfIteratorHelper(this._domElements),_step90;try{for(_iterator90.s();!(_step90=_iterator90.n()).done;){var _t63=_step90.value;this._mutationObserver.observe(_t63,this._config);}}catch(err){_iterator90.e(err);}finally{_iterator90.f();}}},{key:"disable",value:function disable(){_get(_getPrototypeOf(bf.prototype),"disable",this).call(this);this._mutationObserver.disconnect();}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(bf.prototype),"destroy",this).call(this);this._mutationObserver.disconnect();}},{key:"_onMutations",value:function _onMutations(t){if(t.length===0){return;}var e=this.domConverter;var n=new Map();var o=new Set();var _iterator91=_createForOfIteratorHelper(t),_step91;try{for(_iterator91.s();!(_step91=_iterator91.n()).done;){var _n68=_step91.value;if(_n68.type==="childList"){var _t65=e.mapDomToView(_n68.target);if(_t65&&(_t65.is("uiElement")||_t65.is("rawElement"))){continue;}if(_t65&&!this._isBogusBrMutation(_n68)){o.add(_t65);}}}}catch(err){_iterator91.e(err);}finally{_iterator91.f();}var _iterator92=_createForOfIteratorHelper(t),_step92;try{for(_iterator92.s();!(_step92=_iterator92.n()).done;){var _i38=_step92.value;var _t66=e.mapDomToView(_i38.target);if(_t66&&(_t66.is("uiElement")||_t66.is("rawElement"))){continue;}if(_i38.type==="characterData"){var _t67=e.findCorrespondingViewText(_i38.target);if(_t67&&!o.has(_t67.parent)){n.set(_t67,{type:"text",oldText:_t67.data,newText:Ah(_i38.target),node:_t67});}else if(!_t67&&_h(_i38.target)){o.add(e.mapDomToView(_i38.target.parentNode));}}}}catch(err){_iterator92.e(err);}finally{_iterator92.f();}var i=[];var _iterator93=_createForOfIteratorHelper(n.values()),_step93;try{for(_iterator93.s();!(_step93=_iterator93.n()).done;){var _t68=_step93.value;this.renderer.markToSync("text",_t68.node);i.push(_t68);}}catch(err){_iterator93.e(err);}finally{_iterator93.f();}var _iterator94=_createForOfIteratorHelper(o),_step94;try{for(_iterator94.s();!(_step94=_iterator94.n()).done;){var _t69=_step94.value;var _n69=e.mapViewToDom(_t69);var _o44=Array.from(_t69.getChildren());var _r18=Array.from(e.domChildrenToView(_n69,{withChildren:false}));if(!kf(_o44,_r18,a)){this.renderer.markToSync("children",_t69);i.push({type:"children",oldChildren:_o44,newChildren:_r18,node:_t69});}}}catch(err){_iterator94.e(err);}finally{_iterator94.f();}var r=t[0].target.ownerDocument.getSelection();var s=null;if(r&&r.anchorNode){var _t64=e.domPositionToView(r.anchorNode,r.anchorOffset);var _n67=e.domPositionToView(r.focusNode,r.focusOffset);if(_t64&&_n67){s=new sd(_t64);s.setFocus(_n67);}}if(i.length){this.document.fire("mutations",i,s);this.view.forceRender();}function a(t,e){if(Array.isArray(t)){return;}if(t===e){return true;}else if(t.is("$text")&&e.is("$text")){return t.data===e.data;}return false;}}},{key:"_isBogusBrMutation",value:function _isBogusBrMutation(t){var e=null;if(t.nextSibling===null&&t.removedNodes.length===0&&t.addedNodes.length==1){e=this.domConverter.domToView(t.addedNodes[0],{withChildren:false});}return e&&e.is("element","br");}}]);return bf;}(ku);var wf=/*#__PURE__*/function(){function wf(t,e,n){_classCallCheck(this,wf);this.view=t;this.document=t.document;this.domEvent=e;this.domTarget=e.target;Un(this,n);}_createClass(wf,[{key:"target",get:function get(){return this.view.domConverter.mapDomToView(this.domTarget);}},{key:"preventDefault",value:function preventDefault(){this.domEvent.preventDefault();}},{key:"stopPropagation",value:function stopPropagation(){this.domEvent.stopPropagation();}}]);return wf;}();var _f=/*#__PURE__*/function(_ku2){_inherits(_f,_ku2);var _super14=_createSuper(_f);function _f(t){var _this34;_classCallCheck(this,_f);_this34=_super14.call(this,t);_this34.useCapture=false;return _this34;}_createClass(_f,[{key:"observe",value:function observe(t){var _this35=this;var e=typeof this.domEventType=="string"?[this.domEventType]:this.domEventType;e.forEach(function(e){_this35.listenTo(t,e,function(t,e){if(_this35.isEnabled&&!_this35.checkShouldIgnoreEventFromTarget(e.target)){_this35.onDomEvent(e);}},{useCapture:_this35.useCapture});});}},{key:"fire",value:function fire(t,e,n){if(this.isEnabled){this.document.fire(t,new wf(this.view,e,n));}}}]);return _f;}(ku);var vf=/*#__PURE__*/function(_f2){_inherits(vf,_f2);var _super15=_createSuper(vf);function vf(t){var _this36;_classCallCheck(this,vf);_this36=_super15.call(this,t);_this36.domEventType=["keydown","keyup"];return _this36;}_createClass(vf,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t,{keyCode:t.keyCode,altKey:t.altKey,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,metaKey:t.metaKey,get keystroke(){return Vd(this);}});}}]);return vf;}(_f);var Af=function Af(){return H.Date.now();};var Cf=Af;var yf=/\s/;function xf(t){var e=t.length;while(e--&&yf.test(t.charAt(e))){}return e;}var Ef=xf;var Df=/^\s+/;function Sf(t){return t?t.slice(0,Ef(t)+1).replace(Df,""):t;}var Pf=Sf;var Tf=0/0;var Bf=/^[-+]0x[0-9a-f]+$/i;var If=/^0b[01]+$/i;var Rf=/^0o[0-7]+$/i;var Of=parseInt;function zf(t){if(typeof t=="number"){return t;}if(Tc(t)){return Tf;}if(M(t)){var e=typeof t.valueOf=="function"?t.valueOf():t;t=M(e)?e+"":e;}if(typeof t!="string"){return t===0?t:+t;}t=Pf(t);var n=If.test(t);return n||Rf.test(t)?Of(t.slice(2),n?2:8):Bf.test(t)?Tf:+t;}var Mf=zf;var Nf="Expected a function";var Ff=Math.max,Vf=Math.min;function Lf(t,e,n){var o,i,r,s,a,c,l=0,d=false,h=false,u=true;if(typeof t!="function"){throw new TypeError(Nf);}e=Mf(e)||0;if(M(n)){d=!!n.leading;h="maxWait"in n;r=h?Ff(Mf(n.maxWait)||0,e):r;u="trailing"in n?!!n.trailing:u;}function f(e){var n=o,r=i;o=i=undefined;l=e;s=t.apply(r,n);return s;}function g(t){l=t;a=setTimeout(k,e);return d?f(t):s;}function p(t){var n=t-c,o=t-l,i=e-n;return h?Vf(i,r-o):i;}function m(t){var n=t-c,o=t-l;return c===undefined||n>=e||n<0||h&&o>=r;}function k(){var t=Cf();if(m(t)){return b(t);}a=setTimeout(k,p(t));}function b(t){a=undefined;if(u&&o){return f(t);}o=i=undefined;return s;}function w(){if(a!==undefined){clearTimeout(a);}l=0;o=c=i=a=undefined;}function _(){return a===undefined?s:b(Cf());}function v(){var t=Cf(),n=m(t);o=arguments;i=this;c=t;if(n){if(a===undefined){return g(c);}if(h){clearTimeout(a);a=setTimeout(k,e);return f(c);}}if(a===undefined){a=setTimeout(k,e);}return s;}v.cancel=w;v.flush=_;return v;}var Hf=Lf;var jf=/*#__PURE__*/function(_ku3){_inherits(jf,_ku3);var _super16=_createSuper(jf);function jf(t){var _this37;_classCallCheck(this,jf);_this37=_super16.call(this,t);_this37._fireSelectionChangeDoneDebounced=Hf(function(t){return _this37.document.fire("selectionChangeDone",t);},200);return _this37;}_createClass(jf,[{key:"observe",value:function observe(){var _this38=this;var t=this.document;t.on("arrowKey",function(e,n){var o=t.selection;if(o.isFake&&_this38.isEnabled){n.preventDefault();}},{context:"$capture"});t.on("arrowKey",function(e,n){var o=t.selection;if(o.isFake&&_this38.isEnabled){_this38._handleSelectionMove(n.keyCode);}},{priority:"lowest"});}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(jf.prototype),"destroy",this).call(this);this._fireSelectionChangeDoneDebounced.cancel();}},{key:"_handleSelectionMove",value:function _handleSelectionMove(t){var e=this.document.selection;var n=new sd(e.getRanges(),{backward:e.isBackward,fake:false});if(t==Nd.arrowleft||t==Nd.arrowup){n.setTo(n.getFirstPosition());}if(t==Nd.arrowright||t==Nd.arrowdown){n.setTo(n.getLastPosition());}var o={oldSelection:e,newSelection:n,domSelection:null};this.document.fire("selectionChange",o);this._fireSelectionChangeDoneDebounced(o);}}]);return jf;}(ku);var qf=/*#__PURE__*/function(_ku4){_inherits(qf,_ku4);var _super17=_createSuper(qf);function qf(t){var _this39;_classCallCheck(this,qf);_this39=_super17.call(this,t);_this39.mutationObserver=t.getObserver(bf);_this39.selection=_this39.document.selection;_this39.domConverter=t.domConverter;_this39._documents=new WeakSet();_this39._fireSelectionChangeDoneDebounced=Hf(function(t){return _this39.document.fire("selectionChangeDone",t);},200);_this39._clearInfiniteLoopInterval=setInterval(function(){return _this39._clearInfiniteLoop();},1e3);_this39._documentIsSelectingInactivityTimeoutDebounced=Hf(function(){return _this39.document.isSelecting=false;},5e3);_this39._loopbackCounter=0;return _this39;}_createClass(qf,[{key:"observe",value:function observe(t){var _this40=this;var e=t.ownerDocument;var n=function n(){_this40.document.isSelecting=true;_this40._documentIsSelectingInactivityTimeoutDebounced();};var o=function o(){_this40.document.isSelecting=false;_this40._documentIsSelectingInactivityTimeoutDebounced.cancel();};this.listenTo(t,"selectstart",n,{priority:"highest"});this.listenTo(t,"keydown",o,{priority:"highest"});this.listenTo(t,"keyup",o,{priority:"highest"});if(this._documents.has(e)){return;}this.listenTo(e,"mouseup",o,{priority:"highest"});this.listenTo(e,"selectionchange",function(t,n){_this40._handleSelectionChange(n,e);_this40._documentIsSelectingInactivityTimeoutDebounced();});this._documents.add(e);}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(qf.prototype),"destroy",this).call(this);clearInterval(this._clearInfiniteLoopInterval);this._fireSelectionChangeDoneDebounced.cancel();this._documentIsSelectingInactivityTimeoutDebounced.cancel();}},{key:"_handleSelectionChange",value:function _handleSelectionChange(t,e){if(!this.isEnabled){return;}var n=e.defaultView.getSelection();if(this.checkShouldIgnoreEventFromTarget(n.anchorNode)){return;}this.mutationObserver.flush();var o=this.domConverter.domSelectionToView(n);if(o.rangeCount==0){this.view.hasDomSelection=false;return;}this.view.hasDomSelection=true;if(this.selection.isEqual(o)&&this.domConverter.isDomSelectionCorrect(n)){return;}if(++this._loopbackCounter>60){return;}if(this.selection.isSimilar(o)){this.view.forceRender();}else{var _t70={oldSelection:this.selection,newSelection:o,domSelection:n};this.document.fire("selectionChange",_t70);this._fireSelectionChangeDoneDebounced(_t70);}}},{key:"_clearInfiniteLoop",value:function _clearInfiniteLoop(){this._loopbackCounter=0;}}]);return qf;}(ku);var Wf=/*#__PURE__*/function(_f3){_inherits(Wf,_f3);var _super18=_createSuper(Wf);function Wf(t){var _this41;_classCallCheck(this,Wf);_this41=_super18.call(this,t);_this41.domEventType=["focus","blur"];_this41.useCapture=true;var e=_this41.document;e.on("focus",function(){e.isFocused=true;_this41._renderTimeoutId=setTimeout(function(){return t.change(function(){});},50);});e.on("blur",function(n,o){var i=e.selection.editableElement;if(i===null||i===o.target){e.isFocused=false;t.change(function(){});}});return _this41;}_createClass(Wf,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t);}},{key:"destroy",value:function destroy(){if(this._renderTimeoutId){clearTimeout(this._renderTimeoutId);}_get(_getPrototypeOf(Wf.prototype),"destroy",this).call(this);}}]);return Wf;}(_f);var Kf=/*#__PURE__*/function(_f4){_inherits(Kf,_f4);var _super19=_createSuper(Kf);function Kf(t){var _this42;_classCallCheck(this,Kf);_this42=_super19.call(this,t);_this42.domEventType=["compositionstart","compositionupdate","compositionend"];var e=_this42.document;e.on("compositionstart",function(){e.isComposing=true;});e.on("compositionend",function(){e.isComposing=false;});return _this42;}_createClass(Kf,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t);}}]);return Kf;}(_f);var Gf=/*#__PURE__*/function(_f5){_inherits(Gf,_f5);var _super20=_createSuper(Gf);function Gf(t){var _this43;_classCallCheck(this,Gf);_this43=_super20.call(this,t);_this43.domEventType=["beforeinput"];return _this43;}_createClass(Gf,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t);}}]);return Gf;}(_f);function $f(t){if(t instanceof HTMLTextAreaElement){return t.value;}return t.innerHTML;}function Uf(t){return Object.prototype.toString.apply(t)=="[object Range]";}function Jf(t){var e=t.ownerDocument.defaultView.getComputedStyle(t);return{top:parseInt(e.borderTopWidth,10),right:parseInt(e.borderRightWidth,10),bottom:parseInt(e.borderBottomWidth,10),left:parseInt(e.borderLeftWidth,10)};}var Zf=["top","right","bottom","left","width","height"];var Yf=/*#__PURE__*/function(){function Yf(t){_classCallCheck(this,Yf);var e=Uf(t);Object.defineProperty(this,"_source",{value:t._source||t,writable:true,enumerable:false});if(Wa(t)||e){if(e){var _e76=Yf.getDomRangeRects(t);Qf(this,Yf.getBoundingRect(_e76));}else{Qf(this,t.getBoundingClientRect());}}else if(hu(t)){var _e77=t.innerWidth,_n70=t.innerHeight;Qf(this,{top:0,right:_e77,bottom:_n70,left:0,width:_e77,height:_n70});}else{Qf(this,t);}}_createClass(Yf,[{key:"clone",value:function clone(){return new Yf(this);}},{key:"moveTo",value:function moveTo(t,e){this.top=e;this.right=t+this.width;this.bottom=e+this.height;this.left=t;return this;}},{key:"moveBy",value:function moveBy(t,e){this.top+=e;this.right+=t;this.left+=t;this.bottom+=e;return this;}},{key:"getIntersection",value:function getIntersection(t){var e={top:Math.max(this.top,t.top),right:Math.min(this.right,t.right),bottom:Math.min(this.bottom,t.bottom),left:Math.max(this.left,t.left)};e.width=e.right-e.left;e.height=e.bottom-e.top;if(e.width<0||e.height<0){return null;}else{return new Yf(e);}}},{key:"getIntersectionArea",value:function getIntersectionArea(t){var e=this.getIntersection(t);if(e){return e.getArea();}else{return 0;}}},{key:"getArea",value:function getArea(){return this.width*this.height;}},{key:"getVisible",value:function getVisible(){var t=this._source;var e=this.clone();if(!Xf(t)){var _n71=t.parentNode||t.commonAncestorContainer;while(_n71&&!Xf(_n71)){var _t71=new Yf(_n71);var _o45=e.getIntersection(_t71);if(_o45){if(_o45.getArea()<e.getArea()){e=_o45;}}else{return null;}_n71=_n71.parentNode;}}return e;}},{key:"isEqual",value:function isEqual(t){var _iterator95=_createForOfIteratorHelper(Zf),_step95;try{for(_iterator95.s();!(_step95=_iterator95.n()).done;){var _e78=_step95.value;if(this[_e78]!==t[_e78]){return false;}}}catch(err){_iterator95.e(err);}finally{_iterator95.f();}return true;}},{key:"contains",value:function contains(t){var e=this.getIntersection(t);return!!(e&&e.isEqual(t));}},{key:"excludeScrollbarsAndBorders",value:function excludeScrollbarsAndBorders(){var t=this._source;var e,n,o;if(hu(t)){e=t.innerWidth-t.document.documentElement.clientWidth;n=t.innerHeight-t.document.documentElement.clientHeight;o=t.getComputedStyle(t.document.documentElement).direction;}else{var _i39=Jf(this._source);e=t.offsetWidth-t.clientWidth-_i39.left-_i39.right;n=t.offsetHeight-t.clientHeight-_i39.top-_i39.bottom;o=t.ownerDocument.defaultView.getComputedStyle(t).direction;this.left+=_i39.left;this.top+=_i39.top;this.right-=_i39.right;this.bottom-=_i39.bottom;this.width=this.right-this.left;this.height=this.bottom-this.top;}this.width-=e;if(o==="ltr"){this.right-=e;}else{this.left+=e;}this.height-=n;this.bottom-=n;return this;}}],[{key:"getDomRangeRects",value:function getDomRangeRects(t){var e=[];var n=Array.from(t.getClientRects());if(n.length){var _iterator96=_createForOfIteratorHelper(n),_step96;try{for(_iterator96.s();!(_step96=_iterator96.n()).done;){var _t72=_step96.value;e.push(new Yf(_t72));}}catch(err){_iterator96.e(err);}finally{_iterator96.f();}}else{var _n72=t.startContainer;if(gh(_n72)){_n72=_n72.parentNode;}var _o46=new Yf(_n72.getBoundingClientRect());_o46.right=_o46.left;_o46.width=0;e.push(_o46);}return e;}},{key:"getBoundingRect",value:function getBoundingRect(t){var e={left:Number.POSITIVE_INFINITY,top:Number.POSITIVE_INFINITY,right:Number.NEGATIVE_INFINITY,bottom:Number.NEGATIVE_INFINITY};var n=0;var _iterator97=_createForOfIteratorHelper(t),_step97;try{for(_iterator97.s();!(_step97=_iterator97.n()).done;){var _o47=_step97.value;n++;e.left=Math.min(e.left,_o47.left);e.top=Math.min(e.top,_o47.top);e.right=Math.max(e.right,_o47.right);e.bottom=Math.max(e.bottom,_o47.bottom);}}catch(err){_iterator97.e(err);}finally{_iterator97.f();}if(n==0){return null;}e.width=e.right-e.left;e.height=e.bottom-e.top;return new Yf(e);}}]);return Yf;}();function Qf(t,e){var _iterator98=_createForOfIteratorHelper(Zf),_step98;try{for(_iterator98.s();!(_step98=_iterator98.n()).done;){var _n73=_step98.value;t[_n73]=e[_n73];}}catch(err){_iterator98.e(err);}finally{_iterator98.f();}}function Xf(t){if(!Wa(t)){return false;}return t===t.ownerDocument.body;}var tg=100;var eg=/*#__PURE__*/function(){function eg(t,e){_classCallCheck(this,eg);if(!eg._observerInstance){eg._createObserver();}this._element=t;this._callback=e;eg._addElementCallback(t,e);eg._observerInstance.observe(t);}_createClass(eg,[{key:"destroy",value:function destroy(){eg._deleteElementCallback(this._element,this._callback);}}],[{key:"_addElementCallback",value:function _addElementCallback(t,e){if(!eg._elementCallbacks){eg._elementCallbacks=new Map();}var n=eg._elementCallbacks.get(t);if(!n){n=new Set();eg._elementCallbacks.set(t,n);}n.add(e);}},{key:"_deleteElementCallback",value:function _deleteElementCallback(t,e){var n=eg._getElementCallbacks(t);if(n){n.delete(e);if(!n.size){eg._elementCallbacks.delete(t);eg._observerInstance.unobserve(t);}}if(eg._elementCallbacks&&!eg._elementCallbacks.size){eg._observerInstance=null;eg._elementCallbacks=null;}}},{key:"_getElementCallbacks",value:function _getElementCallbacks(t){if(!eg._elementCallbacks){return null;}return eg._elementCallbacks.get(t);}},{key:"_createObserver",value:function _createObserver(){var t;if(typeof Zh.window.ResizeObserver==="function"){t=Zh.window.ResizeObserver;}else{t=ng;}eg._observerInstance=new t(function(t){var _iterator99=_createForOfIteratorHelper(t),_step99;try{for(_iterator99.s();!(_step99=_iterator99.n()).done;){var _e79=_step99.value;var _t73=eg._getElementCallbacks(_e79.target);if(_t73){var _iterator100=_createForOfIteratorHelper(_t73),_step100;try{for(_iterator100.s();!(_step100=_iterator100.n()).done;){var _n74=_step100.value;_n74(_e79);}}catch(err){_iterator100.e(err);}finally{_iterator100.f();}}}}catch(err){_iterator99.e(err);}finally{_iterator99.f();}});}}]);return eg;}();eg._observerInstance=null;eg._elementCallbacks=null;var ng=/*#__PURE__*/function(){function ng(t){_classCallCheck(this,ng);this._callback=t;this._elements=new Set();this._previousRects=new Map();this._periodicCheckTimeout=null;}_createClass(ng,[{key:"observe",value:function observe(t){this._elements.add(t);this._checkElementRectsAndExecuteCallback();if(this._elements.size===1){this._startPeriodicCheck();}}},{key:"unobserve",value:function unobserve(t){this._elements.delete(t);this._previousRects.delete(t);if(!this._elements.size){this._stopPeriodicCheck();}}},{key:"_startPeriodicCheck",value:function _startPeriodicCheck(){var _this44=this;var t=function t(){_this44._checkElementRectsAndExecuteCallback();_this44._periodicCheckTimeout=setTimeout(t,tg);};this.listenTo(Zh.window,"resize",function(){_this44._checkElementRectsAndExecuteCallback();});this._periodicCheckTimeout=setTimeout(t,tg);}},{key:"_stopPeriodicCheck",value:function _stopPeriodicCheck(){clearTimeout(this._periodicCheckTimeout);this.stopListening();this._previousRects.clear();}},{key:"_checkElementRectsAndExecuteCallback",value:function _checkElementRectsAndExecuteCallback(){var t=[];var _iterator101=_createForOfIteratorHelper(this._elements),_step101;try{for(_iterator101.s();!(_step101=_iterator101.n()).done;){var _e80=_step101.value;if(this._hasRectChanged(_e80)){t.push({target:_e80,contentRect:this._previousRects.get(_e80)});}}}catch(err){_iterator101.e(err);}finally{_iterator101.f();}if(t.length){this._callback(t);}}},{key:"_hasRectChanged",value:function _hasRectChanged(t){if(!t.ownerDocument.body.contains(t)){return false;}var e=new Yf(t);var n=this._previousRects.get(t);var o=!n||!n.isEqual(e);this._previousRects.set(t,e);return o;}}]);return ng;}();fo(ng,fu);function og(t,e){if(t instanceof HTMLTextAreaElement){t.value=e;}t.innerHTML=e;}var ig={};function rg(_ref15){var t=_ref15.target,_ref15$viewportOffset=_ref15.viewportOffset,e=_ref15$viewportOffset===void 0?0:_ref15$viewportOffset;var n=fg(t);var o=n;var i=null;while(o){var _r19=void 0;if(o==n){_r19=gg(t);}else{_r19=gg(i);}cg(_r19,function(){return pg(t,o);});var _s10=pg(t,o);ag(o,_s10,e);if(o.parent!=o){i=o.frameElement;o=o.parent;if(!i){return;}}else{o=null;}}}function sg(t){var e=gg(t);cg(e,function(){return new Yf(t);});}Object.assign(ig,{scrollViewportToShowTarget:rg,scrollAncestorsToShowTarget:sg});function ag(t,e,n){var o=e.clone().moveBy(0,n);var i=e.clone().moveBy(0,-n);var r=new Yf(t).excludeScrollbarsAndBorders();var s=[i,o];if(!s.every(function(t){return r.contains(t);})){var _s11=t.scrollX,_a7=t.scrollY;if(dg(i,r)){_a7-=r.top-e.top+n;}else if(lg(o,r)){_a7+=e.bottom-r.bottom+n;}if(hg(e,r)){_s11-=r.left-e.left+n;}else if(ug(e,r)){_s11+=e.right-r.right+n;}t.scrollTo(_s11,_a7);}}function cg(t,e){var n=fg(t);var o,i;while(t!=n.document.body){i=e();o=new Yf(t).excludeScrollbarsAndBorders();if(!o.contains(i)){if(dg(i,o)){t.scrollTop-=o.top-i.top;}else if(lg(i,o)){t.scrollTop+=i.bottom-o.bottom;}if(hg(i,o)){t.scrollLeft-=o.left-i.left;}else if(ug(i,o)){t.scrollLeft+=i.right-o.right;}}t=t.parentNode;}}function lg(t,e){return t.bottom>e.bottom;}function dg(t,e){return t.top<e.top;}function hg(t,e){return t.left<e.left;}function ug(t,e){return t.right>e.right;}function fg(t){if(Uf(t)){return t.startContainer.ownerDocument.defaultView;}else{return t.ownerDocument.defaultView;}}function gg(t){if(Uf(t)){var _e81=t.commonAncestorContainer;if(gh(_e81)){_e81=_e81.parentNode;}return _e81;}else{return t.parentNode;}}function pg(t,e){var n=fg(t);var o=new Yf(t);if(n===e){return o;}else{var _t74=n;while(_t74!=e){var _e82=_t74.frameElement;var _n75=new Yf(_e82).excludeScrollbarsAndBorders();o.moveBy(_n75.left,_n75.top);_t74=_t74.parent;}}return o;}function mg(t){var e=t.next();if(e.done){return null;}return e.value;}var kg=/*#__PURE__*/function(){function kg(){_classCallCheck(this,kg);this.set("isFocused",false);this.set("focusedElement",null);this._elements=new Set();this._nextEventLoopTimeout=null;}_createClass(kg,[{key:"add",value:function add(t){var _this45=this;if(this._elements.has(t)){throw new h("focustracker-add-element-already-exist",this);}this.listenTo(t,"focus",function(){return _this45._focus(t);},{useCapture:true});this.listenTo(t,"blur",function(){return _this45._blur();},{useCapture:true});this._elements.add(t);}},{key:"remove",value:function remove(t){if(t===this.focusedElement){this._blur(t);}if(this._elements.has(t)){this.stopListening(t);this._elements.delete(t);}}},{key:"destroy",value:function destroy(){this.stopListening();}},{key:"_focus",value:function _focus(t){clearTimeout(this._nextEventLoopTimeout);this.focusedElement=t;this.isFocused=true;}},{key:"_blur",value:function _blur(){var _this46=this;clearTimeout(this._nextEventLoopTimeout);this._nextEventLoopTimeout=setTimeout(function(){_this46.focusedElement=null;_this46.isFocused=false;},0);}}]);return kg;}();fo(kg,fu);fo(kg,eo);var bg=/*#__PURE__*/function(){function bg(){_classCallCheck(this,bg);this._listener=Object.create(fu);}_createClass(bg,[{key:"listenTo",value:function listenTo(t){var _this47=this;this._listener.listenTo(t,"keydown",function(t,e){_this47._listener.fire("_keydown:"+Vd(e),e);});}},{key:"set",value:function set(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=Ld(t);var i=n.priority;this._listener.listenTo(this._listener,"_keydown:"+o,function(t,n){e(n,function(){n.preventDefault();n.stopPropagation();t.stop();});t.return=true;},{priority:i});}},{key:"press",value:function press(t){return!!this._listener.fire("_keydown:"+Vd(t),t);}},{key:"destroy",value:function destroy(){this._listener.stopListening();}}]);return bg;}();var wg=/*#__PURE__*/function(_ku5){_inherits(wg,_ku5);var _super21=_createSuper(wg);function wg(t){var _this48;_classCallCheck(this,wg);_this48=_super21.call(this,t);_this48.document.on("keydown",function(t,e){if(_this48.isEnabled&&jd(e.keyCode)){var _n76=new cd(_this48.document,"arrowKey",_this48.document.selection.getFirstRange());_this48.document.fire(_n76,e);if(_n76.stop.called){t.stop();}}});return _this48;}_createClass(wg,[{key:"observe",value:function observe(){}}]);return wg;}(ku);var _g=/*#__PURE__*/function(_ku6){_inherits(_g,_ku6);var _super22=_createSuper(_g);function _g(t){var _this49;_classCallCheck(this,_g);_this49=_super22.call(this,t);var e=_this49.document;e.on("keydown",function(t,n){if(!_this49.isEnabled||n.keyCode!=Nd.tab||n.ctrlKey){return;}var o=new cd(e,"tab",e.selection.getFirstRange());e.fire(o,n);if(o.stop.called){t.stop();}});return _this49;}_createClass(_g,[{key:"observe",value:function observe(){}}]);return _g;}(ku);var vg=/*#__PURE__*/function(){function vg(t){var _this50=this;_classCallCheck(this,vg);this.document=new kd(t);this.domConverter=new ru(this.document);this.domRoots=new Map();this.set("isRenderingInProgress",false);this.set("hasDomSelection",false);this._renderer=new jh(this.domConverter,this.document.selection);this._renderer.bind("isFocused","isSelecting").to(this.document);this._initialDomRootAttributes=new WeakMap();this._observers=new Map();this._ongoingChange=false;this._postFixersInProgress=false;this._renderingDisabled=false;this._hasChangedSinceTheLastRendering=false;this._writer=new nh(this.document);this.addObserver(bf);this.addObserver(qf);this.addObserver(Wf);this.addObserver(vf);this.addObserver(jf);this.addObserver(Kf);this.addObserver(wg);this.addObserver(_g);if(Ed.isAndroid){this.addObserver(Gf);}Ch(this);Jd(this);this.on("render",function(){_this50._render();_this50.document.fire("layoutChanged");_this50._hasChangedSinceTheLastRendering=false;});this.listenTo(this.document.selection,"change",function(){_this50._hasChangedSinceTheLastRendering=true;});this.listenTo(this.document,"change:isFocused",function(){_this50._hasChangedSinceTheLastRendering=true;});}_createClass(vg,[{key:"attachDomRoot",value:function attachDomRoot(t){var _this51=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"main";var n=this.document.getRoot(e);n._name=t.tagName.toLowerCase();var o={};for(var _i40=0,_Array$from=Array.from(t.attributes);_i40<_Array$from.length;_i40++){var _Array$from$_i=_Array$from[_i40],_e83=_Array$from$_i.name,_i41=_Array$from$_i.value;o[_e83]=_i41;if(_e83==="class"){this._writer.addClass(_i41.split(" "),n);}else{this._writer.setAttribute(_e83,_i41,n);}}this._initialDomRootAttributes.set(t,o);var i=function i(){_this51._writer.setAttribute("contenteditable",!n.isReadOnly,n);if(n.isReadOnly){_this51._writer.addClass("ck-read-only",n);}else{_this51._writer.removeClass("ck-read-only",n);}};i();this.domRoots.set(e,t);this.domConverter.bindElements(t,n);this._renderer.markToSync("children",n);this._renderer.markToSync("attributes",n);this._renderer.domDocuments.add(t.ownerDocument);n.on("change:children",function(t,e){return _this51._renderer.markToSync("children",e);});n.on("change:attributes",function(t,e){return _this51._renderer.markToSync("attributes",e);});n.on("change:text",function(t,e){return _this51._renderer.markToSync("text",e);});n.on("change:isReadOnly",function(){return _this51.change(i);});n.on("change",function(){_this51._hasChangedSinceTheLastRendering=true;});var _iterator102=_createForOfIteratorHelper(this._observers.values()),_step102;try{for(_iterator102.s();!(_step102=_iterator102.n()).done;){var _n77=_step102.value;_n77.observe(t,e);}}catch(err){_iterator102.e(err);}finally{_iterator102.f();}}},{key:"detachDomRoot",value:function detachDomRoot(t){var e=this.domRoots.get(t);Array.from(e.attributes).forEach(function(_ref16){var t=_ref16.name;return e.removeAttribute(t);});var n=this._initialDomRootAttributes.get(e);for(var _t75 in n){e.setAttribute(_t75,n[_t75]);}this.domRoots.delete(t);this.domConverter.unbindDomElement(e);}},{key:"getDomRoot",value:function getDomRoot(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"main";return this.domRoots.get(t);}},{key:"addObserver",value:function addObserver(t){var e=this._observers.get(t);if(e){return e;}e=new t(this);this._observers.set(t,e);var _iterator103=_createForOfIteratorHelper(this.domRoots),_step103;try{for(_iterator103.s();!(_step103=_iterator103.n()).done;){var _step103$value=_slicedToArray(_step103.value,2),_t76=_step103$value[0],_n78=_step103$value[1];e.observe(_n78,_t76);}}catch(err){_iterator103.e(err);}finally{_iterator103.f();}e.enable();return e;}},{key:"getObserver",value:function getObserver(t){return this._observers.get(t);}},{key:"disableObservers",value:function disableObservers(){var _iterator104=_createForOfIteratorHelper(this._observers.values()),_step104;try{for(_iterator104.s();!(_step104=_iterator104.n()).done;){var _t77=_step104.value;_t77.disable();}}catch(err){_iterator104.e(err);}finally{_iterator104.f();}}},{key:"enableObservers",value:function enableObservers(){var _iterator105=_createForOfIteratorHelper(this._observers.values()),_step105;try{for(_iterator105.s();!(_step105=_iterator105.n()).done;){var _t78=_step105.value;_t78.enable();}}catch(err){_iterator105.e(err);}finally{_iterator105.f();}}},{key:"scrollToTheSelection",value:function scrollToTheSelection(){var t=this.document.selection.getFirstRange();if(t){rg({target:this.domConverter.viewRangeToDom(t),viewportOffset:20});}}},{key:"focus",value:function focus(){if(!this.document.isFocused){var _t79=this.document.selection.editableElement;if(_t79){this.domConverter.focus(_t79);this.forceRender();}else{}}}},{key:"change",value:function change(t){if(this.isRenderingInProgress||this._postFixersInProgress){throw new h("cannot-change-view-tree",this);}try{if(this._ongoingChange){return t(this._writer);}this._ongoingChange=true;var _e84=t(this._writer);this._ongoingChange=false;if(!this._renderingDisabled&&this._hasChangedSinceTheLastRendering){this._postFixersInProgress=true;this.document._callPostFixers(this._writer);this._postFixersInProgress=false;this.fire("render");}return _e84;}catch(t){h.rethrowUnexpectedError(t,this);}}},{key:"forceRender",value:function forceRender(){this._hasChangedSinceTheLastRendering=true;this.change(function(){});}},{key:"destroy",value:function destroy(){var _iterator106=_createForOfIteratorHelper(this._observers.values()),_step106;try{for(_iterator106.s();!(_step106=_iterator106.n()).done;){var _t80=_step106.value;_t80.destroy();}}catch(err){_iterator106.e(err);}finally{_iterator106.f();}this.document.destroy();this.stopListening();}},{key:"createPositionAt",value:function createPositionAt(t,e){return nd._createAt(t,e);}},{key:"createPositionAfter",value:function createPositionAfter(t){return nd._createAfter(t);}},{key:"createPositionBefore",value:function createPositionBefore(t){return nd._createBefore(t);}},{key:"createRange",value:function createRange(t,e){return new od(t,e);}},{key:"createRangeOn",value:function createRangeOn(t){return od._createOn(t);}},{key:"createRangeIn",value:function createRangeIn(t){return od._createIn(t);}},{key:"createSelection",value:function createSelection(t,e,n){return new sd(t,e,n);}},{key:"_disableRendering",value:function _disableRendering(t){this._renderingDisabled=t;if(t==false){this.change(function(){});}}},{key:"_render",value:function _render(){this.isRenderingInProgress=true;this.disableObservers();this._renderer.render();this.enableObservers();this.isRenderingInProgress=false;}}]);return vg;}();fo(vg,eo);var Ag=/*#__PURE__*/function(){function Ag(t){_classCallCheck(this,Ag);this.parent=null;this._attrs=kc(t);}_createClass(Ag,[{key:"index",get:function get(){var t;if(!this.parent){return null;}if((t=this.parent.getChildIndex(this))===null){throw new h("model-node-not-found-in-parent",this);}return t;}},{key:"startOffset",get:function get(){var t;if(!this.parent){return null;}if((t=this.parent.getChildStartOffset(this))===null){throw new h("model-node-not-found-in-parent",this);}return t;}},{key:"offsetSize",get:function get(){return 1;}},{key:"endOffset",get:function get(){if(!this.parent){return null;}return this.startOffset+this.offsetSize;}},{key:"nextSibling",get:function get(){var t=this.index;return t!==null&&this.parent.getChild(t+1)||null;}},{key:"previousSibling",get:function get(){var t=this.index;return t!==null&&this.parent.getChild(t-1)||null;}},{key:"root",get:function get(){var t=this;while(t.parent){t=t.parent;}return t;}},{key:"isAttached",value:function isAttached(){return this.root.is("rootElement");}},{key:"getPath",value:function getPath(){var t=[];var e=this;while(e.parent){t.unshift(e.startOffset);e=e.parent;}return t;}},{key:"getAncestors",value:function getAncestors(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{includeSelf:false,parentFirst:false};var e=[];var n=t.includeSelf?this:this.parent;while(n){e[t.parentFirst?"push":"unshift"](n);n=n.parent;}return e;}},{key:"getCommonAncestor",value:function getCommonAncestor(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.getAncestors(e);var o=t.getAncestors(e);var i=0;while(n[i]==o[i]&&n[i]){i++;}return i===0?null:n[i-1];}},{key:"isBefore",value:function isBefore(t){if(this==t){return false;}if(this.root!==t.root){return false;}var e=this.getPath();var n=t.getPath();var o=lc(e,n);switch(o){case"prefix":return true;case"extension":return false;default:return e[o]<n[o];}}},{key:"isAfter",value:function isAfter(t){if(this==t){return false;}if(this.root!==t.root){return false;}return!this.isBefore(t);}},{key:"hasAttribute",value:function hasAttribute(t){return this._attrs.has(t);}},{key:"getAttribute",value:function getAttribute(t){return this._attrs.get(t);}},{key:"getAttributes",value:function getAttributes(){return this._attrs.entries();}},{key:"getAttributeKeys",value:function getAttributeKeys(){return this._attrs.keys();}},{key:"toJSON",value:function toJSON(){var t={};if(this._attrs.size){t.attributes=Array.from(this._attrs).reduce(function(t,e){t[e[0]]=e[1];return t;},{});}return t;}},{key:"is",value:function is(t){return t==="node"||t==="model:node";}},{key:"_clone",value:function _clone(){return new Ag(this._attrs);}},{key:"_remove",value:function _remove(){this.parent._removeChildren(this.index);}},{key:"_setAttribute",value:function _setAttribute(t,e){this._attrs.set(t,e);}},{key:"_setAttributesTo",value:function _setAttributesTo(t){this._attrs=kc(t);}},{key:"_removeAttribute",value:function _removeAttribute(t){return this._attrs.delete(t);}},{key:"_clearAttributes",value:function _clearAttributes(){this._attrs.clear();}}]);return Ag;}();var Cg=/*#__PURE__*/function(_Ag){_inherits(Cg,_Ag);var _super23=_createSuper(Cg);function Cg(t,e){var _this52;_classCallCheck(this,Cg);_this52=_super23.call(this,e);_this52._data=t||"";return _this52;}_createClass(Cg,[{key:"offsetSize",get:function get(){return this.data.length;}},{key:"data",get:function get(){return this._data;}},{key:"is",value:function is(t){return t==="$text"||t==="model:$text"||t==="text"||t==="model:text"||t==="node"||t==="model:node";}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(Cg.prototype),"toJSON",this).call(this);t.data=this.data;return t;}},{key:"_clone",value:function _clone(){return new Cg(this.data,this.getAttributes());}}],[{key:"fromJSON",value:function fromJSON(t){return new Cg(t.data,t.attributes);}}]);return Cg;}(Ag);var yg=/*#__PURE__*/function(){function yg(t,e,n){_classCallCheck(this,yg);this.textNode=t;if(e<0||e>t.offsetSize){throw new h("model-textproxy-wrong-offsetintext",this);}if(n<0||e+n>t.offsetSize){throw new h("model-textproxy-wrong-length",this);}this.data=t.data.substring(e,e+n);this.offsetInText=e;}_createClass(yg,[{key:"startOffset",get:function get(){return this.textNode.startOffset!==null?this.textNode.startOffset+this.offsetInText:null;}},{key:"offsetSize",get:function get(){return this.data.length;}},{key:"endOffset",get:function get(){return this.startOffset!==null?this.startOffset+this.offsetSize:null;}},{key:"isPartial",get:function get(){return this.offsetSize!==this.textNode.offsetSize;}},{key:"parent",get:function get(){return this.textNode.parent;}},{key:"root",get:function get(){return this.textNode.root;}},{key:"is",value:function is(t){return t==="$textProxy"||t==="model:$textProxy"||t==="textProxy"||t==="model:textProxy";}},{key:"getPath",value:function getPath(){var t=this.textNode.getPath();if(t.length>0){t[t.length-1]+=this.offsetInText;}return t;}},{key:"getAncestors",value:function getAncestors(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{includeSelf:false,parentFirst:false};var e=[];var n=t.includeSelf?this:this.parent;while(n){e[t.parentFirst?"push":"unshift"](n);n=n.parent;}return e;}},{key:"hasAttribute",value:function hasAttribute(t){return this.textNode.hasAttribute(t);}},{key:"getAttribute",value:function getAttribute(t){return this.textNode.getAttribute(t);}},{key:"getAttributes",value:function getAttributes(){return this.textNode.getAttributes();}},{key:"getAttributeKeys",value:function getAttributeKeys(){return this.textNode.getAttributeKeys();}}]);return yg;}();var xg=/*#__PURE__*/function(_Symbol$iterator6){function xg(t){_classCallCheck(this,xg);this._nodes=[];if(t){this._insertNodes(0,t);}}_createClass(xg,[{key:_Symbol$iterator6,value:function value(){return this._nodes[Symbol.iterator]();}},{key:"length",get:function get(){return this._nodes.length;}},{key:"maxOffset",get:function get(){return this._nodes.reduce(function(t,e){return t+e.offsetSize;},0);}},{key:"getNode",value:function getNode(t){return this._nodes[t]||null;}},{key:"getNodeIndex",value:function getNodeIndex(t){var e=this._nodes.indexOf(t);return e==-1?null:e;}},{key:"getNodeStartOffset",value:function getNodeStartOffset(t){var e=this.getNodeIndex(t);return e===null?null:this._nodes.slice(0,e).reduce(function(t,e){return t+e.offsetSize;},0);}},{key:"indexToOffset",value:function indexToOffset(t){if(t==this._nodes.length){return this.maxOffset;}var e=this._nodes[t];if(!e){throw new h("model-nodelist-index-out-of-bounds",this);}return this.getNodeStartOffset(e);}},{key:"offsetToIndex",value:function offsetToIndex(t){var e=0;var _iterator107=_createForOfIteratorHelper(this._nodes),_step107;try{for(_iterator107.s();!(_step107=_iterator107.n()).done;){var _n79=_step107.value;if(t>=e&&t<e+_n79.offsetSize){return this.getNodeIndex(_n79);}e+=_n79.offsetSize;}}catch(err){_iterator107.e(err);}finally{_iterator107.f();}if(e!=t){throw new h("model-nodelist-offset-out-of-bounds",this,{offset:t,nodeList:this});}return this.length;}},{key:"_insertNodes",value:function _insertNodes(t,e){var _this$_nodes;var _iterator108=_createForOfIteratorHelper(e),_step108;try{for(_iterator108.s();!(_step108=_iterator108.n()).done;){var _t81=_step108.value;if(!(_t81 instanceof Ag)){throw new h("model-nodelist-insertnodes-not-node",this);}}}catch(err){_iterator108.e(err);}finally{_iterator108.f();}(_this$_nodes=this._nodes).splice.apply(_this$_nodes,[t,0].concat(_toConsumableArray(e)));}},{key:"_removeNodes",value:function _removeNodes(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return this._nodes.splice(t,e);}},{key:"toJSON",value:function toJSON(){return this._nodes.map(function(t){return t.toJSON();});}}]);return xg;}(Symbol.iterator);var Eg=/*#__PURE__*/function(_Ag2){_inherits(Eg,_Ag2);var _super24=_createSuper(Eg);function Eg(t,e,n){var _this53;_classCallCheck(this,Eg);_this53=_super24.call(this,e);_this53.name=t;_this53._children=new xg();if(n){_this53._insertChild(0,n);}return _this53;}_createClass(Eg,[{key:"childCount",get:function get(){return this._children.length;}},{key:"maxOffset",get:function get(){return this._children.maxOffset;}},{key:"isEmpty",get:function get(){return this.childCount===0;}},{key:"is",value:function is(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!e){return t==="element"||t==="model:element"||t==="node"||t==="model:node";}return e===this.name&&(t==="element"||t==="model:element");}},{key:"getChild",value:function getChild(t){return this._children.getNode(t);}},{key:"getChildren",value:function getChildren(){return this._children[Symbol.iterator]();}},{key:"getChildIndex",value:function getChildIndex(t){return this._children.getNodeIndex(t);}},{key:"getChildStartOffset",value:function getChildStartOffset(t){return this._children.getNodeStartOffset(t);}},{key:"offsetToIndex",value:function offsetToIndex(t){return this._children.offsetToIndex(t);}},{key:"getNodeByPath",value:function getNodeByPath(t){var e=this;var _iterator109=_createForOfIteratorHelper(t),_step109;try{for(_iterator109.s();!(_step109=_iterator109.n()).done;){var _n80=_step109.value;e=e.getChild(e.offsetToIndex(_n80));}}catch(err){_iterator109.e(err);}finally{_iterator109.f();}return e;}},{key:"findAncestor",value:function findAncestor(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{includeSelf:false};var n=e.includeSelf?this:this.parent;while(n){if(n.name===t){return n;}n=n.parent;}return null;}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(Eg.prototype),"toJSON",this).call(this);t.name=this.name;if(this._children.length>0){t.children=[];var _iterator110=_createForOfIteratorHelper(this._children),_step110;try{for(_iterator110.s();!(_step110=_iterator110.n()).done;){var _e85=_step110.value;t.children.push(_e85.toJSON());}}catch(err){_iterator110.e(err);}finally{_iterator110.f();}}return t;}},{key:"_clone",value:function _clone(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var e=t?Array.from(this._children).map(function(t){return t._clone(true);}):null;return new Eg(this.name,this.getAttributes(),e);}},{key:"_appendChild",value:function _appendChild(t){this._insertChild(this.childCount,t);}},{key:"_insertChild",value:function _insertChild(t,e){var n=Dg(e);var _iterator111=_createForOfIteratorHelper(n),_step111;try{for(_iterator111.s();!(_step111=_iterator111.n()).done;){var _t82=_step111.value;if(_t82.parent!==null){_t82._remove();}_t82.parent=this;}}catch(err){_iterator111.e(err);}finally{_iterator111.f();}this._children._insertNodes(t,n);}},{key:"_removeChildren",value:function _removeChildren(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var n=this._children._removeNodes(t,e);var _iterator112=_createForOfIteratorHelper(n),_step112;try{for(_iterator112.s();!(_step112=_iterator112.n()).done;){var _t83=_step112.value;_t83.parent=null;}}catch(err){_iterator112.e(err);}finally{_iterator112.f();}return n;}}],[{key:"fromJSON",value:function fromJSON(t){var e=null;if(t.children){e=[];var _iterator113=_createForOfIteratorHelper(t.children),_step113;try{for(_iterator113.s();!(_step113=_iterator113.n()).done;){var _n81=_step113.value;if(_n81.name){e.push(Eg.fromJSON(_n81));}else{e.push(Cg.fromJSON(_n81));}}}catch(err){_iterator113.e(err);}finally{_iterator113.f();}}return new Eg(t.name,t.attributes,e);}}]);return Eg;}(Ag);function Dg(t){if(typeof t=="string"){return[new Cg(t)];}if(!Ua(t)){t=[t];}return Array.from(t).map(function(t){if(typeof t=="string"){return new Cg(t);}if(t instanceof yg){return new Cg(t.data,t.getAttributes());}return t;});}var Sg=/*#__PURE__*/function(_Symbol$iterator7){function Sg(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Sg);if(!t.boundaries&&!t.startPosition){throw new h("model-tree-walker-no-start-position",null);}var e=t.direction||"forward";if(e!="forward"&&e!="backward"){throw new h("model-tree-walker-unknown-direction",t,{direction:e});}this.direction=e;this.boundaries=t.boundaries||null;if(t.startPosition){this.position=t.startPosition.clone();}else{this.position=Tg._createAt(this.boundaries[this.direction=="backward"?"end":"start"]);}this.position.stickiness="toNone";this.singleCharacters=!!t.singleCharacters;this.shallow=!!t.shallow;this.ignoreElementEnd=!!t.ignoreElementEnd;this._boundaryStartParent=this.boundaries?this.boundaries.start.parent:null;this._boundaryEndParent=this.boundaries?this.boundaries.end.parent:null;this._visitedParent=this.position.parent;}_createClass(Sg,[{key:_Symbol$iterator7,value:function value(){return this;}},{key:"skip",value:function skip(t){var e,n,o,i;do{o=this.position;i=this._visitedParent;var _this$next2=this.next();e=_this$next2.done;n=_this$next2.value;}while(!e&&t(n));if(!e){this.position=o;this._visitedParent=i;}}},{key:"next",value:function next(){if(this.direction=="forward"){return this._next();}else{return this._previous();}}},{key:"_next",value:function _next(){var t=this.position;var e=this.position.clone();var n=this._visitedParent;if(n.parent===null&&e.offset===n.maxOffset){return{done:true};}if(n===this._boundaryEndParent&&e.offset==this.boundaries.end.offset){return{done:true};}var o=Bg(e,n);var i=o?o:Ig(e,n,o);if(i instanceof Eg){if(!this.shallow){e.path.push(0);this._visitedParent=i;}else{e.offset++;}this.position=e;return Pg("elementStart",i,t,e,1);}else if(i instanceof Cg){var _o48;if(this.singleCharacters){_o48=1;}else{var _t84=i.endOffset;if(this._boundaryEndParent==n&&this.boundaries.end.offset<_t84){_t84=this.boundaries.end.offset;}_o48=_t84-e.offset;}var _r20=e.offset-i.startOffset;var _s12=new yg(i,_r20,_o48);e.offset+=_o48;this.position=e;return Pg("text",_s12,t,e,_o48);}else{e.path.pop();e.offset++;this.position=e;this._visitedParent=n.parent;if(this.ignoreElementEnd){return this._next();}else{return Pg("elementEnd",n,t,e);}}}},{key:"_previous",value:function _previous(){var t=this.position;var e=this.position.clone();var n=this._visitedParent;if(n.parent===null&&e.offset===0){return{done:true};}if(n==this._boundaryStartParent&&e.offset==this.boundaries.start.offset){return{done:true};}var o=e.parent;var i=Bg(e,o);var r=i?i:Rg(e,o,i);if(r instanceof Eg){e.offset--;if(!this.shallow){e.path.push(r.maxOffset);this.position=e;this._visitedParent=r;if(this.ignoreElementEnd){return this._previous();}else{return Pg("elementEnd",r,t,e);}}else{this.position=e;return Pg("elementStart",r,t,e,1);}}else if(r instanceof Cg){var _o49;if(this.singleCharacters){_o49=1;}else{var _t85=r.startOffset;if(this._boundaryStartParent==n&&this.boundaries.start.offset>_t85){_t85=this.boundaries.start.offset;}_o49=e.offset-_t85;}var _i42=e.offset-r.startOffset;var _s13=new yg(r,_i42-_o49,_o49);e.offset-=_o49;this.position=e;return Pg("text",_s13,t,e,_o49);}else{e.path.pop();this.position=e;this._visitedParent=n.parent;return Pg("elementStart",n,t,e,1);}}}]);return Sg;}(Symbol.iterator);function Pg(t,e,n,o,i){return{done:false,value:{type:t,item:e,previousPosition:n,nextPosition:o,length:i}};}var Tg=/*#__PURE__*/function(){function Tg(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"toNone";_classCallCheck(this,Tg);if(!t.is("element")&&!t.is("documentFragment")){throw new h("model-position-root-invalid",t);}if(!(e instanceof Array)||e.length===0){throw new h("model-position-path-incorrect-format",t,{path:e});}if(t.is("rootElement")){e=e.slice();}else{e=[].concat(_toConsumableArray(t.getPath()),_toConsumableArray(e));t=t.root;}this.root=t;this.path=e;this.stickiness=n;}_createClass(Tg,[{key:"offset",get:function get(){return this.path[this.path.length-1];},set:function set(t){this.path[this.path.length-1]=t;}},{key:"parent",get:function get(){var t=this.root;for(var _e86=0;_e86<this.path.length-1;_e86++){t=t.getChild(t.offsetToIndex(this.path[_e86]));if(!t){throw new h("model-position-path-incorrect",this,{position:this});}}if(t.is("$text")){throw new h("model-position-path-incorrect",this,{position:this});}return t;}},{key:"index",get:function get(){return this.parent.offsetToIndex(this.offset);}},{key:"textNode",get:function get(){return Bg(this,this.parent);}},{key:"nodeAfter",get:function get(){var t=this.parent;return Ig(this,t,Bg(this,t));}},{key:"nodeBefore",get:function get(){var t=this.parent;return Rg(this,t,Bg(this,t));}},{key:"isAtStart",get:function get(){return this.offset===0;}},{key:"isAtEnd",get:function get(){return this.offset==this.parent.maxOffset;}},{key:"compareWith",value:function compareWith(t){if(this.root!=t.root){return"different";}var e=lc(this.path,t.path);switch(e){case"same":return"same";case"prefix":return"before";case"extension":return"after";default:return this.path[e]<t.path[e]?"before":"after";}}},{key:"getLastMatchingPosition",value:function getLastMatchingPosition(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};e.startPosition=this;var n=new Sg(e);n.skip(t);return n.position;}},{key:"getParentPath",value:function getParentPath(){return this.path.slice(0,-1);}},{key:"getAncestors",value:function getAncestors(){var t=this.parent;if(t.is("documentFragment")){return[t];}else{return t.getAncestors({includeSelf:true});}}},{key:"findAncestor",value:function findAncestor(t){var e=this.parent;if(e.is("element")){return e.findAncestor(t,{includeSelf:true});}return null;}},{key:"getCommonPath",value:function getCommonPath(t){if(this.root!=t.root){return[];}var e=lc(this.path,t.path);var n=typeof e=="string"?Math.min(this.path.length,t.path.length):e;return this.path.slice(0,n);}},{key:"getCommonAncestor",value:function getCommonAncestor(t){var e=this.getAncestors();var n=t.getAncestors();var o=0;while(e[o]==n[o]&&e[o]){o++;}return o===0?null:e[o-1];}},{key:"getShiftedBy",value:function getShiftedBy(t){var e=this.clone();var n=e.offset+t;e.offset=n<0?0:n;return e;}},{key:"isAfter",value:function isAfter(t){return this.compareWith(t)=="after";}},{key:"isBefore",value:function isBefore(t){return this.compareWith(t)=="before";}},{key:"isEqual",value:function isEqual(t){return this.compareWith(t)=="same";}},{key:"isTouching",value:function isTouching(t){var e=null;var n=null;var o=this.compareWith(t);switch(o){case"same":return true;case"before":e=Tg._createAt(this);n=Tg._createAt(t);break;case"after":e=Tg._createAt(t);n=Tg._createAt(this);break;default:return false;}var i=e.parent;while(e.path.length+n.path.length){if(e.isEqual(n)){return true;}if(e.path.length>n.path.length){if(e.offset!==i.maxOffset){return false;}e.path=e.path.slice(0,-1);i=i.parent;e.offset++;}else{if(n.offset!==0){return false;}n.path=n.path.slice(0,-1);}}}},{key:"is",value:function is(t){return t==="position"||t==="model:position";}},{key:"hasSameParentAs",value:function hasSameParentAs(t){if(this.root!==t.root){return false;}var e=this.getParentPath();var n=t.getParentPath();return lc(e,n)=="same";}},{key:"getTransformedByOperation",value:function getTransformedByOperation(t){var e;switch(t.type){case"insert":e=this._getTransformedByInsertOperation(t);break;case"move":case"remove":case"reinsert":e=this._getTransformedByMoveOperation(t);break;case"split":e=this._getTransformedBySplitOperation(t);break;case"merge":e=this._getTransformedByMergeOperation(t);break;default:e=Tg._createAt(this);break;}return e;}},{key:"_getTransformedByInsertOperation",value:function _getTransformedByInsertOperation(t){return this._getTransformedByInsertion(t.position,t.howMany);}},{key:"_getTransformedByMoveOperation",value:function _getTransformedByMoveOperation(t){return this._getTransformedByMove(t.sourcePosition,t.targetPosition,t.howMany);}},{key:"_getTransformedBySplitOperation",value:function _getTransformedBySplitOperation(t){var e=t.movedRange;var n=e.containsPosition(this)||e.start.isEqual(this)&&this.stickiness=="toNext";if(n){return this._getCombined(t.splitPosition,t.moveTargetPosition);}else{if(t.graveyardPosition){return this._getTransformedByMove(t.graveyardPosition,t.insertionPosition,1);}else{return this._getTransformedByInsertion(t.insertionPosition,1);}}}},{key:"_getTransformedByMergeOperation",value:function _getTransformedByMergeOperation(t){var e=t.movedRange;var n=e.containsPosition(this)||e.start.isEqual(this);var o;if(n){o=this._getCombined(t.sourcePosition,t.targetPosition);if(t.sourcePosition.isBefore(t.targetPosition)){o=o._getTransformedByDeletion(t.deletionPosition,1);}}else if(this.isEqual(t.deletionPosition)){o=Tg._createAt(t.deletionPosition);}else{o=this._getTransformedByMove(t.deletionPosition,t.graveyardPosition,1);}return o;}},{key:"_getTransformedByDeletion",value:function _getTransformedByDeletion(t,e){var n=Tg._createAt(this);if(this.root!=t.root){return n;}if(lc(t.getParentPath(),this.getParentPath())=="same"){if(t.offset<this.offset){if(t.offset+e>this.offset){return null;}else{n.offset-=e;}}}else if(lc(t.getParentPath(),this.getParentPath())=="prefix"){var _o50=t.path.length-1;if(t.offset<=this.path[_o50]){if(t.offset+e>this.path[_o50]){return null;}else{n.path[_o50]-=e;}}}return n;}},{key:"_getTransformedByInsertion",value:function _getTransformedByInsertion(t,e){var n=Tg._createAt(this);if(this.root!=t.root){return n;}if(lc(t.getParentPath(),this.getParentPath())=="same"){if(t.offset<this.offset||t.offset==this.offset&&this.stickiness!="toPrevious"){n.offset+=e;}}else if(lc(t.getParentPath(),this.getParentPath())=="prefix"){var _o51=t.path.length-1;if(t.offset<=this.path[_o51]){n.path[_o51]+=e;}}return n;}},{key:"_getTransformedByMove",value:function _getTransformedByMove(t,e,n){e=e._getTransformedByDeletion(t,n);if(t.isEqual(e)){return Tg._createAt(this);}var o=this._getTransformedByDeletion(t,n);var i=o===null||t.isEqual(this)&&this.stickiness=="toNext"||t.getShiftedBy(n).isEqual(this)&&this.stickiness=="toPrevious";if(i){return this._getCombined(t,e);}else{return o._getTransformedByInsertion(e,n);}}},{key:"_getCombined",value:function _getCombined(t,e){var n=t.path.length-1;var o=Tg._createAt(e);o.stickiness=this.stickiness;o.offset=o.offset+this.path[n]-t.offset;o.path=[].concat(_toConsumableArray(o.path),_toConsumableArray(this.path.slice(n+1)));return o;}},{key:"toJSON",value:function toJSON(){return{root:this.root.toJSON(),path:Array.from(this.path),stickiness:this.stickiness};}},{key:"clone",value:function clone(){return new this.constructor(this.root,this.path,this.stickiness);}}],[{key:"_createAt",value:function _createAt(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"toNone";if(t instanceof Tg){return new Tg(t.root,t.path,t.stickiness);}else{var _o52=t;if(e=="end"){e=_o52.maxOffset;}else if(e=="before"){return this._createBefore(_o52,n);}else if(e=="after"){return this._createAfter(_o52,n);}else if(e!==0&&!e){throw new h("model-createpositionat-offset-required",[this,t]);}if(!_o52.is("element")&&!_o52.is("documentFragment")){throw new h("model-position-parent-incorrect",[this,t]);}var _i43=_o52.getPath();_i43.push(e);return new this(_o52.root,_i43,n);}}},{key:"_createAfter",value:function _createAfter(t,e){if(!t.parent){throw new h("model-position-after-root",[this,t],{root:t});}return this._createAt(t.parent,t.endOffset,e);}},{key:"_createBefore",value:function _createBefore(t,e){if(!t.parent){throw new h("model-position-before-root",t,{root:t});}return this._createAt(t.parent,t.startOffset,e);}},{key:"fromJSON",value:function fromJSON(t,e){if(t.root==="$graveyard"){var _n82=new Tg(e.graveyard,t.path);_n82.stickiness=t.stickiness;return _n82;}if(!e.getRoot(t.root)){throw new h("model-position-fromjson-no-root",e,{rootName:t.root});}return new Tg(e.getRoot(t.root),t.path,t.stickiness);}}]);return Tg;}();function Bg(t,e){var n=e.getChild(e.offsetToIndex(t.offset));if(n&&n.is("$text")&&n.startOffset<t.offset){return n;}return null;}function Ig(t,e,n){if(n!==null){return null;}return e.getChild(e.offsetToIndex(t.offset));}function Rg(t,e,n){if(n!==null){return null;}return e.getChild(e.offsetToIndex(t.offset)-1);}var Og=/*#__PURE__*/function(_Symbol$iterator8){function Og(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck(this,Og);this.start=Tg._createAt(t);this.end=e?Tg._createAt(e):Tg._createAt(t);this.start.stickiness=this.isCollapsed?"toNone":"toNext";this.end.stickiness=this.isCollapsed?"toNone":"toPrevious";}_createClass(Og,[{key:_Symbol$iterator8,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:return _context13.delegateYield(new Sg({boundaries:this,ignoreElementEnd:true}),"t0",1);case 1:case"end":return _context13.stop();}}},value,this);})},{key:"isCollapsed",get:function get(){return this.start.isEqual(this.end);}},{key:"isFlat",get:function get(){var t=this.start.getParentPath();var e=this.end.getParentPath();return lc(t,e)=="same";}},{key:"root",get:function get(){return this.start.root;}},{key:"containsPosition",value:function containsPosition(t){return t.isAfter(this.start)&&t.isBefore(this.end);}},{key:"containsRange",value:function containsRange(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(t.isCollapsed){e=false;}var n=this.containsPosition(t.start)||e&&this.start.isEqual(t.start);var o=this.containsPosition(t.end)||e&&this.end.isEqual(t.end);return n&&o;}},{key:"containsItem",value:function containsItem(t){var e=Tg._createBefore(t);return this.containsPosition(e)||this.start.isEqual(e);}},{key:"is",value:function is(t){return t==="range"||t==="model:range";}},{key:"isEqual",value:function isEqual(t){return this.start.isEqual(t.start)&&this.end.isEqual(t.end);}},{key:"isIntersecting",value:function isIntersecting(t){return this.start.isBefore(t.end)&&this.end.isAfter(t.start);}},{key:"getDifference",value:function getDifference(t){var e=[];if(this.isIntersecting(t)){if(this.containsPosition(t.start)){e.push(new Og(this.start,t.start));}if(this.containsPosition(t.end)){e.push(new Og(t.end,this.end));}}else{e.push(new Og(this.start,this.end));}return e;}},{key:"getIntersection",value:function getIntersection(t){if(this.isIntersecting(t)){var _e87=this.start;var _n83=this.end;if(this.containsPosition(t.start)){_e87=t.start;}if(this.containsPosition(t.end)){_n83=t.end;}return new Og(_e87,_n83);}return null;}},{key:"getJoined",value:function getJoined(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var n=this.isIntersecting(t);if(!n){if(this.start.isBefore(t.start)){n=e?this.end.isTouching(t.start):this.end.isEqual(t.start);}else{n=e?t.end.isTouching(this.start):t.end.isEqual(this.start);}}if(!n){return null;}var o=this.start;var i=this.end;if(t.start.isBefore(o)){o=t.start;}if(t.end.isAfter(i)){i=t.end;}return new Og(o,i);}},{key:"getMinimalFlatRanges",value:function getMinimalFlatRanges(){var t=[];var e=this.start.getCommonPath(this.end).length;var n=Tg._createAt(this.start);var o=n.parent;while(n.path.length>e+1){var _e88=o.maxOffset-n.offset;if(_e88!==0){t.push(new Og(n,n.getShiftedBy(_e88)));}n.path=n.path.slice(0,-1);n.offset++;o=o.parent;}while(n.path.length<=this.end.path.length){var _e89=this.end.path[n.path.length-1];var _o53=_e89-n.offset;if(_o53!==0){t.push(new Og(n,n.getShiftedBy(_o53)));}n.offset=_e89;n.path.push(0);}return t;}},{key:"getWalker",value:function getWalker(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};t.boundaries=this;return new Sg(t);}},{key:"getItems",value:/*#__PURE__*/regeneratorRuntime.mark(function getItems(){var t,e,_iterator114,_step114,_t86,_args14=arguments;return regeneratorRuntime.wrap(function getItems$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:t=_args14.length>0&&_args14[0]!==undefined?_args14[0]:{};t.boundaries=this;t.ignoreElementEnd=true;e=new Sg(t);_iterator114=_createForOfIteratorHelper(e);_context14.prev=5;_iterator114.s();case 7:if((_step114=_iterator114.n()).done){_context14.next=13;break;}_t86=_step114.value;_context14.next=11;return _t86.item;case 11:_context14.next=7;break;case 13:_context14.next=18;break;case 15:_context14.prev=15;_context14.t0=_context14["catch"](5);_iterator114.e(_context14.t0);case 18:_context14.prev=18;_iterator114.f();return _context14.finish(18);case 21:case"end":return _context14.stop();}}},getItems,this,[[5,15,18,21]]);})},{key:"getPositions",value:/*#__PURE__*/regeneratorRuntime.mark(function getPositions(){var t,e,_iterator115,_step115,_t87,_args15=arguments;return regeneratorRuntime.wrap(function getPositions$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:t=_args15.length>0&&_args15[0]!==undefined?_args15[0]:{};t.boundaries=this;e=new Sg(t);_context15.next=5;return e.position;case 5:_iterator115=_createForOfIteratorHelper(e);_context15.prev=6;_iterator115.s();case 8:if((_step115=_iterator115.n()).done){_context15.next=14;break;}_t87=_step115.value;_context15.next=12;return _t87.nextPosition;case 12:_context15.next=8;break;case 14:_context15.next=19;break;case 16:_context15.prev=16;_context15.t0=_context15["catch"](6);_iterator115.e(_context15.t0);case 19:_context15.prev=19;_iterator115.f();return _context15.finish(19);case 22:case"end":return _context15.stop();}}},getPositions,this,[[6,16,19,22]]);})},{key:"getTransformedByOperation",value:function getTransformedByOperation(t){switch(t.type){case"insert":return this._getTransformedByInsertOperation(t);case"move":case"remove":case"reinsert":return this._getTransformedByMoveOperation(t);case"split":return[this._getTransformedBySplitOperation(t)];case"merge":return[this._getTransformedByMergeOperation(t)];}return[new Og(this.start,this.end)];}},{key:"getTransformedByOperations",value:function getTransformedByOperations(t){var e=[new Og(this.start,this.end)];var _iterator116=_createForOfIteratorHelper(t),_step116;try{for(_iterator116.s();!(_step116=_iterator116.n()).done;){var _n85=_step116.value;for(var _t90=0;_t90<e.length;_t90++){var _o55=e[_t90].getTransformedByOperation(_n85);e.splice.apply(e,[_t90,1].concat(_toConsumableArray(_o55)));_t90+=_o55.length-1;}}}catch(err){_iterator116.e(err);}finally{_iterator116.f();}for(var _t88=0;_t88<e.length;_t88++){var _n84=e[_t88];for(var _o54=_t88+1;_o54<e.length;_o54++){var _t89=e[_o54];if(_n84.containsRange(_t89)||_t89.containsRange(_n84)||_n84.isEqual(_t89)){e.splice(_o54,1);}}}return e;}},{key:"getCommonAncestor",value:function getCommonAncestor(){return this.start.getCommonAncestor(this.end);}},{key:"getContainedElement",value:function getContainedElement(){if(this.isCollapsed){return null;}var t=this.start.nodeAfter;var e=this.end.nodeBefore;if(t&&t.is("element")&&t===e){return t;}return null;}},{key:"toJSON",value:function toJSON(){return{start:this.start.toJSON(),end:this.end.toJSON()};}},{key:"clone",value:function clone(){return new this.constructor(this.start,this.end);}},{key:"_getTransformedByInsertOperation",value:function _getTransformedByInsertOperation(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return this._getTransformedByInsertion(t.position,t.howMany,e);}},{key:"_getTransformedByMoveOperation",value:function _getTransformedByMoveOperation(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var n=t.sourcePosition;var o=t.howMany;var i=t.targetPosition;return this._getTransformedByMove(n,i,o,e);}},{key:"_getTransformedBySplitOperation",value:function _getTransformedBySplitOperation(t){var e=this.start._getTransformedBySplitOperation(t);var n=this.end._getTransformedBySplitOperation(t);if(this.end.isEqual(t.insertionPosition)){n=this.end.getShiftedBy(1);}if(e.root!=n.root){n=this.end.getShiftedBy(-1);}return new Og(e,n);}},{key:"_getTransformedByMergeOperation",value:function _getTransformedByMergeOperation(t){if(this.start.isEqual(t.targetPosition)&&this.end.isEqual(t.deletionPosition)){return new Og(this.start);}var e=this.start._getTransformedByMergeOperation(t);var n=this.end._getTransformedByMergeOperation(t);if(e.root!=n.root){n=this.end.getShiftedBy(-1);}if(e.isAfter(n)){if(t.sourcePosition.isBefore(t.targetPosition)){e=Tg._createAt(n);e.offset=0;}else{if(!t.deletionPosition.isEqual(e)){n=t.deletionPosition;}e=t.targetPosition;}return new Og(e,n);}return new Og(e,n);}},{key:"_getTransformedByInsertion",value:function _getTransformedByInsertion(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(n&&this.containsPosition(t)){return[new Og(this.start,t),new Og(t.getShiftedBy(e),this.end._getTransformedByInsertion(t,e))];}else{var _n86=new Og(this.start,this.end);_n86.start=_n86.start._getTransformedByInsertion(t,e);_n86.end=_n86.end._getTransformedByInsertion(t,e);return[_n86];}}},{key:"_getTransformedByMove",value:function _getTransformedByMove(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(this.isCollapsed){var _o56=this.start._getTransformedByMove(t,e,n);return[new Og(_o56)];}var i=Og._createFromPositionAndShift(t,n);var r=e._getTransformedByDeletion(t,n);if(this.containsPosition(e)&&!o){if(i.containsPosition(this.start)||i.containsPosition(this.end)){var _o57=this.start._getTransformedByMove(t,e,n);var _i44=this.end._getTransformedByMove(t,e,n);return[new Og(_o57,_i44)];}}var s;var a=this.getDifference(i);var c=null;var l=this.getIntersection(i);if(a.length==1){c=new Og(a[0].start._getTransformedByDeletion(t,n),a[0].end._getTransformedByDeletion(t,n));}else if(a.length==2){c=new Og(this.start,this.end._getTransformedByDeletion(t,n));}if(c){s=c._getTransformedByInsertion(r,n,l!==null||o);}else{s=[];}if(l){var _t91=new Og(l.start._getCombined(i.start,r),l.end._getCombined(i.start,r));if(s.length==2){s.splice(1,0,_t91);}else{s.push(_t91);}}return s;}},{key:"_getTransformedByDeletion",value:function _getTransformedByDeletion(t,e){var n=this.start._getTransformedByDeletion(t,e);var o=this.end._getTransformedByDeletion(t,e);if(n==null&&o==null){return null;}if(n==null){n=t;}if(o==null){o=t;}return new Og(n,o);}}],[{key:"_createFromPositionAndShift",value:function _createFromPositionAndShift(t,e){var n=t;var o=t.getShiftedBy(e);return e>0?new this(n,o):new this(o,n);}},{key:"_createIn",value:function _createIn(t){return new this(Tg._createAt(t,0),Tg._createAt(t,t.maxOffset));}},{key:"_createOn",value:function _createOn(t){return this._createFromPositionAndShift(Tg._createBefore(t),t.offsetSize);}},{key:"_createFromRanges",value:function _createFromRanges(t){if(t.length===0){throw new h("range-create-from-ranges-empty-array",null);}else if(t.length==1){return t[0].clone();}var e=t[0];t.sort(function(t,e){return t.start.isAfter(e.start)?1:-1;});var n=t.indexOf(e);var o=new this(e.start,e.end);if(n>0){for(var _e90=n-1;true;_e90++){if(t[_e90].end.isEqual(o.start)){o.start=Tg._createAt(t[_e90].start);}else{break;}}}for(var _e91=n+1;_e91<t.length;_e91++){if(t[_e91].start.isEqual(o.end)){o.end=Tg._createAt(t[_e91].end);}else{break;}}return o;}},{key:"fromJSON",value:function fromJSON(t,e){return new this(Tg.fromJSON(t.start,e),Tg.fromJSON(t.end,e));}}]);return Og;}(Symbol.iterator);var zg=/*#__PURE__*/function(){function zg(){var _this54=this;_classCallCheck(this,zg);this._modelToViewMapping=new WeakMap();this._viewToModelMapping=new WeakMap();this._viewToModelLengthCallbacks=new Map();this._markerNameToElements=new Map();this._elementToMarkerNames=new Map();this._deferredBindingRemovals=new Map();this._unboundMarkerNames=new Set();this.on("modelToViewPosition",function(t,e){if(e.viewPosition){return;}var n=_this54._modelToViewMapping.get(e.modelPosition.parent);if(!n){throw new h("mapping-model-position-view-parent-not-found",_this54,{modelPosition:e.modelPosition});}e.viewPosition=_this54.findPositionIn(n,e.modelPosition.offset);},{priority:"low"});this.on("viewToModelPosition",function(t,e){if(e.modelPosition){return;}var n=_this54.findMappedViewAncestor(e.viewPosition);var o=_this54._viewToModelMapping.get(n);var i=_this54._toModelOffset(e.viewPosition.parent,e.viewPosition.offset,n);e.modelPosition=Tg._createAt(o,i);},{priority:"low"});}_createClass(zg,[{key:"bindElements",value:function bindElements(t,e){this._modelToViewMapping.set(t,e);this._viewToModelMapping.set(e,t);}},{key:"unbindViewElement",value:function unbindViewElement(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.toModelElement(t);if(this._elementToMarkerNames.has(t)){var _iterator117=_createForOfIteratorHelper(this._elementToMarkerNames.get(t)),_step117;try{for(_iterator117.s();!(_step117=_iterator117.n()).done;){var _e92=_step117.value;this._unboundMarkerNames.add(_e92);}}catch(err){_iterator117.e(err);}finally{_iterator117.f();}}if(e.defer){this._deferredBindingRemovals.set(t,t.root);}else{this._viewToModelMapping.delete(t);if(this._modelToViewMapping.get(n)==t){this._modelToViewMapping.delete(n);}}}},{key:"unbindModelElement",value:function unbindModelElement(t){var e=this.toViewElement(t);this._modelToViewMapping.delete(t);if(this._viewToModelMapping.get(e)==t){this._viewToModelMapping.delete(e);}}},{key:"bindElementToMarker",value:function bindElementToMarker(t,e){var n=this._markerNameToElements.get(e)||new Set();n.add(t);var o=this._elementToMarkerNames.get(t)||new Set();o.add(e);this._markerNameToElements.set(e,n);this._elementToMarkerNames.set(t,o);}},{key:"unbindElementFromMarkerName",value:function unbindElementFromMarkerName(t,e){var n=this._markerNameToElements.get(e);if(n){n.delete(t);if(n.size==0){this._markerNameToElements.delete(e);}}var o=this._elementToMarkerNames.get(t);if(o){o.delete(e);if(o.size==0){this._elementToMarkerNames.delete(t);}}}},{key:"flushUnboundMarkerNames",value:function flushUnboundMarkerNames(){var t=Array.from(this._unboundMarkerNames);this._unboundMarkerNames.clear();return t;}},{key:"flushDeferredBindings",value:function flushDeferredBindings(){var _iterator118=_createForOfIteratorHelper(this._deferredBindingRemovals),_step118;try{for(_iterator118.s();!(_step118=_iterator118.n()).done;){var _step118$value=_slicedToArray(_step118.value,2),_t92=_step118$value[0],_e93=_step118$value[1];if(_t92.root==_e93){this.unbindViewElement(_t92);}}}catch(err){_iterator118.e(err);}finally{_iterator118.f();}this._deferredBindingRemovals=new Map();}},{key:"clearBindings",value:function clearBindings(){this._modelToViewMapping=new WeakMap();this._viewToModelMapping=new WeakMap();this._markerNameToElements=new Map();this._elementToMarkerNames=new Map();this._unboundMarkerNames=new Set();this._deferredBindingRemovals=new Map();}},{key:"toModelElement",value:function toModelElement(t){return this._viewToModelMapping.get(t);}},{key:"toViewElement",value:function toViewElement(t){return this._modelToViewMapping.get(t);}},{key:"toModelRange",value:function toModelRange(t){return new Og(this.toModelPosition(t.start),this.toModelPosition(t.end));}},{key:"toViewRange",value:function toViewRange(t){return new od(this.toViewPosition(t.start),this.toViewPosition(t.end));}},{key:"toModelPosition",value:function toModelPosition(t){var e={viewPosition:t,mapper:this};this.fire("viewToModelPosition",e);return e.modelPosition;}},{key:"toViewPosition",value:function toViewPosition(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{isPhantom:false};var n={modelPosition:t,mapper:this,isPhantom:e.isPhantom};this.fire("modelToViewPosition",n);return n.viewPosition;}},{key:"markerNameToElements",value:function markerNameToElements(t){var e=this._markerNameToElements.get(t);if(!e){return null;}var n=new Set();var _iterator119=_createForOfIteratorHelper(e),_step119;try{for(_iterator119.s();!(_step119=_iterator119.n()).done;){var _t93=_step119.value;if(_t93.is("attributeElement")){var _iterator120=_createForOfIteratorHelper(_t93.getElementsWithSameId()),_step120;try{for(_iterator120.s();!(_step120=_iterator120.n()).done;){var _e94=_step120.value;n.add(_e94);}}catch(err){_iterator120.e(err);}finally{_iterator120.f();}}else{n.add(_t93);}}}catch(err){_iterator119.e(err);}finally{_iterator119.f();}return n;}},{key:"registerViewToModelLength",value:function registerViewToModelLength(t,e){this._viewToModelLengthCallbacks.set(t,e);}},{key:"findMappedViewAncestor",value:function findMappedViewAncestor(t){var e=t.parent;while(!this._viewToModelMapping.has(e)){e=e.parent;}return e;}},{key:"_toModelOffset",value:function _toModelOffset(t,e,n){if(n!=t){var _o58=this._toModelOffset(t.parent,t.index,n);var _i45=this._toModelOffset(t,e,t);return _o58+_i45;}if(t.is("$text")){return e;}var o=0;for(var _n87=0;_n87<e;_n87++){o+=this.getModelLength(t.getChild(_n87));}return o;}},{key:"getModelLength",value:function getModelLength(t){if(this._viewToModelLengthCallbacks.get(t.name)){var _e95=this._viewToModelLengthCallbacks.get(t.name);return _e95(t);}else if(this._viewToModelMapping.has(t)){return 1;}else if(t.is("$text")){return t.data.length;}else if(t.is("uiElement")){return 0;}else{var _e96=0;var _iterator121=_createForOfIteratorHelper(t.getChildren()),_step121;try{for(_iterator121.s();!(_step121=_iterator121.n()).done;){var _n88=_step121.value;_e96+=this.getModelLength(_n88);}}catch(err){_iterator121.e(err);}finally{_iterator121.f();}return _e96;}}},{key:"findPositionIn",value:function findPositionIn(t,e){var n;var o=0;var i=0;var r=0;if(t.is("$text")){return new nd(t,e);}while(i<e){n=t.getChild(r);o=this.getModelLength(n);i+=o;r++;}if(i==e){return this._moveViewPositionToTextNode(new nd(t,r));}else{return this.findPositionIn(n,e-(i-o));}}},{key:"_moveViewPositionToTextNode",value:function _moveViewPositionToTextNode(t){var e=t.nodeBefore;var n=t.nodeAfter;if(e instanceof gc){return new nd(e,e.data.length);}else if(n instanceof gc){return new nd(n,0);}return t;}}]);return zg;}();fo(zg,C);var Mg=/*#__PURE__*/function(){function Mg(){_classCallCheck(this,Mg);this._consumable=new Map();this._textProxyRegistry=new Map();}_createClass(Mg,[{key:"add",value:function add(t,e){e=Ng(e);if(t instanceof yg){t=this._getSymbolForTextProxy(t);}if(!this._consumable.has(t)){this._consumable.set(t,new Map());}this._consumable.get(t).set(e,true);}},{key:"consume",value:function consume(t,e){e=Ng(e);if(t instanceof yg){t=this._getSymbolForTextProxy(t);}if(this.test(t,e)){this._consumable.get(t).set(e,false);return true;}else{return false;}}},{key:"test",value:function test(t,e){e=Ng(e);if(t instanceof yg){t=this._getSymbolForTextProxy(t);}var n=this._consumable.get(t);if(n===undefined){return null;}var o=n.get(e);if(o===undefined){return null;}return o;}},{key:"revert",value:function revert(t,e){e=Ng(e);if(t instanceof yg){t=this._getSymbolForTextProxy(t);}var n=this.test(t,e);if(n===false){this._consumable.get(t).set(e,true);return true;}else if(n===true){return false;}return null;}},{key:"verifyAllConsumed",value:function verifyAllConsumed(t){var e=[];var _iterator122=_createForOfIteratorHelper(this._consumable),_step122;try{for(_iterator122.s();!(_step122=_iterator122.n()).done;){var _step122$value=_slicedToArray(_step122.value,2),_n89=_step122$value[0],_o59=_step122$value[1];var _iterator123=_createForOfIteratorHelper(_o59),_step123;try{for(_iterator123.s();!(_step123=_iterator123.n()).done;){var _step123$value=_slicedToArray(_step123.value,2),_i46=_step123$value[0],_r21=_step123$value[1];var _o60=_i46.split(":")[0];if(_r21&&t==_o60){e.push({event:_i46,item:_n89.name||_n89.description});}}}catch(err){_iterator123.e(err);}finally{_iterator123.f();}}}catch(err){_iterator122.e(err);}finally{_iterator122.f();}if(e.length){throw new h("conversion-model-consumable-not-consumed",null,{items:e});}}},{key:"_getSymbolForTextProxy",value:function _getSymbolForTextProxy(t){var e=null;var n=this._textProxyRegistry.get(t.startOffset);if(n){var _o61=n.get(t.endOffset);if(_o61){e=_o61.get(t.parent);}}if(!e){e=this._addSymbolForTextProxy(t);}return e;}},{key:"_addSymbolForTextProxy",value:function _addSymbolForTextProxy(t){var e=t.startOffset;var n=t.endOffset;var o=t.parent;var i=Symbol("$textProxy:"+t.data);var r,s;r=this._textProxyRegistry.get(e);if(!r){r=new Map();this._textProxyRegistry.set(e,r);}s=r.get(n);if(!s){s=new Map();r.set(n,s);}s.set(o,i);return i;}}]);return Mg;}();function Ng(t){var e=t.split(":");if(e[0]=="insert"){return e[0];}if(e[0]=="addMarker"||e[0]=="removeMarker"){return t;}return e.length>1?e[0]+":"+e[1]:e[0];}var Fg=/*#__PURE__*/function(){function Fg(t){_classCallCheck(this,Fg);this._conversionApi=_objectSpread({dispatcher:this},t);this._firedEventsMap=new WeakMap();}_createClass(Fg,[{key:"convertChanges",value:function convertChanges(t,e,n){var o=this._createConversionApi(n,t.getRefreshedItems());var _iterator124=_createForOfIteratorHelper(t.getMarkersToRemove()),_step124;try{for(_iterator124.s();!(_step124=_iterator124.n()).done;){var _e97=_step124.value;this._convertMarkerRemove(_e97.name,_e97.range,o);}}catch(err){_iterator124.e(err);}finally{_iterator124.f();}var i=this._reduceChanges(t.getChanges());var _iterator125=_createForOfIteratorHelper(i),_step125;try{for(_iterator125.s();!(_step125=_iterator125.n()).done;){var _t94=_step125.value;if(_t94.type==="insert"){this._convertInsert(Og._createFromPositionAndShift(_t94.position,_t94.length),o);}else if(_t94.type==="reinsert"){this._convertReinsert(Og._createFromPositionAndShift(_t94.position,_t94.length),o);}else if(_t94.type==="remove"){this._convertRemove(_t94.position,_t94.length,_t94.name,o);}else{this._convertAttribute(_t94.range,_t94.attributeKey,_t94.attributeOldValue,_t94.attributeNewValue,o);}}}catch(err){_iterator125.e(err);}finally{_iterator125.f();}var _iterator126=_createForOfIteratorHelper(o.mapper.flushUnboundMarkerNames()),_step126;try{for(_iterator126.s();!(_step126=_iterator126.n()).done;){var _t95=_step126.value;var _n90=e.get(_t95).getRange();this._convertMarkerRemove(_t95,_n90,o);this._convertMarkerAdd(_t95,_n90,o);}}catch(err){_iterator126.e(err);}finally{_iterator126.f();}var _iterator127=_createForOfIteratorHelper(t.getMarkersToAdd()),_step127;try{for(_iterator127.s();!(_step127=_iterator127.n()).done;){var _e98=_step127.value;this._convertMarkerAdd(_e98.name,_e98.range,o);}}catch(err){_iterator127.e(err);}finally{_iterator127.f();}o.mapper.flushDeferredBindings();o.consumable.verifyAllConsumed("insert");}},{key:"convert",value:function convert(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var i=this._createConversionApi(n,undefined,o);this._convertInsert(t,i);var _iterator128=_createForOfIteratorHelper(e),_step128;try{for(_iterator128.s();!(_step128=_iterator128.n()).done;){var _step128$value=_slicedToArray(_step128.value,2),_t96=_step128$value[0],_n91=_step128$value[1];this._convertMarkerAdd(_t96,_n91,i);}}catch(err){_iterator128.e(err);}finally{_iterator128.f();}i.consumable.verifyAllConsumed("insert");}},{key:"convertSelection",value:function convertSelection(t,e,n){var o=Array.from(e.getMarkersAtPosition(t.getFirstPosition()));var i=this._createConversionApi(n);this._addConsumablesForSelection(i.consumable,t,o);this.fire("selection",{selection:t},i);if(!t.isCollapsed){return;}for(var _i47=0,_o62=o;_i47<_o62.length;_i47++){var _e99=_o62[_i47];var _n92=_e99.getRange();if(!Vg(t.getFirstPosition(),_e99,i.mapper)){continue;}var _o63={item:t,markerName:_e99.name,markerRange:_n92};if(i.consumable.test(t,"addMarker:"+_e99.name)){this.fire("addMarker:"+_e99.name,_o63,i);}}var _iterator129=_createForOfIteratorHelper(t.getAttributeKeys()),_step129;try{for(_iterator129.s();!(_step129=_iterator129.n()).done;){var _e100=_step129.value;var _n93={item:t,range:t.getFirstRange(),attributeKey:_e100,attributeOldValue:null,attributeNewValue:t.getAttribute(_e100)};if(i.consumable.test(t,"attribute:"+_n93.attributeKey)){this.fire("attribute:"+_n93.attributeKey+":$text",_n93,i);}}}catch(err){_iterator129.e(err);}finally{_iterator129.f();}}},{key:"_convertInsert",value:function _convertInsert(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!n.doNotAddConsumables){this._addConsumablesForInsert(e.consumable,Array.from(t));}var _iterator130=_createForOfIteratorHelper(Array.from(t.getWalker({shallow:true})).map(Hg)),_step130;try{for(_iterator130.s();!(_step130=_iterator130.n()).done;){var _n94=_step130.value;this._testAndFire("insert",_n94,e);}}catch(err){_iterator130.e(err);}finally{_iterator130.f();}}},{key:"_convertRemove",value:function _convertRemove(t,e,n,o){this.fire("remove:"+n,{position:t,length:e},o);}},{key:"_convertAttribute",value:function _convertAttribute(t,e,n,o,i){this._addConsumablesForRange(i.consumable,t,"attribute:".concat(e));var _iterator131=_createForOfIteratorHelper(t),_step131;try{for(_iterator131.s();!(_step131=_iterator131.n()).done;){var _r22=_step131.value;var _t97={item:_r22.item,range:Og._createFromPositionAndShift(_r22.previousPosition,_r22.length),attributeKey:e,attributeOldValue:n,attributeNewValue:o};this._testAndFire("attribute:".concat(e),_t97,i);}}catch(err){_iterator131.e(err);}finally{_iterator131.f();}}},{key:"_convertReinsert",value:function _convertReinsert(t,e){var n=Array.from(t.getWalker({shallow:true}));this._addConsumablesForInsert(e.consumable,n);var _iterator132=_createForOfIteratorHelper(n.map(Hg)),_step132;try{for(_iterator132.s();!(_step132=_iterator132.n()).done;){var _t98=_step132.value;this._testAndFire("insert",_objectSpread(_objectSpread({},_t98),{},{reconversion:true}),e);}}catch(err){_iterator132.e(err);}finally{_iterator132.f();}}},{key:"_convertMarkerAdd",value:function _convertMarkerAdd(t,e,n){if(e.root.rootName=="$graveyard"){return;}var o="addMarker:"+t;n.consumable.add(e,o);this.fire(o,{markerName:t,markerRange:e},n);if(!n.consumable.consume(e,o)){return;}this._addConsumablesForRange(n.consumable,e,o);var _iterator133=_createForOfIteratorHelper(e.getItems()),_step133;try{for(_iterator133.s();!(_step133=_iterator133.n()).done;){var _i48=_step133.value;if(!n.consumable.test(_i48,o)){continue;}var _r23={item:_i48,range:Og._createOn(_i48),markerName:t,markerRange:e};this.fire(o,_r23,n);}}catch(err){_iterator133.e(err);}finally{_iterator133.f();}}},{key:"_convertMarkerRemove",value:function _convertMarkerRemove(t,e,n){if(e.root.rootName=="$graveyard"){return;}this.fire("removeMarker:"+t,{markerName:t,markerRange:e},n);}},{key:"_reduceChanges",value:function _reduceChanges(t){var e={changes:t};this.fire("reduceChanges",e);return e.changes;}},{key:"_addConsumablesForInsert",value:function _addConsumablesForInsert(t,e){var _iterator134=_createForOfIteratorHelper(e),_step134;try{for(_iterator134.s();!(_step134=_iterator134.n()).done;){var _n95=_step134.value;var _e101=_n95.item;if(t.test(_e101,"insert")===null){t.add(_e101,"insert");var _iterator135=_createForOfIteratorHelper(_e101.getAttributeKeys()),_step135;try{for(_iterator135.s();!(_step135=_iterator135.n()).done;){var _n96=_step135.value;t.add(_e101,"attribute:"+_n96);}}catch(err){_iterator135.e(err);}finally{_iterator135.f();}}}}catch(err){_iterator134.e(err);}finally{_iterator134.f();}return t;}},{key:"_addConsumablesForRange",value:function _addConsumablesForRange(t,e,n){var _iterator136=_createForOfIteratorHelper(e.getItems()),_step136;try{for(_iterator136.s();!(_step136=_iterator136.n()).done;){var _o64=_step136.value;t.add(_o64,n);}}catch(err){_iterator136.e(err);}finally{_iterator136.f();}return t;}},{key:"_addConsumablesForSelection",value:function _addConsumablesForSelection(t,e,n){t.add(e,"selection");var _iterator137=_createForOfIteratorHelper(n),_step137;try{for(_iterator137.s();!(_step137=_iterator137.n()).done;){var _o65=_step137.value;t.add(e,"addMarker:"+_o65.name);}}catch(err){_iterator137.e(err);}finally{_iterator137.f();}var _iterator138=_createForOfIteratorHelper(e.getAttributeKeys()),_step138;try{for(_iterator138.s();!(_step138=_iterator138.n()).done;){var _n97=_step138.value;t.add(e,"attribute:"+_n97);}}catch(err){_iterator138.e(err);}finally{_iterator138.f();}return t;}},{key:"_testAndFire",value:function _testAndFire(t,e,n){var o=Lg(t,e);var i=e.item.is("$textProxy")?n.consumable._getSymbolForTextProxy(e.item):e.item;var r=this._firedEventsMap.get(n);var s=r.get(i);if(!s){r.set(i,new Set([o]));}else if(!s.has(o)){s.add(o);}else{return;}this.fire(o,e,n);}},{key:"_testAndFireAddAttributes",value:function _testAndFireAddAttributes(t,e){var n={item:t,range:Og._createOn(t)};var _iterator139=_createForOfIteratorHelper(n.item.getAttributeKeys()),_step139;try{for(_iterator139.s();!(_step139=_iterator139.n()).done;){var _t99=_step139.value;n.attributeKey=_t99;n.attributeOldValue=null;n.attributeNewValue=n.item.getAttribute(_t99);this._testAndFire("attribute:".concat(_t99),n,e);}}catch(err){_iterator139.e(err);}finally{_iterator139.f();}}},{key:"_createConversionApi",value:function _createConversionApi(t){var _this55=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=_objectSpread(_objectSpread({},this._conversionApi),{},{consumable:new Mg(),writer:t,options:n,convertItem:function convertItem(t){return _this55._convertInsert(Og._createOn(t),o);},convertChildren:function convertChildren(t){return _this55._convertInsert(Og._createIn(t),o,{doNotAddConsumables:true});},convertAttributes:function convertAttributes(t){return _this55._testAndFireAddAttributes(t,o);},canReuseView:function canReuseView(t){return!e.has(o.mapper.toModelElement(t));}});this._firedEventsMap.set(o,new Map());return o;}}]);return Fg;}();fo(Fg,C);function Vg(t,e,n){var o=e.getRange();var i=Array.from(t.getAncestors());i.shift();i.reverse();var r=i.some(function(t){if(o.containsItem(t)){var _e102=n.toViewElement(t);return!!_e102.getCustomProperty("addHighlight");}});return!r;}function Lg(t,e){var n=e.item.name||"$text";return"".concat(t,":").concat(n);}function Hg(t){var e=t.item;var n=Og._createFromPositionAndShift(t.previousPosition,t.length);return{item:e,range:n};}var jg=/*#__PURE__*/function(){function jg(t,e,n){_classCallCheck(this,jg);this._lastRangeBackward=false;this._ranges=[];this._attrs=new Map();if(t){this.setTo(t,e,n);}}_createClass(jg,[{key:"anchor",get:function get(){if(this._ranges.length>0){var _t100=this._ranges[this._ranges.length-1];return this._lastRangeBackward?_t100.end:_t100.start;}return null;}},{key:"focus",get:function get(){if(this._ranges.length>0){var _t101=this._ranges[this._ranges.length-1];return this._lastRangeBackward?_t101.start:_t101.end;}return null;}},{key:"isCollapsed",get:function get(){var t=this._ranges.length;if(t===1){return this._ranges[0].isCollapsed;}else{return false;}}},{key:"rangeCount",get:function get(){return this._ranges.length;}},{key:"isBackward",get:function get(){return!this.isCollapsed&&this._lastRangeBackward;}},{key:"isEqual",value:function isEqual(t){if(this.rangeCount!=t.rangeCount){return false;}else if(this.rangeCount===0){return true;}if(!this.anchor.isEqual(t.anchor)||!this.focus.isEqual(t.focus)){return false;}var _iterator140=_createForOfIteratorHelper(this._ranges),_step140;try{for(_iterator140.s();!(_step140=_iterator140.n()).done;){var _e103=_step140.value;var _n98=false;var _iterator141=_createForOfIteratorHelper(t._ranges),_step141;try{for(_iterator141.s();!(_step141=_iterator141.n()).done;){var _o66=_step141.value;if(_e103.isEqual(_o66)){_n98=true;break;}}}catch(err){_iterator141.e(err);}finally{_iterator141.f();}if(!_n98){return false;}}}catch(err){_iterator140.e(err);}finally{_iterator140.f();}return true;}},{key:"getRanges",value:/*#__PURE__*/regeneratorRuntime.mark(function getRanges(){var _iterator142,_step142,_t102;return regeneratorRuntime.wrap(function getRanges$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:_iterator142=_createForOfIteratorHelper(this._ranges);_context16.prev=1;_iterator142.s();case 3:if((_step142=_iterator142.n()).done){_context16.next=9;break;}_t102=_step142.value;_context16.next=7;return new Og(_t102.start,_t102.end);case 7:_context16.next=3;break;case 9:_context16.next=14;break;case 11:_context16.prev=11;_context16.t0=_context16["catch"](1);_iterator142.e(_context16.t0);case 14:_context16.prev=14;_iterator142.f();return _context16.finish(14);case 17:case"end":return _context16.stop();}}},getRanges,this,[[1,11,14,17]]);})},{key:"getFirstRange",value:function getFirstRange(){var t=null;var _iterator143=_createForOfIteratorHelper(this._ranges),_step143;try{for(_iterator143.s();!(_step143=_iterator143.n()).done;){var _e104=_step143.value;if(!t||_e104.start.isBefore(t.start)){t=_e104;}}}catch(err){_iterator143.e(err);}finally{_iterator143.f();}return t?new Og(t.start,t.end):null;}},{key:"getLastRange",value:function getLastRange(){var t=null;var _iterator144=_createForOfIteratorHelper(this._ranges),_step144;try{for(_iterator144.s();!(_step144=_iterator144.n()).done;){var _e105=_step144.value;if(!t||_e105.end.isAfter(t.end)){t=_e105;}}}catch(err){_iterator144.e(err);}finally{_iterator144.f();}return t?new Og(t.start,t.end):null;}},{key:"getFirstPosition",value:function getFirstPosition(){var t=this.getFirstRange();return t?t.start.clone():null;}},{key:"getLastPosition",value:function getLastPosition(){var t=this.getLastRange();return t?t.end.clone():null;}},{key:"setTo",value:function setTo(t,e,n){if(t===null){this._setRanges([]);}else if(t instanceof jg){this._setRanges(t.getRanges(),t.isBackward);}else if(t&&typeof t.getRanges=="function"){this._setRanges(t.getRanges(),t.isBackward);}else if(t instanceof Og){this._setRanges([t],!!e&&!!e.backward);}else if(t instanceof Tg){this._setRanges([new Og(t)]);}else if(t instanceof Ag){var _o67=!!n&&!!n.backward;var _i49;if(e=="in"){_i49=Og._createIn(t);}else if(e=="on"){_i49=Og._createOn(t);}else if(e!==undefined){_i49=new Og(Tg._createAt(t,e));}else{throw new h("model-selection-setto-required-second-parameter",[this,t]);}this._setRanges([_i49],_o67);}else if(Ua(t)){this._setRanges(t,e&&!!e.backward);}else{throw new h("model-selection-setto-not-selectable",[this,t]);}}},{key:"_setRanges",value:function _setRanges(t){var _this56=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;t=Array.from(t);var n=t.some(function(e){if(!(e instanceof Og)){throw new h("model-selection-set-ranges-not-range",[_this56,t]);}return _this56._ranges.every(function(t){return!t.isEqual(e);});});if(t.length===this._ranges.length&&!n){return;}this._removeAllRanges();var _iterator145=_createForOfIteratorHelper(t),_step145;try{for(_iterator145.s();!(_step145=_iterator145.n()).done;){var _e106=_step145.value;this._pushRange(_e106);}}catch(err){_iterator145.e(err);}finally{_iterator145.f();}this._lastRangeBackward=!!e;this.fire("change:range",{directChange:true});}},{key:"setFocus",value:function setFocus(t,e){if(this.anchor===null){throw new h("model-selection-setfocus-no-ranges",[this,t]);}var n=Tg._createAt(t,e);if(n.compareWith(this.focus)=="same"){return;}var o=this.anchor;if(this._ranges.length){this._popRange();}if(n.compareWith(o)=="before"){this._pushRange(new Og(n,o));this._lastRangeBackward=true;}else{this._pushRange(new Og(o,n));this._lastRangeBackward=false;}this.fire("change:range",{directChange:true});}},{key:"getAttribute",value:function getAttribute(t){return this._attrs.get(t);}},{key:"getAttributes",value:function getAttributes(){return this._attrs.entries();}},{key:"getAttributeKeys",value:function getAttributeKeys(){return this._attrs.keys();}},{key:"hasAttribute",value:function hasAttribute(t){return this._attrs.has(t);}},{key:"removeAttribute",value:function removeAttribute(t){if(this.hasAttribute(t)){this._attrs.delete(t);this.fire("change:attribute",{attributeKeys:[t],directChange:true});}}},{key:"setAttribute",value:function setAttribute(t,e){if(this.getAttribute(t)!==e){this._attrs.set(t,e);this.fire("change:attribute",{attributeKeys:[t],directChange:true});}}},{key:"getSelectedElement",value:function getSelectedElement(){if(this.rangeCount!==1){return null;}return this.getFirstRange().getContainedElement();}},{key:"is",value:function is(t){return t==="selection"||t==="model:selection";}},{key:"getSelectedBlocks",value:/*#__PURE__*/regeneratorRuntime.mark(function getSelectedBlocks(){var t,_iterator146,_step146,_e107,_n99,_iterator147,_step147,_n100,_o69,_o68;return regeneratorRuntime.wrap(function getSelectedBlocks$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:t=new WeakSet();_iterator146=_createForOfIteratorHelper(this.getRanges());_context17.prev=2;_iterator146.s();case 4:if((_step146=_iterator146.n()).done){_context17.next=35;break;}_e107=_step146.value;_n99=Kg(_e107.start,t);if(!(_n99&&Gg(_n99,_e107))){_context17.next=10;break;}_context17.next=10;return _n99;case 10:_iterator147=_createForOfIteratorHelper(_e107.getWalker());_context17.prev=11;_iterator147.s();case 13:if((_step147=_iterator147.n()).done){_context17.next=21;break;}_n100=_step147.value;_o69=_n100.item;if(!(_n100.type=="elementEnd"&&Wg(_o69,t,_e107))){_context17.next=19;break;}_context17.next=19;return _o69;case 19:_context17.next=13;break;case 21:_context17.next=26;break;case 23:_context17.prev=23;_context17.t0=_context17["catch"](11);_iterator147.e(_context17.t0);case 26:_context17.prev=26;_iterator147.f();return _context17.finish(26);case 29:_o68=Kg(_e107.end,t);if(!(_o68&&!_e107.end.isTouching(Tg._createAt(_o68,0))&&Gg(_o68,_e107))){_context17.next=33;break;}_context17.next=33;return _o68;case 33:_context17.next=4;break;case 35:_context17.next=40;break;case 37:_context17.prev=37;_context17.t1=_context17["catch"](2);_iterator146.e(_context17.t1);case 40:_context17.prev=40;_iterator146.f();return _context17.finish(40);case 43:case"end":return _context17.stop();}}},getSelectedBlocks,this,[[2,37,40,43],[11,23,26,29]]);})},{key:"containsEntireContent",value:function containsEntireContent(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.anchor.root;var e=Tg._createAt(t,0);var n=Tg._createAt(t,"end");return e.isTouching(this.getFirstPosition())&&n.isTouching(this.getLastPosition());}},{key:"_pushRange",value:function _pushRange(t){this._checkRange(t);this._ranges.push(new Og(t.start,t.end));}},{key:"_checkRange",value:function _checkRange(t){for(var _e108=0;_e108<this._ranges.length;_e108++){if(t.isIntersecting(this._ranges[_e108])){throw new h("model-selection-range-intersects",[this,t],{addedRange:t,intersectingRange:this._ranges[_e108]});}}}},{key:"_removeAllRanges",value:function _removeAllRanges(){while(this._ranges.length>0){this._popRange();}}},{key:"_popRange",value:function _popRange(){this._ranges.pop();}}]);return jg;}();fo(jg,C);function qg(t,e){if(e.has(t)){return false;}e.add(t);return t.root.document.model.schema.isBlock(t)&&t.parent;}function Wg(t,e,n){return qg(t,e)&&Gg(t,n);}function Kg(t,e){var n=t.parent;var o=n.root.document.model.schema;var i=t.parent.getAncestors({parentFirst:true,includeSelf:true});var r=false;var s=i.find(function(t){if(r){return false;}r=o.isLimit(t);return!r&&qg(t,e);});i.forEach(function(t){return e.add(t);});return s;}function Gg(t,e){var n=$g(t);if(!n){return true;}var o=e.containsRange(Og._createOn(n),true);return!o;}function $g(t){var e=t.root.document.model.schema;var n=t.parent;while(n){if(e.isBlock(n)){return n;}n=n.parent;}}var Ug=/*#__PURE__*/function(_Og){_inherits(Ug,_Og);var _super25=_createSuper(Ug);function Ug(t,e){var _this57;_classCallCheck(this,Ug);_this57=_super25.call(this,t,e);Jg.call(_assertThisInitialized(_this57));return _this57;}_createClass(Ug,[{key:"detach",value:function detach(){this.stopListening();}},{key:"is",value:function is(t){return t==="liveRange"||t==="model:liveRange"||t=="range"||t==="model:range";}},{key:"toRange",value:function toRange(){return new Og(this.start,this.end);}}],[{key:"fromRange",value:function fromRange(t){return new Ug(t.start,t.end);}}]);return Ug;}(Og);function Jg(){var _this58=this;this.listenTo(this.root.document.model,"applyOperation",function(t,e){var n=e[0];if(!n.isDocumentOperation){return;}Zg.call(_this58,n);},{priority:"low"});}function Zg(t){var e=this.getTransformedByOperation(t);var n=Og._createFromRanges(e);var o=!n.isEqual(this);var i=Yg(this,t);var r=null;if(o){if(n.root.rootName=="$graveyard"){if(t.type=="remove"){r=t.sourcePosition;}else{r=t.deletionPosition;}}var _e109=this.toRange();this.start=n.start;this.end=n.end;this.fire("change:range",_e109,{deletionPosition:r});}else if(i){this.fire("change:content",this.toRange(),{deletionPosition:r});}}function Yg(t,e){switch(e.type){case"insert":return t.containsPosition(e.position);case"move":case"remove":case"reinsert":case"merge":return t.containsPosition(e.sourcePosition)||t.start.isEqual(e.sourcePosition)||t.containsPosition(e.targetPosition);case"split":return t.containsPosition(e.splitPosition)||t.containsPosition(e.insertionPosition);}return false;}fo(Ug,C);var Qg="selection:";var Xg=/*#__PURE__*/function(){function Xg(t){_classCallCheck(this,Xg);this._selection=new tp(t);this._selection.delegate("change:range").to(this);this._selection.delegate("change:attribute").to(this);this._selection.delegate("change:marker").to(this);}_createClass(Xg,[{key:"isCollapsed",get:function get(){return this._selection.isCollapsed;}},{key:"anchor",get:function get(){return this._selection.anchor;}},{key:"focus",get:function get(){return this._selection.focus;}},{key:"rangeCount",get:function get(){return this._selection.rangeCount;}},{key:"hasOwnRange",get:function get(){return this._selection.hasOwnRange;}},{key:"isBackward",get:function get(){return this._selection.isBackward;}},{key:"isGravityOverridden",get:function get(){return this._selection.isGravityOverridden;}},{key:"markers",get:function get(){return this._selection.markers;}},{key:"_ranges",get:function get(){return this._selection._ranges;}},{key:"getRanges",value:function getRanges(){return this._selection.getRanges();}},{key:"getFirstPosition",value:function getFirstPosition(){return this._selection.getFirstPosition();}},{key:"getLastPosition",value:function getLastPosition(){return this._selection.getLastPosition();}},{key:"getFirstRange",value:function getFirstRange(){return this._selection.getFirstRange();}},{key:"getLastRange",value:function getLastRange(){return this._selection.getLastRange();}},{key:"getSelectedBlocks",value:function getSelectedBlocks(){return this._selection.getSelectedBlocks();}},{key:"getSelectedElement",value:function getSelectedElement(){return this._selection.getSelectedElement();}},{key:"containsEntireContent",value:function containsEntireContent(t){return this._selection.containsEntireContent(t);}},{key:"destroy",value:function destroy(){this._selection.destroy();}},{key:"getAttributeKeys",value:function getAttributeKeys(){return this._selection.getAttributeKeys();}},{key:"getAttributes",value:function getAttributes(){return this._selection.getAttributes();}},{key:"getAttribute",value:function getAttribute(t){return this._selection.getAttribute(t);}},{key:"hasAttribute",value:function hasAttribute(t){return this._selection.hasAttribute(t);}},{key:"refresh",value:function refresh(){this._selection._updateMarkers();this._selection._updateAttributes(false);}},{key:"observeMarkers",value:function observeMarkers(t){this._selection.observeMarkers(t);}},{key:"is",value:function is(t){return t==="selection"||t=="model:selection"||t=="documentSelection"||t=="model:documentSelection";}},{key:"_setFocus",value:function _setFocus(t,e){this._selection.setFocus(t,e);}},{key:"_setTo",value:function _setTo(t,e,n){this._selection.setTo(t,e,n);}},{key:"_setAttribute",value:function _setAttribute(t,e){this._selection.setAttribute(t,e);}},{key:"_removeAttribute",value:function _removeAttribute(t){this._selection.removeAttribute(t);}},{key:"_getStoredAttributes",value:function _getStoredAttributes(){return this._selection._getStoredAttributes();}},{key:"_overrideGravity",value:function _overrideGravity(){return this._selection.overrideGravity();}},{key:"_restoreGravity",value:function _restoreGravity(t){this._selection.restoreGravity(t);}}],[{key:"_getStoreAttributeKey",value:function _getStoreAttributeKey(t){return Qg+t;}},{key:"_isStoreAttributeKey",value:function _isStoreAttributeKey(t){return t.startsWith(Qg);}}]);return Xg;}();fo(Xg,C);var tp=/*#__PURE__*/function(_jg){_inherits(tp,_jg);var _super26=_createSuper(tp);function tp(t){var _this59;_classCallCheck(this,tp);_this59=_super26.call(this);_this59.markers=new Ja({idProperty:"name"});_this59._model=t.model;_this59._document=t;_this59._attributePriority=new Map();_this59._selectionRestorePosition=null;_this59._hasChangedRange=false;_this59._overriddenGravityRegister=new Set();_this59._observedMarkers=new Set();_this59.listenTo(_this59._model,"applyOperation",function(t,e){var n=e[0];if(!n.isDocumentOperation||n.type=="marker"||n.type=="rename"||n.type=="noop"){return;}if(_this59._ranges.length==0&&_this59._selectionRestorePosition){_this59._fixGraveyardSelection(_this59._selectionRestorePosition);}_this59._selectionRestorePosition=null;if(_this59._hasChangedRange){_this59._hasChangedRange=false;_this59.fire("change:range",{directChange:false});}},{priority:"lowest"});_this59.on("change:range",function(){var _iterator148=_createForOfIteratorHelper(_this59.getRanges()),_step148;try{for(_iterator148.s();!(_step148=_iterator148.n()).done;){var _t103=_step148.value;if(!_this59._document._validateSelectionRange(_t103)){throw new h("document-selection-wrong-position",_assertThisInitialized(_this59),{range:_t103});}}}catch(err){_iterator148.e(err);}finally{_iterator148.f();}});_this59.listenTo(_this59._model.markers,"update",function(t,e,n,o){_this59._updateMarker(e,o);});_this59.listenTo(_this59._document,"change",function(t,e){np(_this59._model,e);});return _this59;}_createClass(tp,[{key:"isCollapsed",get:function get(){var t=this._ranges.length;return t===0?this._document._getDefaultRange().isCollapsed:_get(_getPrototypeOf(tp.prototype),"isCollapsed",this);}},{key:"anchor",get:function get(){return _get(_getPrototypeOf(tp.prototype),"anchor",this)||this._document._getDefaultRange().start;}},{key:"focus",get:function get(){return _get(_getPrototypeOf(tp.prototype),"focus",this)||this._document._getDefaultRange().end;}},{key:"rangeCount",get:function get(){return this._ranges.length?this._ranges.length:1;}},{key:"hasOwnRange",get:function get(){return this._ranges.length>0;}},{key:"isGravityOverridden",get:function get(){return!!this._overriddenGravityRegister.size;}},{key:"destroy",value:function destroy(){for(var _t104=0;_t104<this._ranges.length;_t104++){this._ranges[_t104].detach();}this.stopListening();}},{key:"getRanges",value:/*#__PURE__*/regeneratorRuntime.mark(function getRanges(){return regeneratorRuntime.wrap(function getRanges$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:if(!this._ranges.length){_context18.next=4;break;}return _context18.delegateYield(_get(_getPrototypeOf(tp.prototype),"getRanges",this).call(this),"t0",2);case 2:_context18.next=6;break;case 4:_context18.next=6;return this._document._getDefaultRange();case 6:case"end":return _context18.stop();}}},getRanges,this);})},{key:"getFirstRange",value:function getFirstRange(){return _get(_getPrototypeOf(tp.prototype),"getFirstRange",this).call(this)||this._document._getDefaultRange();}},{key:"getLastRange",value:function getLastRange(){return _get(_getPrototypeOf(tp.prototype),"getLastRange",this).call(this)||this._document._getDefaultRange();}},{key:"setTo",value:function setTo(t,e,n){_get(_getPrototypeOf(tp.prototype),"setTo",this).call(this,t,e,n);this._updateAttributes(true);this._updateMarkers();}},{key:"setFocus",value:function setFocus(t,e){_get(_getPrototypeOf(tp.prototype),"setFocus",this).call(this,t,e);this._updateAttributes(true);this._updateMarkers();}},{key:"setAttribute",value:function setAttribute(t,e){if(this._setAttribute(t,e)){var _e110=[t];this.fire("change:attribute",{attributeKeys:_e110,directChange:true});}}},{key:"removeAttribute",value:function removeAttribute(t){if(this._removeAttribute(t)){var _e111=[t];this.fire("change:attribute",{attributeKeys:_e111,directChange:true});}}},{key:"overrideGravity",value:function overrideGravity(){var t=s();this._overriddenGravityRegister.add(t);if(this._overriddenGravityRegister.size===1){this._updateAttributes(true);}return t;}},{key:"restoreGravity",value:function restoreGravity(t){if(!this._overriddenGravityRegister.has(t)){throw new h("document-selection-gravity-wrong-restore",this,{uid:t});}this._overriddenGravityRegister.delete(t);if(!this.isGravityOverridden){this._updateAttributes(true);}}},{key:"observeMarkers",value:function observeMarkers(t){this._observedMarkers.add(t);this._updateMarkers();}},{key:"_popRange",value:function _popRange(){this._ranges.pop().detach();}},{key:"_pushRange",value:function _pushRange(t){var e=this._prepareRange(t);if(e){this._ranges.push(e);}}},{key:"_prepareRange",value:function _prepareRange(t){var _this60=this;this._checkRange(t);if(t.root==this._document.graveyard){return;}var e=Ug.fromRange(t);e.on("change:range",function(t,n,o){_this60._hasChangedRange=true;if(e.root==_this60._document.graveyard){_this60._selectionRestorePosition=o.deletionPosition;var _t105=_this60._ranges.indexOf(e);_this60._ranges.splice(_t105,1);e.detach();}});return e;}},{key:"_updateMarkers",value:function _updateMarkers(){if(!this._observedMarkers.size){return;}var t=[];var e=false;var _iterator149=_createForOfIteratorHelper(this._model.markers),_step149;try{for(_iterator149.s();!(_step149=_iterator149.n()).done;){var _e112=_step149.value;var _n103=_e112.name.split(":",1)[0];if(!this._observedMarkers.has(_n103)){continue;}var _o70=_e112.getRange();var _iterator150=_createForOfIteratorHelper(this.getRanges()),_step150;try{for(_iterator150.s();!(_step150=_iterator150.n()).done;){var _n104=_step150.value;if(_o70.containsRange(_n104,!_n104.isCollapsed)){t.push(_e112);}}}catch(err){_iterator150.e(err);}finally{_iterator150.f();}}}catch(err){_iterator149.e(err);}finally{_iterator149.f();}var n=Array.from(this.markers);for(var _i50=0,_t106=t;_i50<_t106.length;_i50++){var _n101=_t106[_i50];if(!this.markers.has(_n101)){this.markers.add(_n101);e=true;}}for(var _i51=0,_Array$from2=Array.from(this.markers);_i51<_Array$from2.length;_i51++){var _n102=_Array$from2[_i51];if(!t.includes(_n102)){this.markers.remove(_n102);e=true;}}if(e){this.fire("change:marker",{oldMarkers:n,directChange:false});}}},{key:"_updateMarker",value:function _updateMarker(t,e){var n=t.name.split(":",1)[0];if(!this._observedMarkers.has(n)){return;}var o=false;var i=Array.from(this.markers);var r=this.markers.has(t);if(!e){if(r){this.markers.remove(t);o=true;}}else{var _n105=false;var _iterator151=_createForOfIteratorHelper(this.getRanges()),_step151;try{for(_iterator151.s();!(_step151=_iterator151.n()).done;){var _t107=_step151.value;if(e.containsRange(_t107,!_t107.isCollapsed)){_n105=true;break;}}}catch(err){_iterator151.e(err);}finally{_iterator151.f();}if(_n105&&!r){this.markers.add(t);o=true;}else if(!_n105&&r){this.markers.remove(t);o=true;}}if(o){this.fire("change:marker",{oldMarkers:i,directChange:false});}}},{key:"_updateAttributes",value:function _updateAttributes(t){var e=kc(this._getSurroundingAttributes());var n=kc(this.getAttributes());if(t){this._attributePriority=new Map();this._attrs=new Map();}else{var _iterator152=_createForOfIteratorHelper(this._attributePriority),_step152;try{for(_iterator152.s();!(_step152=_iterator152.n()).done;){var _step152$value=_slicedToArray(_step152.value,2),_t108=_step152$value[0],_e113=_step152$value[1];if(_e113=="low"){this._attrs.delete(_t108);this._attributePriority.delete(_t108);}}}catch(err){_iterator152.e(err);}finally{_iterator152.f();}}this._setAttributesTo(e);var o=[];var _iterator153=_createForOfIteratorHelper(this.getAttributes()),_step153;try{for(_iterator153.s();!(_step153=_iterator153.n()).done;){var _step153$value=_slicedToArray(_step153.value,2),_t109=_step153$value[0],_e114=_step153$value[1];if(!n.has(_t109)||n.get(_t109)!==_e114){o.push(_t109);}}}catch(err){_iterator153.e(err);}finally{_iterator153.f();}var _iterator154=_createForOfIteratorHelper(n),_step154;try{for(_iterator154.s();!(_step154=_iterator154.n()).done;){var _step154$value=_slicedToArray(_step154.value,1),_t110=_step154$value[0];if(!this.hasAttribute(_t110)){o.push(_t110);}}}catch(err){_iterator154.e(err);}finally{_iterator154.f();}if(o.length>0){this.fire("change:attribute",{attributeKeys:o,directChange:false});}}},{key:"_setAttribute",value:function _setAttribute(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var o=n?"normal":"low";if(o=="low"&&this._attributePriority.get(t)=="normal"){return false;}var i=_get(_getPrototypeOf(tp.prototype),"getAttribute",this).call(this,t);if(i===e){return false;}this._attrs.set(t,e);this._attributePriority.set(t,o);return true;}},{key:"_removeAttribute",value:function _removeAttribute(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var n=e?"normal":"low";if(n=="low"&&this._attributePriority.get(t)=="normal"){return false;}this._attributePriority.set(t,n);if(!_get(_getPrototypeOf(tp.prototype),"hasAttribute",this).call(this,t)){return false;}this._attrs.delete(t);return true;}},{key:"_setAttributesTo",value:function _setAttributesTo(t){var e=new Set();var _iterator155=_createForOfIteratorHelper(this.getAttributes()),_step155;try{for(_iterator155.s();!(_step155=_iterator155.n()).done;){var _step155$value=_slicedToArray(_step155.value,2),_e115=_step155$value[0],_n106=_step155$value[1];if(t.get(_e115)===_n106){continue;}this._removeAttribute(_e115,false);}}catch(err){_iterator155.e(err);}finally{_iterator155.f();}var _iterator156=_createForOfIteratorHelper(t),_step156;try{for(_iterator156.s();!(_step156=_iterator156.n()).done;){var _step156$value=_slicedToArray(_step156.value,2),_n107=_step156$value[0],_o71=_step156$value[1];var _t111=this._setAttribute(_n107,_o71,false);if(_t111){e.add(_n107);}}}catch(err){_iterator156.e(err);}finally{_iterator156.f();}return e;}},{key:"_getStoredAttributes",value:/*#__PURE__*/regeneratorRuntime.mark(function _getStoredAttributes(){var t,_iterator157,_step157,_e116,_n108;return regeneratorRuntime.wrap(function _getStoredAttributes$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:t=this.getFirstPosition().parent;if(!(this.isCollapsed&&t.isEmpty)){_context19.next=21;break;}_iterator157=_createForOfIteratorHelper(t.getAttributeKeys());_context19.prev=3;_iterator157.s();case 5:if((_step157=_iterator157.n()).done){_context19.next=13;break;}_e116=_step157.value;if(!_e116.startsWith(Qg)){_context19.next=11;break;}_n108=_e116.substr(Qg.length);_context19.next=11;return[_n108,t.getAttribute(_e116)];case 11:_context19.next=5;break;case 13:_context19.next=18;break;case 15:_context19.prev=15;_context19.t0=_context19["catch"](3);_iterator157.e(_context19.t0);case 18:_context19.prev=18;_iterator157.f();return _context19.finish(18);case 21:case"end":return _context19.stop();}}},_getStoredAttributes,this,[[3,15,18,21]]);})},{key:"_getSurroundingAttributes",value:function _getSurroundingAttributes(){var t=this.getFirstPosition();var e=this._model.schema;var n=null;if(!this.isCollapsed){var _t112=this.getFirstRange();var _iterator158=_createForOfIteratorHelper(_t112),_step158;try{for(_iterator158.s();!(_step158=_iterator158.n()).done;){var _o72=_step158.value;if(_o72.item.is("element")&&e.isObject(_o72.item)){break;}if(_o72.type=="text"){n=_o72.item.getAttributes();break;}}}catch(err){_iterator158.e(err);}finally{_iterator158.f();}}else{var _o73=t.textNode?t.textNode:t.nodeBefore;var _i52=t.textNode?t.textNode:t.nodeAfter;if(!this.isGravityOverridden){n=ep(_o73);}if(!n){n=ep(_i52);}if(!this.isGravityOverridden&&!n){var _t113=_o73;while(_t113&&!e.isInline(_t113)&&!n){_t113=_t113.previousSibling;n=ep(_t113);}}if(!n){var _t114=_i52;while(_t114&&!e.isInline(_t114)&&!n){_t114=_t114.nextSibling;n=ep(_t114);}}if(!n){n=this._getStoredAttributes();}}return n;}},{key:"_fixGraveyardSelection",value:function _fixGraveyardSelection(t){var e=this._model.schema.getNearestSelectionRange(t);if(e){this._pushRange(e);}}}]);return tp;}(jg);function ep(t){if(t instanceof yg||t instanceof Cg){return t.getAttributes();}return null;}function np(t,e){var n=t.document.differ;var _iterator159=_createForOfIteratorHelper(n.getChanges()),_step159;try{var _loop2=function _loop2(){var o=_step159.value;if(o.type!="insert"){return"continue";}var n=o.position.parent;var i=o.length===n.maxOffset;if(i){t.enqueueChange(e,function(t){var e=Array.from(n.getAttributeKeys()).filter(function(t){return t.startsWith(Qg);});var _iterator160=_createForOfIteratorHelper(e),_step160;try{for(_iterator160.s();!(_step160=_iterator160.n()).done;){var _o74=_step160.value;t.removeAttribute(_o74,n);}}catch(err){_iterator160.e(err);}finally{_iterator160.f();}});}};for(_iterator159.s();!(_step159=_iterator159.n()).done;){var _ret=_loop2();if(_ret==="continue")continue;}}catch(err){_iterator159.e(err);}finally{_iterator159.f();}}var op=/*#__PURE__*/function(){function op(t){_classCallCheck(this,op);this._dispatchers=t;}_createClass(op,[{key:"add",value:function add(t){var _iterator161=_createForOfIteratorHelper(this._dispatchers),_step161;try{for(_iterator161.s();!(_step161=_iterator161.n()).done;){var _e117=_step161.value;t(_e117);}}catch(err){_iterator161.e(err);}finally{_iterator161.f();}return this;}}]);return op;}();var ip=1,rp=4;function sp(t){return Fa(t,ip|rp);}var ap=sp;var cp=/*#__PURE__*/function(_op){_inherits(cp,_op);var _super27=_createSuper(cp);function cp(){_classCallCheck(this,cp);return _super27.apply(this,arguments);}_createClass(cp,[{key:"elementToElement",value:function elementToElement(t){return this.add(Tp(t));}},{key:"elementToStructure",value:function elementToStructure(t){return this.add(Bp(t));}},{key:"attributeToElement",value:function attributeToElement(t){return this.add(Ip(t));}},{key:"attributeToAttribute",value:function attributeToAttribute(t){return this.add(Rp(t));}},{key:"markerToElement",value:function markerToElement(t){return this.add(Op(t));}},{key:"markerToHighlight",value:function markerToHighlight(t){return this.add(Mp(t));}},{key:"markerToData",value:function markerToData(t){return this.add(zp(t));}}]);return cp;}(op);function lp(){return function(t,e,n){if(!n.consumable.consume(e.item,t.name)){return;}var o=n.writer;var i=n.mapper.toViewPosition(e.range.start);var r=o.createText(e.item.data);o.insert(i,r);};}function dp(){return function(t,e,n){n.convertAttributes(e.item);if(!e.reconversion&&e.item.is("element")&&!e.item.isEmpty){n.convertChildren(e.item);}};}function hp(){return function(t,e,n){var o=n.mapper.toViewPosition(e.position);var i=e.position.getShiftedBy(e.length);var r=n.mapper.toViewPosition(i,{isPhantom:true});var s=n.writer.createRange(o,r);var a=n.writer.remove(s.getTrimmed());var _iterator162=_createForOfIteratorHelper(n.writer.createRangeIn(a).getItems()),_step162;try{for(_iterator162.s();!(_step162=_iterator162.n()).done;){var _t115=_step162.value;n.mapper.unbindViewElement(_t115,{defer:true});}}catch(err){_iterator162.e(err);}finally{_iterator162.f();}};}function up(t,e){var n=t.createAttributeElement("span",e.attributes);if(e.classes){n._addClass(e.classes);}if(typeof e.priority==="number"){n._priority=e.priority;}n._id=e.id;return n;}function fp(){return function(t,e,n){var o=e.selection;if(o.isCollapsed){return;}if(!n.consumable.consume(o,"selection")){return;}var i=[];var _iterator163=_createForOfIteratorHelper(o.getRanges()),_step163;try{for(_iterator163.s();!(_step163=_iterator163.n()).done;){var _t116=_step163.value;var _e118=n.mapper.toViewRange(_t116);i.push(_e118);}}catch(err){_iterator163.e(err);}finally{_iterator163.f();}n.writer.setSelection(i,{backward:o.isBackward});};}function gp(){return function(t,e,n){var o=e.selection;if(!o.isCollapsed){return;}if(!n.consumable.consume(o,"selection")){return;}var i=n.writer;var r=o.getFirstPosition();var s=n.mapper.toViewPosition(r);var a=i.breakAttributes(s);i.setSelection(a);};}function pp(){return function(t,e,n){var o=n.writer;var i=o.document.selection;var _iterator164=_createForOfIteratorHelper(i.getRanges()),_step164;try{for(_iterator164.s();!(_step164=_iterator164.n()).done;){var _t117=_step164.value;if(_t117.isCollapsed){if(_t117.end.parent.isAttached()){n.writer.mergeAttributes(_t117.start);}}}}catch(err){_iterator164.e(err);}finally{_iterator164.f();}o.setSelection(null);};}function mp(t){return function(e,n,o){if(!o.consumable.test(n.item,e.name)){return;}var i=t(n.attributeOldValue,o,n);var r=t(n.attributeNewValue,o,n);if(!i&&!r){return;}o.consumable.consume(n.item,e.name);var s=o.writer;var a=s.document.selection;if(n.item instanceof jg||n.item instanceof Xg){s.wrap(a.getFirstRange(),r);}else{var _t118=o.mapper.toViewRange(n.range);if(n.attributeOldValue!==null&&i){_t118=s.unwrap(_t118,i);}if(n.attributeNewValue!==null&&r){s.wrap(_t118,r);}}};}function kp(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Yp;return function(n,o,i){if(!e(o.item,i.consumable,{preflight:true})){return;}var r=t(o.item,i,o);if(!r){return;}e(o.item,i.consumable);var s=i.mapper.toViewPosition(o.range.start);i.mapper.bindElements(o.item,r);i.writer.insert(s,r);i.convertAttributes(o.item);Jp(r,o.item.getChildren(),i,{reconversion:o.reconversion});};}function bp(t,e){return function(n,o,i){if(!e(o.item,i.consumable,{preflight:true})){return;}var r=new Map();i.writer._registerSlotFactory(Gp(o.item,r,i));var s=t(o.item,i,o);i.writer._clearSlotFactory();if(!s){return;}$p(o.item,r,i);e(o.item,i.consumable);var a=i.mapper.toViewPosition(o.range.start);i.mapper.bindElements(o.item,s);i.writer.insert(a,s);i.convertAttributes(o.item);Up(s,r,i,{reconversion:o.reconversion});};}function wp(t){return function(e,n,o){n.isOpening=true;var i=t(n,o);n.isOpening=false;var r=t(n,o);if(!i||!r){return;}var s=n.markerRange;if(s.isCollapsed&&!o.consumable.consume(s,e.name)){return;}var _iterator165=_createForOfIteratorHelper(s),_step165;try{for(_iterator165.s();!(_step165=_iterator165.n()).done;){var _t119=_step165.value;if(!o.consumable.consume(_t119.item,e.name)){return;}}}catch(err){_iterator165.e(err);}finally{_iterator165.f();}var a=o.mapper;var c=o.writer;c.insert(a.toViewPosition(s.start),i);o.mapper.bindElementToMarker(i,n.markerName);if(!s.isCollapsed){c.insert(a.toViewPosition(s.end),r);o.mapper.bindElementToMarker(r,n.markerName);}e.stop();};}function _p(){return function(t,e,n){var o=n.mapper.markerNameToElements(e.markerName);if(!o){return;}var _iterator166=_createForOfIteratorHelper(o),_step166;try{for(_iterator166.s();!(_step166=_iterator166.n()).done;){var _t120=_step166.value;n.mapper.unbindElementFromMarkerName(_t120,e.markerName);n.writer.clear(n.writer.createRangeOn(_t120),_t120);}}catch(err){_iterator166.e(err);}finally{_iterator166.f();}n.writer.clearClonedElementsGroup(e.markerName);t.stop();};}function vp(t){return function(e,n,o){var i=t(n.markerName,o);if(!i){return;}var r=n.markerRange;if(!o.consumable.consume(r,e.name)){return;}Ap(r,false,o,n,i);Ap(r,true,o,n,i);e.stop();};}function Ap(t,e,n,o,i){var r=e?t.start:t.end;var s=r.nodeAfter&&r.nodeAfter.is("element")?r.nodeAfter:null;var a=r.nodeBefore&&r.nodeBefore.is("element")?r.nodeBefore:null;if(s||a){var _t121;var _r24;if(e&&s||!e&&!a){_t121=s;_r24=true;}else{_t121=a;_r24=false;}var _c3=n.mapper.toViewElement(_t121);if(_c3){Cp(_c3,e,_r24,n,o,i);return;}}var c=n.mapper.toViewPosition(r);yp(c,e,n,o,i);}function Cp(t,e,n,o,i,r){var s="data-".concat(r.group,"-").concat(e?"start":"end","-").concat(n?"before":"after");var a=t.hasAttribute(s)?t.getAttribute(s).split(","):[];a.unshift(r.name);o.writer.setAttribute(s,a.join(","),t);o.mapper.bindElementToMarker(t,i.markerName);}function yp(t,e,n,o,i){var r="".concat(i.group,"-").concat(e?"start":"end");var s=i.name?{name:i.name}:null;var a=n.writer.createUIElement(r,s);n.writer.insert(t,a);n.mapper.bindElementToMarker(a,o.markerName);}function xp(t){return function(e,n,o){var i=t(n.markerName,o);if(!i){return;}var r=o.mapper.markerNameToElements(n.markerName);if(!r){return;}var _iterator167=_createForOfIteratorHelper(r),_step167;try{for(_iterator167.s();!(_step167=_iterator167.n()).done;){var _t122=_step167.value;o.mapper.unbindElementFromMarkerName(_t122,n.markerName);if(_t122.is("containerElement")){s("data-".concat(i.group,"-start-before"),_t122);s("data-".concat(i.group,"-start-after"),_t122);s("data-".concat(i.group,"-end-before"),_t122);s("data-".concat(i.group,"-end-after"),_t122);}else{o.writer.clear(o.writer.createRangeOn(_t122),_t122);}}}catch(err){_iterator167.e(err);}finally{_iterator167.f();}o.writer.clearClonedElementsGroup(n.markerName);e.stop();function s(t,e){if(e.hasAttribute(t)){var _n109=new Set(e.getAttribute(t).split(","));_n109.delete(i.name);if(_n109.size==0){o.writer.removeAttribute(t,e);}else{o.writer.setAttribute(t,Array.from(_n109).join(","),e);}}}};}function Ep(t){return function(e,n,o){if(!o.consumable.test(n.item,e.name)){return;}var i=t(n.attributeOldValue,o,n);var r=t(n.attributeNewValue,o,n);if(!i&&!r){return;}o.consumable.consume(n.item,e.name);var s=o.mapper.toViewElement(n.item);var a=o.writer;if(!s){throw new h("conversion-attribute-to-attribute-on-text",o.dispatcher,n);}if(n.attributeOldValue!==null&&i){if(i.key=="class"){var _t123=Ya(i.value);var _iterator168=_createForOfIteratorHelper(_t123),_step168;try{for(_iterator168.s();!(_step168=_iterator168.n()).done;){var _e119=_step168.value;a.removeClass(_e119,s);}}catch(err){_iterator168.e(err);}finally{_iterator168.f();}}else if(i.key=="style"){var _t124=Object.keys(i.value);for(var _i53=0,_t125=_t124;_i53<_t125.length;_i53++){var _e120=_t125[_i53];a.removeStyle(_e120,s);}}else{a.removeAttribute(i.key,s);}}if(n.attributeNewValue!==null&&r){if(r.key=="class"){var _t126=Ya(r.value);var _iterator169=_createForOfIteratorHelper(_t126),_step169;try{for(_iterator169.s();!(_step169=_iterator169.n()).done;){var _e121=_step169.value;a.addClass(_e121,s);}}catch(err){_iterator169.e(err);}finally{_iterator169.f();}}else if(r.key=="style"){var _t127=Object.keys(r.value);for(var _i54=0,_t128=_t127;_i54<_t128.length;_i54++){var _e122=_t128[_i54];a.setStyle(_e122,r.value[_e122],s);}}else{a.setAttribute(r.key,r.value,s);}}};}function Dp(t){return function(e,n,o){if(!n.item){return;}if(!(n.item instanceof jg||n.item instanceof Xg)&&!n.item.is("$textProxy")){return;}var i=jp(t,n,o);if(!i){return;}if(!o.consumable.consume(n.item,e.name)){return;}var r=o.writer;var s=up(r,i);var a=r.document.selection;if(n.item instanceof jg||n.item instanceof Xg){r.wrap(a.getFirstRange(),s,a);}else{var _t129=o.mapper.toViewRange(n.range);var _e123=r.wrap(_t129,s);var _iterator170=_createForOfIteratorHelper(_e123.getItems()),_step170;try{for(_iterator170.s();!(_step170=_iterator170.n()).done;){var _t130=_step170.value;if(_t130.is("attributeElement")&&_t130.isSimilar(s)){o.mapper.bindElementToMarker(_t130,n.markerName);break;}}}catch(err){_iterator170.e(err);}finally{_iterator170.f();}}};}function Sp(t){return function(e,n,o){if(!n.item){return;}if(!(n.item instanceof Eg)){return;}var i=jp(t,n,o);if(!i){return;}if(!o.consumable.test(n.item,e.name)){return;}var r=o.mapper.toViewElement(n.item);if(r&&r.getCustomProperty("addHighlight")){o.consumable.consume(n.item,e.name);var _iterator171=_createForOfIteratorHelper(Og._createIn(n.item)),_step171;try{for(_iterator171.s();!(_step171=_iterator171.n()).done;){var _t131=_step171.value;o.consumable.consume(_t131.item,e.name);}}catch(err){_iterator171.e(err);}finally{_iterator171.f();}r.getCustomProperty("addHighlight")(r,i,o.writer);o.mapper.bindElementToMarker(r,n.markerName);}};}function Pp(t){return function(e,n,o){if(n.markerRange.isCollapsed){return;}var i=jp(t,n,o);if(!i){return;}var r=up(o.writer,i);var s=o.mapper.markerNameToElements(n.markerName);if(!s){return;}var _iterator172=_createForOfIteratorHelper(s),_step172;try{for(_iterator172.s();!(_step172=_iterator172.n()).done;){var _t132=_step172.value;o.mapper.unbindElementFromMarkerName(_t132,n.markerName);if(_t132.is("attributeElement")){o.writer.unwrap(o.writer.createRangeOn(_t132),r);}else{_t132.getCustomProperty("removeHighlight")(_t132,i.id,o.writer);}}}catch(err){_iterator172.e(err);}finally{_iterator172.f();}o.writer.clearClonedElementsGroup(n.markerName);e.stop();};}function Tp(t){t=ap(t);t.model=Np(t.model);t.view=Fp(t.view,"container");if(t.model.attributes.length){t.model.children=true;}return function(e){e.on("insert:"+t.model.name,kp(t.view,Kp(t.model)),{priority:t.converterPriority||"normal"});if(t.model.children||t.model.attributes.length){e.on("reduceChanges",Wp(t.model),{priority:"low"});}};}function Bp(t){t=ap(t);t.model=Np(t.model);t.view=Fp(t.view,"container");t.model.children=true;return function(e){if(e._conversionApi.schema.checkChild(t.model.name,"$text")){throw new h("conversion-element-to-structure-disallowed-text",e,{elementName:t.model.name});}e.on("insert:"+t.model.name,bp(t.view,Kp(t.model)),{priority:t.converterPriority||"normal"});e.on("reduceChanges",Wp(t.model),{priority:"low"});};}function Ip(t){t=ap(t);var e=t.model.key?t.model.key:t.model;var n="attribute:"+e;if(t.model.name){n+=":"+t.model.name;}if(t.model.values){var _iterator173=_createForOfIteratorHelper(t.model.values),_step173;try{for(_iterator173.s();!(_step173=_iterator173.n()).done;){var _e124=_step173.value;t.view[_e124]=Fp(t.view[_e124],"attribute");}}catch(err){_iterator173.e(err);}finally{_iterator173.f();}}else{t.view=Fp(t.view,"attribute");}var o=Lp(t);return function(e){e.on(n,mp(o),{priority:t.converterPriority||"normal"});};}function Rp(t){t=ap(t);var e=t.model.key?t.model.key:t.model;var n="attribute:"+e;if(t.model.name){n+=":"+t.model.name;}if(t.model.values){var _iterator174=_createForOfIteratorHelper(t.model.values),_step174;try{for(_iterator174.s();!(_step174=_iterator174.n()).done;){var _e125=_step174.value;t.view[_e125]=Hp(t.view[_e125]);}}catch(err){_iterator174.e(err);}finally{_iterator174.f();}}else{t.view=Hp(t.view);}var o=Lp(t);return function(e){e.on(n,Ep(o),{priority:t.converterPriority||"normal"});};}function Op(t){t=ap(t);t.view=Fp(t.view,"ui");return function(e){e.on("addMarker:"+t.model,wp(t.view),{priority:t.converterPriority||"normal"});e.on("removeMarker:"+t.model,_p(t.view),{priority:t.converterPriority||"normal"});};}function zp(t){t=ap(t);var e=t.model;if(!t.view){t.view=function(n){return{group:e,name:n.substr(t.model.length+1)};};}return function(n){n.on("addMarker:"+e,vp(t.view),{priority:t.converterPriority||"normal"});n.on("removeMarker:"+e,xp(t.view),{priority:t.converterPriority||"normal"});};}function Mp(t){return function(e){e.on("addMarker:"+t.model,Dp(t.view),{priority:t.converterPriority||"normal"});e.on("addMarker:"+t.model,Sp(t.view),{priority:t.converterPriority||"normal"});e.on("removeMarker:"+t.model,Pp(t.view),{priority:t.converterPriority||"normal"});};}function Np(t){if(typeof t=="string"){t={name:t};}if(!t.attributes){t.attributes=[];}else if(!Array.isArray(t.attributes)){t.attributes=[t.attributes];}t.children=!!t.children;return t;}function Fp(t,e){if(typeof t=="function"){return t;}return function(n,o){return Vp(t,o,e);};}function Vp(t,e,n){if(typeof t=="string"){t={name:t};}var o;var i=e.writer;var r=Object.assign({},t.attributes);if(n=="container"){o=i.createContainerElement(t.name,r);}else if(n=="attribute"){var _e126={priority:t.priority||wd.DEFAULT_PRIORITY};o=i.createAttributeElement(t.name,r,_e126);}else{o=i.createUIElement(t.name,r);}if(t.styles){var _e127=Object.keys(t.styles);for(var _i55=0,_e128=_e127;_i55<_e128.length;_i55++){var _n110=_e128[_i55];i.setStyle(_n110,t.styles[_n110],o);}}if(t.classes){var _e129=t.classes;if(typeof _e129=="string"){i.addClass(_e129,o);}else{var _iterator175=_createForOfIteratorHelper(_e129),_step175;try{for(_iterator175.s();!(_step175=_iterator175.n()).done;){var _t133=_step175.value;i.addClass(_t133,o);}}catch(err){_iterator175.e(err);}finally{_iterator175.f();}}}return o;}function Lp(t){if(t.model.values){return function(e,n){var o=t.view[e];if(o){return o(e,n);}return null;};}else{return t.view;}}function Hp(t){if(typeof t=="string"){return function(e){return{key:t,value:e};};}else if(_typeof(t)=="object"){if(t.value){return function(){return t;};}else{return function(e){return{key:t.key,value:e};};}}else{return t;}}function jp(t,e,n){var o=typeof t=="function"?t(e,n):t;if(!o){return null;}if(!o.priority){o.priority=10;}if(!o.id){o.id=e.markerName;}return o;}function qp(t){return function(e,n){if(!e.is("element",t.name)){return false;}if(n.type=="attribute"){if(t.attributes.includes(n.attributeKey)){return true;}}else{if(t.children){return true;}}return false;};}function Wp(t){var e=qp(t);return function(t,n){var o=[];if(!n.reconvertedElements){n.reconvertedElements=new Set();}var _iterator176=_createForOfIteratorHelper(n.changes),_step176;try{for(_iterator176.s();!(_step176=_iterator176.n()).done;){var _t134=_step176.value;var _i56=_t134.position?_t134.position.parent:_t134.range.start.nodeAfter;if(!_i56||!e(_i56,_t134)){o.push(_t134);continue;}if(!n.reconvertedElements.has(_i56)){n.reconvertedElements.add(_i56);var _t135=Tg._createBefore(_i56);o.push({type:"remove",name:_i56.name,position:_t135,length:1},{type:"reinsert",name:_i56.name,position:_t135,length:1});}}}catch(err){_iterator176.e(err);}finally{_iterator176.f();}n.changes=o;};}function Kp(t){return function(e,n){var o=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var i=["insert"];var _iterator177=_createForOfIteratorHelper(t.attributes),_step177;try{for(_iterator177.s();!(_step177=_iterator177.n()).done;){var _n111=_step177.value;if(e.hasAttribute(_n111)){i.push("attribute:".concat(_n111));}}}catch(err){_iterator177.e(err);}finally{_iterator177.f();}if(!i.every(function(t){return n.test(e,t);})){return false;}if(!o.preflight){i.forEach(function(t){return n.consume(e,t);});}return true;};}function Gp(t,e,n){return function(o){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"children";var r=o.createContainerElement("$slot");var s=null;if(i==="children"){s=Array.from(t.getChildren());}else if(typeof i=="function"){s=Array.from(t.getChildren()).filter(function(t){return i(t);});}else{throw new h("conversion-slot-mode-unknown",n.dispatcher,{modeOrFilter:i});}e.set(r,s);return r;};}function $p(t,e,n){var o=Array.from(e.values()).flat();var i=new Set(o);if(i.size!=o.length){throw new h("conversion-slot-filter-overlap",n.dispatcher,{element:t});}if(i.size!=t.childCount){throw new h("conversion-slot-filter-incomplete",n.dispatcher,{element:t});}}function Up(t,e,n,o){n.mapper.on("modelToViewPosition",s,{priority:"highest"});var i=null;var r=null;var _iterator178=_createForOfIteratorHelper(e),_step178;try{for(_iterator178.s();!(_step178=_iterator178.n()).done;){var _step178$value=_slicedToArray(_step178.value,2);i=_step178$value[0];r=_step178$value[1];Jp(t,r,n,o);n.writer.move(n.writer.createRangeIn(i),n.writer.createPositionBefore(i));n.writer.remove(i);}}catch(err){_iterator178.e(err);}finally{_iterator178.f();}n.mapper.off("modelToViewPosition",s);function s(t,e){var n=e.modelPosition.nodeAfter;var o=r.indexOf(n);if(o<0){return;}e.viewPosition=e.mapper.findPositionIn(i,o);}}function Jp(t,e,n,o){var _iterator179=_createForOfIteratorHelper(e),_step179;try{for(_iterator179.s();!(_step179=_iterator179.n()).done;){var _i57=_step179.value;if(!Zp(t.root,_i57,n,o)){n.convertItem(_i57);}}}catch(err){_iterator179.e(err);}finally{_iterator179.f();}}function Zp(t,e,n,o){var i=n.writer,r=n.mapper;if(!o.reconversion){return false;}var s=r.toViewElement(e);if(!s||s.root==t){return false;}if(!n.canReuseView(s)){return false;}i.move(i.createRangeOn(s),r.toViewPosition(Tg._createBefore(e)));return true;}function Yp(t,e){var _ref17=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},n=_ref17.preflight;if(n){return e.test(t,"insert");}else{return e.consume(t,"insert");}}function Qp(t){var _t$model=t.model,e=_t$model.schema,n=_t$model.document;var _iterator180=_createForOfIteratorHelper(n.getRootNames()),_step180;try{for(_iterator180.s();!(_step180=_iterator180.n()).done;){var _o75=_step180.value;var _i58=n.getRoot(_o75);if(_i58.isEmpty&&!e.checkChild(_i58,"$text")){if(e.checkChild(_i58,"paragraph")){t.insertElement("paragraph",_i58);return true;}}}}catch(err){_iterator180.e(err);}finally{_iterator180.f();}return false;}function Xp(t,e,n){var o=n.createContext(t);if(!n.checkChild(o,"paragraph")){return false;}if(!n.checkChild(o.push("paragraph"),e)){return false;}return true;}function tm(t,e){var n=e.createElement("paragraph");e.insert(n,t);return e.createPositionAt(n,0);}var em=/*#__PURE__*/function(_op2){_inherits(em,_op2);var _super28=_createSuper(em);function em(){_classCallCheck(this,em);return _super28.apply(this,arguments);}_createClass(em,[{key:"elementToElement",value:function elementToElement(t){return this.add(rm(t));}},{key:"elementToAttribute",value:function elementToAttribute(t){return this.add(sm(t));}},{key:"attributeToAttribute",value:function attributeToAttribute(t){return this.add(am(t));}},{key:"elementToMarker",value:function elementToMarker(t){return this.add(cm(t));}},{key:"dataToMarker",value:function dataToMarker(t){return this.add(lm(t));}}]);return em;}(op);function nm(){return function(t,e,n){if(!e.modelRange&&n.consumable.consume(e.viewItem,{name:true})){var _n$convertChildren=n.convertChildren(e.viewItem,e.modelCursor),_t136=_n$convertChildren.modelRange,_o76=_n$convertChildren.modelCursor;e.modelRange=_t136;e.modelCursor=_o76;}};}function om(){return function(t,e,_ref18){var n=_ref18.schema,o=_ref18.consumable,i=_ref18.writer;var r=e.modelCursor;if(!o.test(e.viewItem)){return;}if(!n.checkChild(r,"$text")){if(!Xp(r,"$text",n)){return;}r=tm(r,i);}o.consume(e.viewItem);var s=i.createText(e.viewItem.data);i.insert(s,r);e.modelRange=i.createRange(r,r.getShiftedBy(s.offsetSize));e.modelCursor=e.modelRange.end;};}function im(t,e){return function(n,o){var i=o.newSelection;var r=[];var _iterator181=_createForOfIteratorHelper(i.getRanges()),_step181;try{for(_iterator181.s();!(_step181=_iterator181.n()).done;){var _t137=_step181.value;r.push(e.toModelRange(_t137));}}catch(err){_iterator181.e(err);}finally{_iterator181.f();}var s=t.createSelection(r,{backward:i.isBackward});if(!s.isEqual(t.document.selection)){t.change(function(t){t.setSelection(s);});}};}function rm(t){t=ap(t);var e=um(t);var n=hm(t.view);var o=n?"element:"+n:"element";return function(n){n.on(o,e,{priority:t.converterPriority||"normal"});};}function sm(t){t=ap(t);pm(t);var e=mm(t,false);var n=hm(t.view);var o=n?"element:"+n:"element";return function(n){n.on(o,e,{priority:t.converterPriority||"low"});};}function am(t){t=ap(t);var e=null;if(typeof t.view=="string"||t.view.key){e=gm(t);}pm(t,e);var n=mm(t,true);return function(e){e.on("element",n,{priority:t.converterPriority||"low"});};}function cm(t){t=ap(t);wm(t);return rm(t);}function lm(t){t=ap(t);if(!t.model){t.model=function(e){return e?t.view+":"+e:t.view;};}var e=um(_m(t,"start"));var n=um(_m(t,"end"));return function(o){o.on("element:"+t.view+"-start",e,{priority:t.converterPriority||"normal"});o.on("element:"+t.view+"-end",n,{priority:t.converterPriority||"normal"});var i=c.get("low");var r=c.get("highest");var s=c.get(t.converterPriority)/r;o.on("element",dm(t),{priority:i+s});};}function dm(t){return function(e,n,o){var i="data-".concat(t.view);if(!o.consumable.test(n.viewItem,{attributes:i+"-end-after"})&&!o.consumable.test(n.viewItem,{attributes:i+"-start-after"})&&!o.consumable.test(n.viewItem,{attributes:i+"-end-before"})&&!o.consumable.test(n.viewItem,{attributes:i+"-start-before"})){return;}if(!n.modelRange){Object.assign(n,o.convertChildren(n.viewItem,n.modelCursor));}if(o.consumable.consume(n.viewItem,{attributes:i+"-end-after"})){r(n.modelRange.end,n.viewItem.getAttribute(i+"-end-after").split(","));}if(o.consumable.consume(n.viewItem,{attributes:i+"-start-after"})){r(n.modelRange.end,n.viewItem.getAttribute(i+"-start-after").split(","));}if(o.consumable.consume(n.viewItem,{attributes:i+"-end-before"})){r(n.modelRange.start,n.viewItem.getAttribute(i+"-end-before").split(","));}if(o.consumable.consume(n.viewItem,{attributes:i+"-start-before"})){r(n.modelRange.start,n.viewItem.getAttribute(i+"-start-before").split(","));}function r(e,i){var _iterator182=_createForOfIteratorHelper(i),_step182;try{for(_iterator182.s();!(_step182=_iterator182.n()).done;){var _r25=_step182.value;var _i59=t.model(_r25,o);var _s14=o.writer.createElement("$marker",{"data-name":_i59});o.writer.insert(_s14,e);if(n.modelCursor.isEqual(e)){n.modelCursor=n.modelCursor.getShiftedBy(1);}else{n.modelCursor=n.modelCursor._getTransformedByInsertion(e,1);}n.modelRange=n.modelRange._getTransformedByInsertion(e,1)[0];}}catch(err){_iterator182.e(err);}finally{_iterator182.f();}}};}function hm(t){if(typeof t=="string"){return t;}if(_typeof(t)=="object"&&typeof t.name=="string"){return t.name;}return null;}function um(t){var e=new bc(t.view);return function(n,o,i){var r=e.match(o.viewItem);if(!r){return;}var s=r.match;s.name=true;if(!i.consumable.test(o.viewItem,s)){return;}var a=fm(t.model,o.viewItem,i);if(!a){return;}if(!i.safeInsert(a,o.modelCursor)){return;}i.consumable.consume(o.viewItem,s);i.convertChildren(o.viewItem,a);i.updateConversionResult(a,o);};}function fm(t,e,n){if(t instanceof Function){return t(e,n);}else{return n.writer.createElement(t);}}function gm(t){if(typeof t.view=="string"){t.view={key:t.view};}var e=t.view.key;var n;if(e=="class"||e=="style"){var _o77=e=="class"?"classes":"styles";n=_defineProperty({},_o77,t.view.value);}else{var _o78=typeof t.view.value=="undefined"?/[\s\S]*/:t.view.value;n={attributes:_defineProperty({},e,_o78)};}if(t.view.name){n.name=t.view.name;}t.view=n;return e;}function pm(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var n=e===null?true:function(t){return t.getAttribute(e);};var o=_typeof(t.model)!="object"?t.model:t.model.key;var i=_typeof(t.model)!="object"||typeof t.model.value=="undefined"?n:t.model.value;t.model={key:o,value:i};}function mm(t,e){var n=new bc(t.view);return function(o,i,r){var s=n.match(i.viewItem);if(!s){return;}if(km(t.view,i.viewItem)){s.match.name=true;}else{delete s.match.name;}if(!r.consumable.test(i.viewItem,s.match)){return;}var a=t.model.key;var c=typeof t.model.value=="function"?t.model.value(i.viewItem,r):t.model.value;if(c===null){return;}if(!i.modelRange){Object.assign(i,r.convertChildren(i.viewItem,i.modelCursor));}var l=bm(i.modelRange,{key:a,value:c},e,r);if(l){r.consumable.consume(i.viewItem,s.match);}};}function km(t,e){var n=typeof t=="function"?t(e):t;if(_typeof(n)=="object"&&!hm(n)){return false;}return!n.classes&&!n.attributes&&!n.styles;}function bm(t,e,n,o){var i=false;for(var _i60=0,_Array$from3=Array.from(t.getItems({shallow:n}));_i60<_Array$from3.length;_i60++){var _r26=_Array$from3[_i60];if(!o.schema.checkAttribute(_r26,e.key)){continue;}i=true;if(_r26.hasAttribute(e.key)){continue;}o.writer.setAttribute(e.key,e.value,_r26);}return i;}function wm(t){var e=t.model;t.model=function(t,n){var o=typeof e=="string"?e:e(t,n);return n.writer.createElement("$marker",{"data-name":o});};}function _m(t,e){var n={};n.view=t.view+"-"+e;n.model=function(e,n){var o=e.getAttribute("name");var i=t.model(o,n);return n.writer.createElement("$marker",{"data-name":i});};return n;}var vm=/*#__PURE__*/function(){function vm(t,e){var _this61=this;_classCallCheck(this,vm);this.model=t;this.view=new vg(e);this.mapper=new zg();this.downcastDispatcher=new Fg({mapper:this.mapper,schema:t.schema});var n=this.model.document;var o=n.selection;var i=this.model.markers;this.listenTo(this.model,"_beforeChanges",function(){_this61.view._disableRendering(true);},{priority:"highest"});this.listenTo(this.model,"_afterChanges",function(){_this61.view._disableRendering(false);},{priority:"lowest"});this.listenTo(n,"change",function(){_this61.view.change(function(t){_this61.downcastDispatcher.convertChanges(n.differ,i,t);_this61.downcastDispatcher.convertSelection(o,i,t);});},{priority:"low"});this.listenTo(this.view.document,"selectionChange",im(this.model,this.mapper));this.downcastDispatcher.on("insert:$text",lp(),{priority:"lowest"});this.downcastDispatcher.on("insert",dp(),{priority:"lowest"});this.downcastDispatcher.on("remove",hp(),{priority:"low"});this.downcastDispatcher.on("selection",pp(),{priority:"high"});this.downcastDispatcher.on("selection",fp(),{priority:"low"});this.downcastDispatcher.on("selection",gp(),{priority:"low"});this.view.document.roots.bindTo(this.model.document.roots).using(function(t){if(t.rootName=="$graveyard"){return null;}var e=new td(_this61.view.document,t.name);e.rootName=t.rootName;_this61.mapper.bindElements(t,e);return e;});}_createClass(vm,[{key:"destroy",value:function destroy(){this.view.destroy();this.stopListening();}},{key:"reconvertMarker",value:function reconvertMarker(t){var _this62=this;var e=typeof t=="string"?t:t.name;var n=this.model.markers.get(e);if(!n){throw new h("editingcontroller-reconvertmarker-marker-not-exist",this,{markerName:e});}this.model.change(function(){_this62.model.markers._refresh(n);});}},{key:"reconvertItem",value:function reconvertItem(t){var _this63=this;this.model.change(function(){_this63.model.document.differ._refreshItem(t);});}}]);return vm;}();fo(vm,eo);var Am=/*#__PURE__*/function(_Symbol$iterator9){function Am(){_classCallCheck(this,Am);this._commands=new Map();}_createClass(Am,[{key:"add",value:function add(t,e){this._commands.set(t,e);}},{key:"get",value:function get(t){return this._commands.get(t);}},{key:"execute",value:function execute(t){var n=this.get(t);if(!n){throw new h("commandcollection-command-not-found",this,{commandName:t});}for(var _len18=arguments.length,e=new Array(_len18>1?_len18-1:0),_key18=1;_key18<_len18;_key18++){e[_key18-1]=arguments[_key18];}return n.execute.apply(n,e);}},{key:"names",value:/*#__PURE__*/regeneratorRuntime.mark(function names(){return regeneratorRuntime.wrap(function names$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:return _context20.delegateYield(this._commands.keys(),"t0",1);case 1:case"end":return _context20.stop();}}},names,this);})},{key:"commands",value:/*#__PURE__*/regeneratorRuntime.mark(function commands(){return regeneratorRuntime.wrap(function commands$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:return _context21.delegateYield(this._commands.values(),"t0",1);case 1:case"end":return _context21.stop();}}},commands,this);})},{key:_Symbol$iterator9,value:function value(){return this._commands[Symbol.iterator]();}},{key:"destroy",value:function destroy(){var _iterator183=_createForOfIteratorHelper(this.commands()),_step183;try{for(_iterator183.s();!(_step183=_iterator183.n()).done;){var _t138=_step183.value;_t138.destroy();}}catch(err){_iterator183.e(err);}finally{_iterator183.f();}}}]);return Am;}(Symbol.iterator);var Cm=/*#__PURE__*/function(){function Cm(){_classCallCheck(this,Cm);this._consumables=new Map();}_createClass(Cm,[{key:"add",value:function add(t,e){var n;if(t.is("$text")||t.is("documentFragment")){this._consumables.set(t,true);return;}if(!this._consumables.has(t)){n=new ym(t);this._consumables.set(t,n);}else{n=this._consumables.get(t);}n.add(e);}},{key:"test",value:function test(t,e){var n=this._consumables.get(t);if(n===undefined){return null;}if(t.is("$text")||t.is("documentFragment")){return n;}return n.test(e);}},{key:"consume",value:function consume(t,e){if(this.test(t,e)){if(t.is("$text")||t.is("documentFragment")){this._consumables.set(t,false);}else{this._consumables.get(t).consume(e);}return true;}return false;}},{key:"revert",value:function revert(t,e){var n=this._consumables.get(t);if(n!==undefined){if(t.is("$text")||t.is("documentFragment")){this._consumables.set(t,true);}else{n.revert(e);}}}}],[{key:"consumablesFromElement",value:function consumablesFromElement(t){var e={element:t,name:true,attributes:[],classes:[],styles:[]};var n=t.getAttributeKeys();var _iterator184=_createForOfIteratorHelper(n),_step184;try{for(_iterator184.s();!(_step184=_iterator184.n()).done;){var _t139=_step184.value;if(_t139=="style"||_t139=="class"){continue;}e.attributes.push(_t139);}}catch(err){_iterator184.e(err);}finally{_iterator184.f();}var o=t.getClassNames();var _iterator185=_createForOfIteratorHelper(o),_step185;try{for(_iterator185.s();!(_step185=_iterator185.n()).done;){var _t140=_step185.value;e.classes.push(_t140);}}catch(err){_iterator185.e(err);}finally{_iterator185.f();}var i=t.getStyleNames();var _iterator186=_createForOfIteratorHelper(i),_step186;try{for(_iterator186.s();!(_step186=_iterator186.n()).done;){var _t141=_step186.value;e.styles.push(_t141);}}catch(err){_iterator186.e(err);}finally{_iterator186.f();}return e;}},{key:"createFrom",value:function createFrom(t,e){if(!e){e=new Cm(t);}if(t.is("$text")){e.add(t);return e;}if(t.is("element")){e.add(t,Cm.consumablesFromElement(t));}if(t.is("documentFragment")){e.add(t);}var _iterator187=_createForOfIteratorHelper(t.getChildren()),_step187;try{for(_iterator187.s();!(_step187=_iterator187.n()).done;){var _n113=_step187.value;e=Cm.createFrom(_n113,e);}}catch(err){_iterator187.e(err);}finally{_iterator187.f();}return e;}}]);return Cm;}();var ym=/*#__PURE__*/function(){function ym(t){_classCallCheck(this,ym);this.element=t;this._canConsumeName=null;this._consumables={attributes:new Map(),styles:new Map(),classes:new Map()};}_createClass(ym,[{key:"add",value:function add(t){if(t.name){this._canConsumeName=true;}for(var _e130 in this._consumables){if(_e130 in t){this._add(_e130,t[_e130]);}}}},{key:"test",value:function test(t){if(t.name&&!this._canConsumeName){return this._canConsumeName;}for(var _e131 in this._consumables){if(_e131 in t){var _n114=this._test(_e131,t[_e131]);if(_n114!==true){return _n114;}}}return true;}},{key:"consume",value:function consume(t){if(t.name){this._canConsumeName=false;}for(var _e132 in this._consumables){if(_e132 in t){this._consume(_e132,t[_e132]);}}}},{key:"revert",value:function revert(t){if(t.name){this._canConsumeName=true;}for(var _e133 in this._consumables){if(_e133 in t){this._revert(_e133,t[_e133]);}}}},{key:"_add",value:function _add(t,e){var n=Ne(e)?e:[e];var o=this._consumables[t];var _iterator188=_createForOfIteratorHelper(n),_step188;try{for(_iterator188.s();!(_step188=_iterator188.n()).done;){var _e134=_step188.value;if(t==="attributes"&&(_e134==="class"||_e134==="style")){throw new h("viewconsumable-invalid-attribute",this);}o.set(_e134,true);if(t==="styles"){var _iterator189=_createForOfIteratorHelper(this.element.document.stylesProcessor.getRelatedStyles(_e134)),_step189;try{for(_iterator189.s();!(_step189=_iterator189.n()).done;){var _t142=_step189.value;o.set(_t142,true);}}catch(err){_iterator189.e(err);}finally{_iterator189.f();}}}}catch(err){_iterator188.e(err);}finally{_iterator188.f();}}},{key:"_test",value:function _test(t,e){var n=Ne(e)?e:[e];var o=this._consumables[t];var _iterator190=_createForOfIteratorHelper(n),_step190;try{for(_iterator190.s();!(_step190=_iterator190.n()).done;){var _e135=_step190.value;if(t==="attributes"&&(_e135==="class"||_e135==="style")){var _t143=_e135=="class"?"classes":"styles";var _n115=this._test(_t143,_toConsumableArray(this._consumables[_t143].keys()));if(_n115!==true){return _n115;}}else{var _t144=o.get(_e135);if(_t144===undefined){return null;}if(!_t144){return false;}}}}catch(err){_iterator190.e(err);}finally{_iterator190.f();}return true;}},{key:"_consume",value:function _consume(t,e){var n=Ne(e)?e:[e];var o=this._consumables[t];var _iterator191=_createForOfIteratorHelper(n),_step191;try{for(_iterator191.s();!(_step191=_iterator191.n()).done;){var _e136=_step191.value;if(t==="attributes"&&(_e136==="class"||_e136==="style")){var _t145=_e136=="class"?"classes":"styles";this._consume(_t145,_toConsumableArray(this._consumables[_t145].keys()));}else{o.set(_e136,false);if(t=="styles"){var _iterator192=_createForOfIteratorHelper(this.element.document.stylesProcessor.getRelatedStyles(_e136)),_step192;try{for(_iterator192.s();!(_step192=_iterator192.n()).done;){var _t146=_step192.value;o.set(_t146,false);}}catch(err){_iterator192.e(err);}finally{_iterator192.f();}}}}}catch(err){_iterator191.e(err);}finally{_iterator191.f();}}},{key:"_revert",value:function _revert(t,e){var n=Ne(e)?e:[e];var o=this._consumables[t];var _iterator193=_createForOfIteratorHelper(n),_step193;try{for(_iterator193.s();!(_step193=_iterator193.n()).done;){var _e137=_step193.value;if(t==="attributes"&&(_e137==="class"||_e137==="style")){var _t147=_e137=="class"?"classes":"styles";this._revert(_t147,_toConsumableArray(this._consumables[_t147].keys()));}else{var _t148=o.get(_e137);if(_t148===false){o.set(_e137,true);}}}}catch(err){_iterator193.e(err);}finally{_iterator193.f();}}}]);return ym;}();var xm=/*#__PURE__*/function(){function xm(){var _this64=this;_classCallCheck(this,xm);this._sourceDefinitions={};this._attributeProperties={};this.decorate("checkChild");this.decorate("checkAttribute");this.on("checkAttribute",function(t,e){e[0]=new Em(e[0]);},{priority:"highest"});this.on("checkChild",function(t,e){e[0]=new Em(e[0]);e[1]=_this64.getDefinition(e[1]);},{priority:"highest"});}_createClass(xm,[{key:"register",value:function register(t,e){if(this._sourceDefinitions[t]){throw new h("schema-cannot-register-item-twice",this,{itemName:t});}this._sourceDefinitions[t]=[Object.assign({},e)];this._clearCache();}},{key:"extend",value:function extend(t,e){if(!this._sourceDefinitions[t]){throw new h("schema-cannot-extend-missing-item",this,{itemName:t});}this._sourceDefinitions[t].push(Object.assign({},e));this._clearCache();}},{key:"getDefinitions",value:function getDefinitions(){if(!this._compiledDefinitions){this._compile();}return this._compiledDefinitions;}},{key:"getDefinition",value:function getDefinition(t){var e;if(typeof t=="string"){e=t;}else if(t.is&&(t.is("$text")||t.is("$textProxy"))){e="$text";}else{e=t.name;}return this.getDefinitions()[e];}},{key:"isRegistered",value:function isRegistered(t){return!!this.getDefinition(t);}},{key:"isBlock",value:function isBlock(t){var e=this.getDefinition(t);return!!(e&&e.isBlock);}},{key:"isLimit",value:function isLimit(t){var e=this.getDefinition(t);if(!e){return false;}return!!(e.isLimit||e.isObject);}},{key:"isObject",value:function isObject(t){var e=this.getDefinition(t);if(!e){return false;}return!!(e.isObject||e.isLimit&&e.isSelectable&&e.isContent);}},{key:"isInline",value:function isInline(t){var e=this.getDefinition(t);return!!(e&&e.isInline);}},{key:"isSelectable",value:function isSelectable(t){var e=this.getDefinition(t);if(!e){return false;}return!!(e.isSelectable||e.isObject);}},{key:"isContent",value:function isContent(t){var e=this.getDefinition(t);if(!e){return false;}return!!(e.isContent||e.isObject);}},{key:"checkChild",value:function checkChild(t,e){if(!e){return false;}return this._checkContextMatch(e,t);}},{key:"checkAttribute",value:function checkAttribute(t,e){var n=this.getDefinition(t.last);if(!n){return false;}return n.allowAttributes.includes(e);}},{key:"checkMerge",value:function checkMerge(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(t instanceof Tg){var _e138=t.nodeBefore;var _n116=t.nodeAfter;if(!(_e138 instanceof Eg)){throw new h("schema-check-merge-no-element-before",this);}if(!(_n116 instanceof Eg)){throw new h("schema-check-merge-no-element-after",this);}return this.checkMerge(_e138,_n116);}var _iterator194=_createForOfIteratorHelper(e.getChildren()),_step194;try{for(_iterator194.s();!(_step194=_iterator194.n()).done;){var _n117=_step194.value;if(!this.checkChild(t,_n117)){return false;}}}catch(err){_iterator194.e(err);}finally{_iterator194.f();}return true;}},{key:"addChildCheck",value:function addChildCheck(t){this.on("checkChild",function(e,_ref19){var _ref20=_slicedToArray(_ref19,2),n=_ref20[0],o=_ref20[1];if(!o){return;}var i=t(n,o);if(typeof i=="boolean"){e.stop();e.return=i;}},{priority:"high"});}},{key:"addAttributeCheck",value:function addAttributeCheck(t){this.on("checkAttribute",function(e,_ref21){var _ref22=_slicedToArray(_ref21,2),n=_ref22[0],o=_ref22[1];var i=t(n,o);if(typeof i=="boolean"){e.stop();e.return=i;}},{priority:"high"});}},{key:"setAttributeProperties",value:function setAttributeProperties(t,e){this._attributeProperties[t]=Object.assign(this.getAttributeProperties(t),e);}},{key:"getAttributeProperties",value:function getAttributeProperties(t){return this._attributeProperties[t]||{};}},{key:"getLimitElement",value:function getLimitElement(t){var e;if(t instanceof Tg){e=t.parent;}else{var _n118=t instanceof Og?[t]:Array.from(t.getRanges());e=_n118.reduce(function(t,e){var n=e.getCommonAncestor();if(!t){return n;}return t.getCommonAncestor(n,{includeSelf:true});},null);}while(!this.isLimit(e)){if(e.parent){e=e.parent;}else{break;}}return e;}},{key:"checkAttributeInSelection",value:function checkAttributeInSelection(t,e){if(t.isCollapsed){var _n119=t.getFirstPosition();var _o79=[].concat(_toConsumableArray(_n119.getAncestors()),[new Cg("",t.getAttributes())]);return this.checkAttribute(_o79,e);}else{var _n120=t.getRanges();var _iterator195=_createForOfIteratorHelper(_n120),_step195;try{for(_iterator195.s();!(_step195=_iterator195.n()).done;){var _t149=_step195.value;var _iterator196=_createForOfIteratorHelper(_t149),_step196;try{for(_iterator196.s();!(_step196=_iterator196.n()).done;){var _n121=_step196.value;if(this.checkAttribute(_n121.item,e)){return true;}}}catch(err){_iterator196.e(err);}finally{_iterator196.f();}}}catch(err){_iterator195.e(err);}finally{_iterator195.f();}}return false;}},{key:"getValidRanges",value:/*#__PURE__*/regeneratorRuntime.mark(function getValidRanges(t,e){var _iterator197,_step197,_n122;return regeneratorRuntime.wrap(function getValidRanges$(_context22){while(1){switch(_context22.prev=_context22.next){case 0:t=qm(t);_iterator197=_createForOfIteratorHelper(t);_context22.prev=2;_iterator197.s();case 4:if((_step197=_iterator197.n()).done){_context22.next=9;break;}_n122=_step197.value;return _context22.delegateYield(this._getValidRangesForRange(_n122,e),"t0",7);case 7:_context22.next=4;break;case 9:_context22.next=14;break;case 11:_context22.prev=11;_context22.t1=_context22["catch"](2);_iterator197.e(_context22.t1);case 14:_context22.prev=14;_iterator197.f();return _context22.finish(14);case 17:case"end":return _context22.stop();}}},getValidRanges,this,[[2,11,14,17]]);})},{key:"getNearestSelectionRange",value:function getNearestSelectionRange(t){var _this65=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"both";if(this.checkChild(t,"$text")){return new Og(t);}var n,o;var i=t.getAncestors().reverse().find(function(t){return _this65.isLimit(t);})||t.root;if(e=="both"||e=="backward"){n=new Sg({boundaries:Og._createIn(i),startPosition:t,direction:"backward"});}if(e=="both"||e=="forward"){o=new Sg({boundaries:Og._createIn(i),startPosition:t});}var _iterator198=_createForOfIteratorHelper(jm(n,o)),_step198;try{for(_iterator198.s();!(_step198=_iterator198.n()).done;){var _t150=_step198.value;var _e139=_t150.walker==n?"elementEnd":"elementStart";var _o80=_t150.value;if(_o80.type==_e139&&this.isObject(_o80.item)){return Og._createOn(_o80.item);}if(this.checkChild(_o80.nextPosition,"$text")){return new Og(_o80.nextPosition);}}}catch(err){_iterator198.e(err);}finally{_iterator198.f();}return null;}},{key:"findAllowedParent",value:function findAllowedParent(t,e){var n=t.parent;while(n){if(this.checkChild(n,e)){return n;}if(this.isLimit(n)){return null;}n=n.parent;}return null;}},{key:"setAllowedAttributes",value:function setAllowedAttributes(t,e,n){var o=n.model;for(var _i61=0,_Object$entries2=Object.entries(e);_i61<_Object$entries2.length;_i61++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i61],2),_i62=_Object$entries2$_i[0],_r27=_Object$entries2$_i[1];if(o.schema.checkAttribute(t,_i62)){n.setAttribute(_i62,_r27,t);}}}},{key:"removeDisallowedAttributes",value:function removeDisallowedAttributes(t,e){var _iterator199=_createForOfIteratorHelper(t),_step199;try{for(_iterator199.s();!(_step199=_iterator199.n()).done;){var _n123=_step199.value;if(_n123.is("$text")){Wm(this,_n123,e);}else{var _t151=Og._createIn(_n123);var _o81=_t151.getPositions();var _iterator200=_createForOfIteratorHelper(_o81),_step200;try{for(_iterator200.s();!(_step200=_iterator200.n()).done;){var _t152=_step200.value;var _n124=_t152.nodeBefore||_t152.parent;Wm(this,_n124,e);}}catch(err){_iterator200.e(err);}finally{_iterator200.f();}}}}catch(err){_iterator199.e(err);}finally{_iterator199.f();}}},{key:"getAttributesWithProperty",value:function getAttributesWithProperty(t,e,n){var o={};var _iterator201=_createForOfIteratorHelper(t.getAttributes()),_step201;try{for(_iterator201.s();!(_step201=_iterator201.n()).done;){var _step201$value=_slicedToArray(_step201.value,2),_i63=_step201$value[0],_r28=_step201$value[1];var _t153=this.getAttributeProperties(_i63);if(_t153[e]===undefined){continue;}if(n===undefined||n===_t153[e]){o[_i63]=_r28;}}}catch(err){_iterator201.e(err);}finally{_iterator201.f();}return o;}},{key:"createContext",value:function createContext(t){return new Em(t);}},{key:"_clearCache",value:function _clearCache(){this._compiledDefinitions=null;}},{key:"_compile",value:function _compile(){var t={};var e=this._sourceDefinitions;var n=Object.keys(e);for(var _i64=0,_n125=n;_i64<_n125.length;_i64++){var _o82=_n125[_i64];t[_o82]=Dm(e[_o82],_o82);}for(var _i65=0,_n126=n;_i65<_n126.length;_i65++){var _e140=_n126[_i65];Sm(t,_e140);}for(var _i66=0,_n127=n;_i66<_n127.length;_i66++){var _e141=_n127[_i66];Pm(t,_e141);}for(var _i67=0,_n128=n;_i67<_n128.length;_i67++){var _e142=_n128[_i67];Tm(t,_e142);}for(var _i68=0,_n129=n;_i68<_n129.length;_i68++){var _e143=_n129[_i68];Bm(t,_e143);Im(t,_e143);}for(var _i69=0,_n130=n;_i69<_n130.length;_i69++){var _e144=_n130[_i69];Rm(t,_e144);Om(t,_e144);zm(t,_e144);}this._compiledDefinitions=t;}},{key:"_checkContextMatch",value:function _checkContextMatch(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:e.length-1;var o=e.getItem(n);if(t.allowIn.includes(o.name)){if(n==0){return true;}else{var _t154=this.getDefinition(o);return this._checkContextMatch(_t154,e,n-1);}}else{return false;}}},{key:"_getValidRangesForRange",value:/*#__PURE__*/regeneratorRuntime.mark(function _getValidRangesForRange(t,e){var n,o,_iterator202,_step202,_i70;return regeneratorRuntime.wrap(function _getValidRangesForRange$(_context23){while(1){switch(_context23.prev=_context23.next){case 0:n=t.start;o=t.start;_iterator202=_createForOfIteratorHelper(t.getItems({shallow:true}));_context23.prev=3;_iterator202.s();case 5:if((_step202=_iterator202.n()).done){_context23.next=17;break;}_i70=_step202.value;if(!_i70.is("element")){_context23.next=9;break;}return _context23.delegateYield(this._getValidRangesForRange(Og._createIn(_i70),e),"t0",9);case 9:if(this.checkAttribute(_i70,e)){_context23.next=14;break;}if(n.isEqual(o)){_context23.next=13;break;}_context23.next=13;return new Og(n,o);case 13:n=Tg._createAfter(_i70);case 14:o=Tg._createAfter(_i70);case 15:_context23.next=5;break;case 17:_context23.next=22;break;case 19:_context23.prev=19;_context23.t1=_context23["catch"](3);_iterator202.e(_context23.t1);case 22:_context23.prev=22;_iterator202.f();return _context23.finish(22);case 25:if(n.isEqual(o)){_context23.next=28;break;}_context23.next=28;return new Og(n,o);case 28:case"end":return _context23.stop();}}},_getValidRangesForRange,this,[[3,19,22,25]]);})}]);return xm;}();fo(xm,eo);var Em=/*#__PURE__*/function(_Symbol$iterator10){function Em(t){_classCallCheck(this,Em);if(t instanceof Em){return t;}if(typeof t=="string"){t=[t];}else if(!Array.isArray(t)){t=t.getAncestors({includeSelf:true});}this._items=t.map(Hm);}_createClass(Em,[{key:"length",get:function get(){return this._items.length;}},{key:"last",get:function get(){return this._items[this._items.length-1];}},{key:_Symbol$iterator10,value:function value(){return this._items[Symbol.iterator]();}},{key:"push",value:function push(t){var e=new Em([t]);e._items=[].concat(_toConsumableArray(this._items),_toConsumableArray(e._items));return e;}},{key:"getItem",value:function getItem(t){return this._items[t];}},{key:"getNames",value:/*#__PURE__*/regeneratorRuntime.mark(function getNames(){return regeneratorRuntime.wrap(function getNames$(_context24){while(1){switch(_context24.prev=_context24.next){case 0:return _context24.delegateYield(this._items.map(function(t){return t.name;}),"t0",1);case 1:case"end":return _context24.stop();}}},getNames,this);})},{key:"endsWith",value:function endsWith(t){return Array.from(this.getNames()).join(" ").endsWith(t);}},{key:"startsWith",value:function startsWith(t){return Array.from(this.getNames()).join(" ").startsWith(t);}}]);return Em;}(Symbol.iterator);function Dm(t,e){var n={name:e,allowIn:[],allowContentOf:[],allowWhere:[],allowAttributes:[],allowAttributesOf:[],allowChildren:[],inheritTypesFrom:[]};Mm(t,n);Nm(t,n,"allowIn");Nm(t,n,"allowContentOf");Nm(t,n,"allowWhere");Nm(t,n,"allowAttributes");Nm(t,n,"allowAttributesOf");Nm(t,n,"allowChildren");Nm(t,n,"inheritTypesFrom");Fm(t,n);return n;}function Sm(t,e){var n=t[e];var _iterator203=_createForOfIteratorHelper(n.allowChildren),_step203;try{for(_iterator203.s();!(_step203=_iterator203.n()).done;){var _o83=_step203.value;var _n131=t[_o83];if(!_n131){continue;}_n131.allowIn.push(e);}}catch(err){_iterator203.e(err);}finally{_iterator203.f();}n.allowChildren.length=0;}function Pm(t,e){var _iterator204=_createForOfIteratorHelper(t[e].allowContentOf),_step204;try{for(_iterator204.s();!(_step204=_iterator204.n()).done;){var _n132=_step204.value;if(t[_n132]){var _o84=Vm(t,_n132);_o84.forEach(function(t){t.allowIn.push(e);});}}}catch(err){_iterator204.e(err);}finally{_iterator204.f();}delete t[e].allowContentOf;}function Tm(t,e){var _iterator205=_createForOfIteratorHelper(t[e].allowWhere),_step205;try{for(_iterator205.s();!(_step205=_iterator205.n()).done;){var _n133=_step205.value;var _o85=t[_n133];if(_o85){var _t$e$allowIn;var _n134=_o85.allowIn;(_t$e$allowIn=t[e].allowIn).push.apply(_t$e$allowIn,_toConsumableArray(_n134));}}}catch(err){_iterator205.e(err);}finally{_iterator205.f();}delete t[e].allowWhere;}function Bm(t,e){var _iterator206=_createForOfIteratorHelper(t[e].allowAttributesOf),_step206;try{for(_iterator206.s();!(_step206=_iterator206.n()).done;){var _n135=_step206.value;var _o86=t[_n135];if(_o86){var _t$e$allowAttributes;var _n136=_o86.allowAttributes;(_t$e$allowAttributes=t[e].allowAttributes).push.apply(_t$e$allowAttributes,_toConsumableArray(_n136));}}}catch(err){_iterator206.e(err);}finally{_iterator206.f();}delete t[e].allowAttributesOf;}function Im(t,e){var n=t[e];var _iterator207=_createForOfIteratorHelper(n.inheritTypesFrom),_step207;try{for(_iterator207.s();!(_step207=_iterator207.n()).done;){var _e145=_step207.value;var _o87=t[_e145];if(_o87){var _t155=Object.keys(_o87).filter(function(t){return t.startsWith("is");});var _iterator208=_createForOfIteratorHelper(_t155),_step208;try{for(_iterator208.s();!(_step208=_iterator208.n()).done;){var _e146=_step208.value;if(!(_e146 in n)){n[_e146]=_o87[_e146];}}}catch(err){_iterator208.e(err);}finally{_iterator208.f();}}}}catch(err){_iterator207.e(err);}finally{_iterator207.f();}delete n.inheritTypesFrom;}function Rm(t,e){var n=t[e];var o=n.allowIn.filter(function(e){return t[e];});n.allowIn=Array.from(new Set(o));}function Om(t,e){var n=t[e];var _iterator209=_createForOfIteratorHelper(n.allowIn),_step209;try{for(_iterator209.s();!(_step209=_iterator209.n()).done;){var _o88=_step209.value;var _n137=t[_o88];_n137.allowChildren.push(e);}}catch(err){_iterator209.e(err);}finally{_iterator209.f();}}function zm(t,e){var n=t[e];n.allowAttributes=Array.from(new Set(n.allowAttributes));}function Mm(t,e){var _iterator210=_createForOfIteratorHelper(t),_step210;try{for(_iterator210.s();!(_step210=_iterator210.n()).done;){var _n138=_step210.value;var _t156=Object.keys(_n138).filter(function(t){return t.startsWith("is");});var _iterator211=_createForOfIteratorHelper(_t156),_step211;try{for(_iterator211.s();!(_step211=_iterator211.n()).done;){var _o89=_step211.value;e[_o89]=_n138[_o89];}}catch(err){_iterator211.e(err);}finally{_iterator211.f();}}}catch(err){_iterator210.e(err);}finally{_iterator210.f();}}function Nm(t,e,n){var _iterator212=_createForOfIteratorHelper(t),_step212;try{for(_iterator212.s();!(_step212=_iterator212.n()).done;){var _o90=_step212.value;if(typeof _o90[n]=="string"){e[n].push(_o90[n]);}else if(Array.isArray(_o90[n])){var _e$n;(_e$n=e[n]).push.apply(_e$n,_toConsumableArray(_o90[n]));}}}catch(err){_iterator212.e(err);}finally{_iterator212.f();}}function Fm(t,e){var _iterator213=_createForOfIteratorHelper(t),_step213;try{for(_iterator213.s();!(_step213=_iterator213.n()).done;){var _n139=_step213.value;var _t157=_n139.inheritAllFrom;if(_t157){e.allowContentOf.push(_t157);e.allowWhere.push(_t157);e.allowAttributesOf.push(_t157);e.inheritTypesFrom.push(_t157);}}}catch(err){_iterator213.e(err);}finally{_iterator213.f();}}function Vm(t,e){var n=t[e];return Lm(t).filter(function(t){return t.allowIn.includes(n.name);});}function Lm(t){return Object.keys(t).map(function(e){return t[e];});}function Hm(t){if(typeof t=="string"||t.is("documentFragment")){return{name:typeof t=="string"?t:"$documentFragment",getAttributeKeys:/*#__PURE__*/regeneratorRuntime.mark(function getAttributeKeys(){return regeneratorRuntime.wrap(function getAttributeKeys$(_context25){while(1){switch(_context25.prev=_context25.next){case 0:case"end":return _context25.stop();}}},getAttributeKeys);}),getAttribute:function getAttribute(){}};}else{return{name:t.is("element")?t.name:"$text",getAttributeKeys:/*#__PURE__*/regeneratorRuntime.mark(function getAttributeKeys(){return regeneratorRuntime.wrap(function getAttributeKeys$(_context26){while(1){switch(_context26.prev=_context26.next){case 0:return _context26.delegateYield(t.getAttributeKeys(),"t0",1);case 1:case"end":return _context26.stop();}}},getAttributeKeys);}),getAttribute:function getAttribute(e){return t.getAttribute(e);}};}}function jm(t,e){var n,_e147,_t158;return regeneratorRuntime.wrap(function jm$(_context27){while(1){switch(_context27.prev=_context27.next){case 0:n=false;case 1:if(n){_context27.next=17;break;}n=true;if(!t){_context27.next=9;break;}_e147=t.next();if(_e147.done){_context27.next=9;break;}n=false;_context27.next=9;return{walker:t,value:_e147.value};case 9:if(!e){_context27.next=15;break;}_t158=e.next();if(_t158.done){_context27.next=15;break;}n=false;_context27.next=15;return{walker:e,value:_t158.value};case 15:_context27.next=1;break;case 17:case"end":return _context27.stop();}}},_marked);}function qm(t){var _iterator214,_step214,_e148;return regeneratorRuntime.wrap(function qm$(_context28){while(1){switch(_context28.prev=_context28.next){case 0:_iterator214=_createForOfIteratorHelper(t);_context28.prev=1;_iterator214.s();case 3:if((_step214=_iterator214.n()).done){_context28.next=8;break;}_e148=_step214.value;return _context28.delegateYield(_e148.getMinimalFlatRanges(),"t0",6);case 6:_context28.next=3;break;case 8:_context28.next=13;break;case 10:_context28.prev=10;_context28.t1=_context28["catch"](1);_iterator214.e(_context28.t1);case 13:_context28.prev=13;_iterator214.f();return _context28.finish(13);case 16:case"end":return _context28.stop();}}},_marked2,null,[[1,10,13,16]]);}function Wm(t,e,n){var _iterator215=_createForOfIteratorHelper(e.getAttributeKeys()),_step215;try{for(_iterator215.s();!(_step215=_iterator215.n()).done;){var _o91=_step215.value;if(!t.checkAttribute(e,_o91)){n.removeAttribute(_o91,e);}}}catch(err){_iterator215.e(err);}finally{_iterator215.f();}}var Km=/*#__PURE__*/function(){function Km(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Km);this._splitParts=new Map();this._cursorParents=new Map();this._modelCursor=null;this._emptyElementsToKeep=new Set();this.conversionApi=Object.assign({},t);this.conversionApi.convertItem=this._convertItem.bind(this);this.conversionApi.convertChildren=this._convertChildren.bind(this);this.conversionApi.safeInsert=this._safeInsert.bind(this);this.conversionApi.updateConversionResult=this._updateConversionResult.bind(this);this.conversionApi.splitToAllowedParent=this._splitToAllowedParent.bind(this);this.conversionApi.getSplitParts=this._getSplitParts.bind(this);this.conversionApi.keepEmptyElement=this._keepEmptyElement.bind(this);}_createClass(Km,[{key:"convert",value:function convert(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:["$root"];this.fire("viewCleanup",t);this._modelCursor=$m(n,e);this.conversionApi.writer=e;this.conversionApi.consumable=Cm.createFrom(t);this.conversionApi.store={};var _this$_convertItem=this._convertItem(t,this._modelCursor),o=_this$_convertItem.modelRange;var i=e.createDocumentFragment();if(o){this._removeEmptyElements();for(var _i71=0,_Array$from4=Array.from(this._modelCursor.parent.getChildren());_i71<_Array$from4.length;_i71++){var _t159=_Array$from4[_i71];e.append(_t159,i);}i.markers=Gm(i,e);}this._modelCursor=null;this._splitParts.clear();this._cursorParents.clear();this._emptyElementsToKeep.clear();this.conversionApi.writer=null;this.conversionApi.store=null;return i;}},{key:"_convertItem",value:function _convertItem(t,e){var n=Object.assign({viewItem:t,modelCursor:e,modelRange:null});if(t.is("element")){this.fire("element:"+t.name,n,this.conversionApi);}else if(t.is("$text")){this.fire("text",n,this.conversionApi);}else{this.fire("documentFragment",n,this.conversionApi);}if(n.modelRange&&!(n.modelRange instanceof Og)){throw new h("view-conversion-dispatcher-incorrect-result",this);}return{modelRange:n.modelRange,modelCursor:n.modelCursor};}},{key:"_convertChildren",value:function _convertChildren(t,e){var n=e.is("position")?e:Tg._createAt(e,0);var o=new Og(n);for(var _i72=0,_Array$from5=Array.from(t.getChildren());_i72<_Array$from5.length;_i72++){var _e149=_Array$from5[_i72];var _t160=this._convertItem(_e149,n);if(_t160.modelRange instanceof Og){o.end=_t160.modelRange.end;n=_t160.modelCursor;}}return{modelRange:o,modelCursor:n};}},{key:"_safeInsert",value:function _safeInsert(t,e){var n=this._splitToAllowedParent(t,e);if(!n){return false;}this.conversionApi.writer.insert(t,n.position);return true;}},{key:"_updateConversionResult",value:function _updateConversionResult(t,e){var n=this._getSplitParts(t);var o=this.conversionApi.writer;if(!e.modelRange){e.modelRange=o.createRange(o.createPositionBefore(t),o.createPositionAfter(n[n.length-1]));}var i=this._cursorParents.get(t);if(i){e.modelCursor=o.createPositionAt(i,0);}else{e.modelCursor=e.modelRange.end;}}},{key:"_splitToAllowedParent",value:function _splitToAllowedParent(t,e){var _this$conversionApi=this.conversionApi,n=_this$conversionApi.schema,o=_this$conversionApi.writer;var i=n.findAllowedParent(e,t);if(i){if(i===e.parent){return{position:e};}if(this._modelCursor.parent.getAncestors().includes(i)){i=null;}}if(!i){if(!Xp(e,t,n)){return null;}return{position:tm(e,o)};}var r=this.conversionApi.writer.split(e,i);var s=[];var _iterator216=_createForOfIteratorHelper(r.range.getWalker()),_step216;try{for(_iterator216.s();!(_step216=_iterator216.n()).done;){var _t161=_step216.value;if(_t161.type=="elementEnd"){s.push(_t161.item);}else{var _e150=s.pop();var _n140=_t161.item;this._registerSplitPair(_e150,_n140);}}}catch(err){_iterator216.e(err);}finally{_iterator216.f();}var a=r.range.end.parent;this._cursorParents.set(t,a);return{position:r.position,cursorParent:a};}},{key:"_registerSplitPair",value:function _registerSplitPair(t,e){if(!this._splitParts.has(t)){this._splitParts.set(t,[t]);}var n=this._splitParts.get(t);this._splitParts.set(e,n);n.push(e);}},{key:"_getSplitParts",value:function _getSplitParts(t){var e;if(!this._splitParts.has(t)){e=[t];}else{e=this._splitParts.get(t);}return e;}},{key:"_keepEmptyElement",value:function _keepEmptyElement(t){this._emptyElementsToKeep.add(t);}},{key:"_removeEmptyElements",value:function _removeEmptyElements(){var t=false;var _iterator217=_createForOfIteratorHelper(this._splitParts.keys()),_step217;try{for(_iterator217.s();!(_step217=_iterator217.n()).done;){var _e151=_step217.value;if(_e151.isEmpty&&!this._emptyElementsToKeep.has(_e151)){this.conversionApi.writer.remove(_e151);this._splitParts.delete(_e151);t=true;}}}catch(err){_iterator217.e(err);}finally{_iterator217.f();}if(t){this._removeEmptyElements();}}}]);return Km;}();fo(Km,C);function Gm(t,e){var n=new Set();var o=new Map();var i=Og._createIn(t).getItems();var _iterator218=_createForOfIteratorHelper(i),_step218;try{for(_iterator218.s();!(_step218=_iterator218.n()).done;){var _t162=_step218.value;if(_t162.name=="$marker"){n.add(_t162);}}}catch(err){_iterator218.e(err);}finally{_iterator218.f();}var _iterator219=_createForOfIteratorHelper(n),_step219;try{for(_iterator219.s();!(_step219=_iterator219.n()).done;){var _t163=_step219.value;var _n141=_t163.getAttribute("data-name");var _i73=e.createPositionBefore(_t163);if(!o.has(_n141)){o.set(_n141,new Og(_i73.clone()));}else{o.get(_n141).end=_i73.clone();}e.remove(_t163);}}catch(err){_iterator219.e(err);}finally{_iterator219.f();}return o;}function $m(t,e){var n;var _iterator220=_createForOfIteratorHelper(new Em(t)),_step220;try{for(_iterator220.s();!(_step220=_iterator220.n()).done;){var _o92=_step220.value;var _t164={};var _iterator221=_createForOfIteratorHelper(_o92.getAttributeKeys()),_step221;try{for(_iterator221.s();!(_step221=_iterator221.n()).done;){var _e152=_step221.value;_t164[_e152]=_o92.getAttribute(_e152);}}catch(err){_iterator221.e(err);}finally{_iterator221.f();}var _i74=e.createElement(_o92.name,_t164);if(n){e.append(_i74,n);}n=Tg._createAt(_i74,0);}}catch(err){_iterator220.e(err);}finally{_iterator220.f();}return n;}var Um=/*#__PURE__*/function(){function Um(){_classCallCheck(this,Um);}_createClass(Um,[{key:"getHtml",value:function getHtml(t){var e=document.implementation.createHTMLDocument("");var n=e.createElement("div");n.appendChild(t);return n.innerHTML;}}]);return Um;}();var Jm=/*#__PURE__*/function(){function Jm(t){_classCallCheck(this,Jm);this.domParser=new DOMParser();this.domConverter=new ru(t,{renderingMode:"data"});this.htmlWriter=new Um();}_createClass(Jm,[{key:"toData",value:function toData(t){var e=this.domConverter.viewToDom(t,document);return this.htmlWriter.getHtml(e);}},{key:"toView",value:function toView(t){var e=this._toDom(t);return this.domConverter.domToView(e);}},{key:"registerRawContentMatcher",value:function registerRawContentMatcher(t){this.domConverter.registerRawContentMatcher(t);}},{key:"useFillerType",value:function useFillerType(t){this.domConverter.blockFillerMode=t=="marked"?"markedNbsp":"nbsp";}},{key:"_toDom",value:function _toDom(t){if(!t.match(/<(?:html|body|head|meta)(?:\s[^>]*)?>/i)){t="<body>".concat(t,"</body>");}var e=this.domParser.parseFromString(t,"text/html");var n=e.createDocumentFragment();var o=e.body.childNodes;while(o.length>0){n.appendChild(o[0]);}return n;}}]);return Jm;}();var Zm=/*#__PURE__*/function(){function Zm(t,e){var _this66=this;_classCallCheck(this,Zm);this.model=t;this.mapper=new zg();this.downcastDispatcher=new Fg({mapper:this.mapper,schema:t.schema});this.downcastDispatcher.on("insert:$text",lp(),{priority:"lowest"});this.downcastDispatcher.on("insert",dp(),{priority:"lowest"});this.upcastDispatcher=new Km({schema:t.schema});this.viewDocument=new kd(e);this.stylesProcessor=e;this.htmlProcessor=new Jm(this.viewDocument);this.processor=this.htmlProcessor;this._viewWriter=new nh(this.viewDocument);this.upcastDispatcher.on("text",om(),{priority:"lowest"});this.upcastDispatcher.on("element",nm(),{priority:"lowest"});this.upcastDispatcher.on("documentFragment",nm(),{priority:"lowest"});this.decorate("init");this.decorate("set");this.decorate("get");this.on("init",function(){_this66.fire("ready");},{priority:"lowest"});this.on("ready",function(){_this66.model.enqueueChange({isUndoable:false},Qp);},{priority:"lowest"});}_createClass(Zm,[{key:"get",value:function get(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _t$rootName=t.rootName,e=_t$rootName===void 0?"main":_t$rootName,_t$trim=t.trim,n=_t$trim===void 0?"empty":_t$trim;if(!this._checkIfRootsExists([e])){throw new h("datacontroller-get-non-existent-root",this);}var o=this.model.document.getRoot(e);if(n==="empty"&&!this.model.hasContent(o,{ignoreWhitespaces:true})){return"";}return this.stringify(o,t);}},{key:"stringify",value:function stringify(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.toView(t,e);return this.processor.toData(n);}},{key:"toView",value:function toView(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.viewDocument;var o=this._viewWriter;this.mapper.clearBindings();var i=Og._createIn(t);var r=new th(n);this.mapper.bindElements(t,r);var s=t.is("documentFragment")?t.markers:Ym(t);this.downcastDispatcher.convert(i,s,o,e);return r;}},{key:"init",value:function init(t){var _this67=this;if(this.model.document.version){throw new h("datacontroller-init-document-not-empty",this);}var e={};if(typeof t==="string"){e.main=t;}else{e=t;}if(!this._checkIfRootsExists(Object.keys(e))){throw new h("datacontroller-init-non-existent-root",this);}this.model.enqueueChange({isUndoable:false},function(t){for(var _i75=0,_Object$keys2=Object.keys(e);_i75<_Object$keys2.length;_i75++){var _n142=_Object$keys2[_i75];var _o93=_this67.model.document.getRoot(_n142);t.insert(_this67.parse(e[_n142],_o93),_o93,0);}});return Promise.resolve();}},{key:"set",value:function set(t){var _this68=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n={};if(typeof t==="string"){n.main=t;}else{n=t;}if(!this._checkIfRootsExists(Object.keys(n))){throw new h("datacontroller-set-non-existent-root",this);}this.model.enqueueChange(e.batchType||{},function(t){t.setSelection(null);t.removeSelectionAttribute(_this68.model.document.selection.getAttributeKeys());for(var _i76=0,_Object$keys3=Object.keys(n);_i76<_Object$keys3.length;_i76++){var _e153=_Object$keys3[_i76];var _o94=_this68.model.document.getRoot(_e153);t.remove(t.createRangeIn(_o94));t.insert(_this68.parse(n[_e153],_o94),_o94,0);}});}},{key:"parse",value:function parse(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"$root";var n=this.processor.toView(t);return this.toModel(n,e);}},{key:"toModel",value:function toModel(t){var _this69=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"$root";return this.model.change(function(n){return _this69.upcastDispatcher.convert(t,n,e);});}},{key:"addStyleProcessorRules",value:function addStyleProcessorRules(t){t(this.stylesProcessor);}},{key:"registerRawContentMatcher",value:function registerRawContentMatcher(t){if(this.processor&&this.processor!==this.htmlProcessor){this.processor.registerRawContentMatcher(t);}this.htmlProcessor.registerRawContentMatcher(t);}},{key:"destroy",value:function destroy(){this.stopListening();}},{key:"_checkIfRootsExists",value:function _checkIfRootsExists(t){var _iterator222=_createForOfIteratorHelper(t),_step222;try{for(_iterator222.s();!(_step222=_iterator222.n()).done;){var _e154=_step222.value;if(!this.model.document.getRootNames().includes(_e154)){return false;}}}catch(err){_iterator222.e(err);}finally{_iterator222.f();}return true;}}]);return Zm;}();fo(Zm,eo);function Ym(t){var e=[];var n=t.root.document;if(!n){return new Map();}var o=Og._createIn(t);var _iterator223=_createForOfIteratorHelper(n.model.markers),_step223;try{for(_iterator223.s();!(_step223=_iterator223.n()).done;){var _t165=_step223.value;var _n143=_t165.getRange();var _i77=_n143.isCollapsed;var _r29=_n143.start.isEqual(o.start)||_n143.end.isEqual(o.end);if(_i77&&_r29){e.push([_t165.name,_n143]);}else{var _i78=o.getIntersection(_n143);if(_i78){e.push([_t165.name,_i78]);}}}}catch(err){_iterator223.e(err);}finally{_iterator223.f();}e.sort(function(_ref23,_ref24){var _ref25=_slicedToArray(_ref23,2),t=_ref25[0],e=_ref25[1];var _ref26=_slicedToArray(_ref24,2),n=_ref26[0],o=_ref26[1];if(e.end.compareWith(o.start)!=="after"){return 1;}else if(e.start.compareWith(o.end)!=="before"){return-1;}else{switch(e.start.compareWith(o.start)){case"before":return 1;case"after":return-1;default:switch(e.end.compareWith(o.end)){case"before":return 1;case"after":return-1;default:return n.localeCompare(t);}}}});return new Map(e);}var Qm=/*#__PURE__*/function(){function Qm(t,e){_classCallCheck(this,Qm);this._helpers=new Map();this._downcast=Ya(t);this._createConversionHelpers({name:"downcast",dispatchers:this._downcast,isDowncast:true});this._upcast=Ya(e);this._createConversionHelpers({name:"upcast",dispatchers:this._upcast,isDowncast:false});}_createClass(Qm,[{key:"addAlias",value:function addAlias(t,e){var n=this._downcast.includes(e);var o=this._upcast.includes(e);if(!o&&!n){throw new h("conversion-add-alias-dispatcher-not-registered",this);}this._createConversionHelpers({name:t,dispatchers:[e],isDowncast:n});}},{key:"for",value:function _for(t){if(!this._helpers.has(t)){throw new h("conversion-for-unknown-group",this);}return this._helpers.get(t);}},{key:"elementToElement",value:function elementToElement(t){this.for("downcast").elementToElement(t);var _iterator224=_createForOfIteratorHelper(Xm(t)),_step224;try{for(_iterator224.s();!(_step224=_iterator224.n()).done;){var _step224$value=_step224.value,_e155=_step224$value.model,_n144=_step224$value.view;this.for("upcast").elementToElement({model:_e155,view:_n144,converterPriority:t.converterPriority});}}catch(err){_iterator224.e(err);}finally{_iterator224.f();}}},{key:"attributeToElement",value:function attributeToElement(t){this.for("downcast").attributeToElement(t);var _iterator225=_createForOfIteratorHelper(Xm(t)),_step225;try{for(_iterator225.s();!(_step225=_iterator225.n()).done;){var _step225$value=_step225.value,_e156=_step225$value.model,_n145=_step225$value.view;this.for("upcast").elementToAttribute({view:_n145,model:_e156,converterPriority:t.converterPriority});}}catch(err){_iterator225.e(err);}finally{_iterator225.f();}}},{key:"attributeToAttribute",value:function attributeToAttribute(t){this.for("downcast").attributeToAttribute(t);var _iterator226=_createForOfIteratorHelper(Xm(t)),_step226;try{for(_iterator226.s();!(_step226=_iterator226.n()).done;){var _step226$value=_step226.value,_e157=_step226$value.model,_n146=_step226$value.view;this.for("upcast").attributeToAttribute({view:_n146,model:_e157});}}catch(err){_iterator226.e(err);}finally{_iterator226.f();}}},{key:"_createConversionHelpers",value:function _createConversionHelpers(_ref27){var t=_ref27.name,e=_ref27.dispatchers,n=_ref27.isDowncast;if(this._helpers.has(t)){throw new h("conversion-group-exists",this);}var o=n?new cp(e):new em(e);this._helpers.set(t,o);}}]);return Qm;}();function Xm(t){var _iterator227,_step227,_e158,_n147,_o95,_i79;return regeneratorRuntime.wrap(function Xm$(_context29){while(1){switch(_context29.prev=_context29.next){case 0:if(!t.model.values){_context29.next=22;break;}_iterator227=_createForOfIteratorHelper(t.model.values);_context29.prev=2;_iterator227.s();case 4:if((_step227=_iterator227.n()).done){_context29.next=12;break;}_e158=_step227.value;_n147={key:t.model.key,value:_e158};_o95=t.view[_e158];_i79=t.upcastAlso?t.upcastAlso[_e158]:undefined;return _context29.delegateYield(tk(_n147,_o95,_i79),"t0",10);case 10:_context29.next=4;break;case 12:_context29.next=17;break;case 14:_context29.prev=14;_context29.t1=_context29["catch"](2);_iterator227.e(_context29.t1);case 17:_context29.prev=17;_iterator227.f();return _context29.finish(17);case 20:_context29.next=23;break;case 22:return _context29.delegateYield(tk(t.model,t.view,t.upcastAlso),"t2",23);case 23:case"end":return _context29.stop();}}},_marked3,null,[[2,14,17,20]]);}function tk(t,e,n){var _iterator228,_step228,_e159;return regeneratorRuntime.wrap(function tk$(_context30){while(1){switch(_context30.prev=_context30.next){case 0:_context30.next=2;return{model:t,view:e};case 2:if(!n){_context30.next=20;break;}_iterator228=_createForOfIteratorHelper(Ya(n));_context30.prev=4;_iterator228.s();case 6:if((_step228=_iterator228.n()).done){_context30.next=12;break;}_e159=_step228.value;_context30.next=10;return{model:t,view:_e159};case 10:_context30.next=6;break;case 12:_context30.next=17;break;case 14:_context30.prev=14;_context30.t0=_context30["catch"](4);_iterator228.e(_context30.t0);case 17:_context30.prev=17;_iterator228.f();return _context30.finish(17);case 20:case"end":return _context30.stop();}}},_marked4,null,[[4,14,17,20]]);}var ek=/*#__PURE__*/function(){function ek(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,ek);if(typeof t==="string"){t=t==="transparent"?{isUndoable:false}:{};u("batch-constructor-deprecated-string-type");}var _t166=t,_t166$isUndoable=_t166.isUndoable,e=_t166$isUndoable===void 0?true:_t166$isUndoable,_t166$isLocal=_t166.isLocal,n=_t166$isLocal===void 0?true:_t166$isLocal,_t166$isUndo=_t166.isUndo,o=_t166$isUndo===void 0?false:_t166$isUndo,_t166$isTyping=_t166.isTyping,i=_t166$isTyping===void 0?false:_t166$isTyping;this.operations=[];this.isUndoable=e;this.isLocal=n;this.isUndo=o;this.isTyping=i;}_createClass(ek,[{key:"type",get:function get(){u("batch-type-deprecated");return"default";}},{key:"baseVersion",get:function get(){var _iterator229=_createForOfIteratorHelper(this.operations),_step229;try{for(_iterator229.s();!(_step229=_iterator229.n()).done;){var _t167=_step229.value;if(_t167.baseVersion!==null){return _t167.baseVersion;}}}catch(err){_iterator229.e(err);}finally{_iterator229.f();}return null;}},{key:"addOperation",value:function addOperation(t){t.batch=this;this.operations.push(t);return t;}}]);return ek;}();var nk=/*#__PURE__*/function(){function nk(t){_classCallCheck(this,nk);this.baseVersion=t;this.isDocumentOperation=this.baseVersion!==null;this.batch=null;}_createClass(nk,[{key:"_validate",value:function _validate(){}},{key:"toJSON",value:function toJSON(){var t=Object.assign({},this);t.__className=this.constructor.className;delete t.batch;delete t.isDocumentOperation;return t;}}],[{key:"className",get:function get(){return"Operation";}},{key:"fromJSON",value:function fromJSON(t){return new this(t.baseVersion);}}]);return nk;}();var ok=/*#__PURE__*/function(_Symbol$iterator11){function ok(t){_classCallCheck(this,ok);this.markers=new Map();this._children=new xg();if(t){this._insertChild(0,t);}}_createClass(ok,[{key:_Symbol$iterator11,value:function value(){return this.getChildren();}},{key:"childCount",get:function get(){return this._children.length;}},{key:"maxOffset",get:function get(){return this._children.maxOffset;}},{key:"isEmpty",get:function get(){return this.childCount===0;}},{key:"root",get:function get(){return this;}},{key:"parent",get:function get(){return null;}},{key:"is",value:function is(t){return t==="documentFragment"||t==="model:documentFragment";}},{key:"getChild",value:function getChild(t){return this._children.getNode(t);}},{key:"getChildren",value:function getChildren(){return this._children[Symbol.iterator]();}},{key:"getChildIndex",value:function getChildIndex(t){return this._children.getNodeIndex(t);}},{key:"getChildStartOffset",value:function getChildStartOffset(t){return this._children.getNodeStartOffset(t);}},{key:"getPath",value:function getPath(){return[];}},{key:"getNodeByPath",value:function getNodeByPath(t){var e=this;var _iterator230=_createForOfIteratorHelper(t),_step230;try{for(_iterator230.s();!(_step230=_iterator230.n()).done;){var _n148=_step230.value;e=e.getChild(e.offsetToIndex(_n148));}}catch(err){_iterator230.e(err);}finally{_iterator230.f();}return e;}},{key:"offsetToIndex",value:function offsetToIndex(t){return this._children.offsetToIndex(t);}},{key:"toJSON",value:function toJSON(){var t=[];var _iterator231=_createForOfIteratorHelper(this._children),_step231;try{for(_iterator231.s();!(_step231=_iterator231.n()).done;){var _e160=_step231.value;t.push(_e160.toJSON());}}catch(err){_iterator231.e(err);}finally{_iterator231.f();}return t;}},{key:"_appendChild",value:function _appendChild(t){this._insertChild(this.childCount,t);}},{key:"_insertChild",value:function _insertChild(t,e){var n=ik(e);var _iterator232=_createForOfIteratorHelper(n),_step232;try{for(_iterator232.s();!(_step232=_iterator232.n()).done;){var _t168=_step232.value;if(_t168.parent!==null){_t168._remove();}_t168.parent=this;}}catch(err){_iterator232.e(err);}finally{_iterator232.f();}this._children._insertNodes(t,n);}},{key:"_removeChildren",value:function _removeChildren(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var n=this._children._removeNodes(t,e);var _iterator233=_createForOfIteratorHelper(n),_step233;try{for(_iterator233.s();!(_step233=_iterator233.n()).done;){var _t169=_step233.value;_t169.parent=null;}}catch(err){_iterator233.e(err);}finally{_iterator233.f();}return n;}}],[{key:"fromJSON",value:function fromJSON(t){var e=[];var _iterator234=_createForOfIteratorHelper(t),_step234;try{for(_iterator234.s();!(_step234=_iterator234.n()).done;){var _n149=_step234.value;if(_n149.name){e.push(Eg.fromJSON(_n149));}else{e.push(Cg.fromJSON(_n149));}}}catch(err){_iterator234.e(err);}finally{_iterator234.f();}return new ok(e);}}]);return ok;}(Symbol.iterator);function ik(t){if(typeof t=="string"){return[new Cg(t)];}if(!Ua(t)){t=[t];}return Array.from(t).map(function(t){if(typeof t=="string"){return new Cg(t);}if(t instanceof yg){return new Cg(t.data,t.getAttributes());}return t;});}function rk(t,e){e=lk(e);var n=e.reduce(function(t,e){return t+e.offsetSize;},0);var o=t.parent;hk(t);var i=t.index;o._insertChild(i,e);dk(o,i+e.length);dk(o,i);return new Og(t,t.getShiftedBy(n));}function sk(t){if(!t.isFlat){throw new h("operation-utils-remove-range-not-flat",this);}var e=t.start.parent;hk(t.start);hk(t.end);var n=e._removeChildren(t.start.index,t.end.index-t.start.index);dk(e,t.start.index);return n;}function ak(t,e){if(!t.isFlat){throw new h("operation-utils-move-range-not-flat",this);}var n=sk(t);e=e._getTransformedByDeletion(t.start,t.end.offset-t.start.offset);return rk(e,n);}function ck(t,e,n){hk(t.start);hk(t.end);var _iterator235=_createForOfIteratorHelper(t.getItems({shallow:true})),_step235;try{for(_iterator235.s();!(_step235=_iterator235.n()).done;){var _o96=_step235.value;var _t170=_o96.is("$textProxy")?_o96.textNode:_o96;if(n!==null){_t170._setAttribute(e,n);}else{_t170._removeAttribute(e);}dk(_t170.parent,_t170.index);}}catch(err){_iterator235.e(err);}finally{_iterator235.f();}dk(t.end.parent,t.end.index);}function lk(t){var e=[];if(!(t instanceof Array)){t=[t];}for(var _n150=0;_n150<t.length;_n150++){if(typeof t[_n150]=="string"){e.push(new Cg(t[_n150]));}else if(t[_n150]instanceof yg){e.push(new Cg(t[_n150].data,t[_n150].getAttributes()));}else if(t[_n150]instanceof ok||t[_n150]instanceof xg){var _iterator236=_createForOfIteratorHelper(t[_n150]),_step236;try{for(_iterator236.s();!(_step236=_iterator236.n()).done;){var _o97=_step236.value;e.push(_o97);}}catch(err){_iterator236.e(err);}finally{_iterator236.f();}}else if(t[_n150]instanceof Ag){e.push(t[_n150]);}}for(var _t171=1;_t171<e.length;_t171++){var _n151=e[_t171];var _o98=e[_t171-1];if(_n151 instanceof Cg&&_o98 instanceof Cg&&uk(_n151,_o98)){e.splice(_t171-1,2,new Cg(_o98.data+_n151.data,_o98.getAttributes()));_t171--;}}return e;}function dk(t,e){var n=t.getChild(e-1);var o=t.getChild(e);if(n&&o&&n.is("$text")&&o.is("$text")&&uk(n,o)){var _i80=new Cg(n.data+o.data,n.getAttributes());t._removeChildren(e-1,2);t._insertChild(e-1,_i80);}}function hk(t){var e=t.textNode;var n=t.parent;if(e){var _o99=t.offset-e.startOffset;var _i81=e.index;n._removeChildren(_i81,1);var _r30=new Cg(e.data.substr(0,_o99),e.getAttributes());var _s15=new Cg(e.data.substr(_o99),e.getAttributes());n._insertChild(_i81,[_r30,_s15]);}}function uk(t,e){var n=t.getAttributes();var o=e.getAttributes();var _iterator237=_createForOfIteratorHelper(n),_step237;try{for(_iterator237.s();!(_step237=_iterator237.n()).done;){var _t172=_step237.value;if(_t172[1]!==e.getAttribute(_t172[0])){return false;}o.next();}}catch(err){_iterator237.e(err);}finally{_iterator237.f();}return o.next().done;}function fk(t,e){return pf(t,e);}var gk=fk;var pk=/*#__PURE__*/function(_nk){_inherits(pk,_nk);var _super29=_createSuper(pk);function pk(t,e,n,o,i){var _this70;_classCallCheck(this,pk);_this70=_super29.call(this,i);_this70.range=t.clone();_this70.key=e;_this70.oldValue=n===undefined?null:n;_this70.newValue=o===undefined?null:o;return _this70;}_createClass(pk,[{key:"type",get:function get(){if(this.oldValue===null){return"addAttribute";}else if(this.newValue===null){return"removeAttribute";}else{return"changeAttribute";}}},{key:"clone",value:function clone(){return new pk(this.range,this.key,this.oldValue,this.newValue,this.baseVersion);}},{key:"getReversed",value:function getReversed(){return new pk(this.range,this.key,this.newValue,this.oldValue,this.baseVersion+1);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(pk.prototype),"toJSON",this).call(this);t.range=this.range.toJSON();return t;}},{key:"_validate",value:function _validate(){if(!this.range.isFlat){throw new h("attribute-operation-range-not-flat",this);}var _iterator238=_createForOfIteratorHelper(this.range.getItems({shallow:true})),_step238;try{for(_iterator238.s();!(_step238=_iterator238.n()).done;){var _t173=_step238.value;if(this.oldValue!==null&&!gk(_t173.getAttribute(this.key),this.oldValue)){throw new h("attribute-operation-wrong-old-value",this,{item:_t173,key:this.key,value:this.oldValue});}if(this.oldValue===null&&this.newValue!==null&&_t173.hasAttribute(this.key)){throw new h("attribute-operation-attribute-exists",this,{node:_t173,key:this.key});}}}catch(err){_iterator238.e(err);}finally{_iterator238.f();}}},{key:"_execute",value:function _execute(){if(!gk(this.oldValue,this.newValue)){ck(this.range,this.key,this.newValue);}}}],[{key:"className",get:function get(){return"AttributeOperation";}},{key:"fromJSON",value:function fromJSON(t,e){return new pk(Og.fromJSON(t.range,e),t.key,t.oldValue,t.newValue,t.baseVersion);}}]);return pk;}(nk);var mk=/*#__PURE__*/function(_nk2){_inherits(mk,_nk2);var _super30=_createSuper(mk);function mk(t,e){var _this71;_classCallCheck(this,mk);_this71=_super30.call(this,null);_this71.sourcePosition=t.clone();_this71.howMany=e;return _this71;}_createClass(mk,[{key:"type",get:function get(){return"detach";}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(mk.prototype),"toJSON",this).call(this);t.sourcePosition=this.sourcePosition.toJSON();return t;}},{key:"_validate",value:function _validate(){if(this.sourcePosition.root.document){throw new h("detach-operation-on-document-node",this);}}},{key:"_execute",value:function _execute(){sk(Og._createFromPositionAndShift(this.sourcePosition,this.howMany));}}],[{key:"className",get:function get(){return"DetachOperation";}}]);return mk;}(nk);var kk=/*#__PURE__*/function(_nk3){_inherits(kk,_nk3);var _super31=_createSuper(kk);function kk(t,e,n,o){var _this72;_classCallCheck(this,kk);_this72=_super31.call(this,o);_this72.sourcePosition=t.clone();_this72.sourcePosition.stickiness="toNext";_this72.howMany=e;_this72.targetPosition=n.clone();_this72.targetPosition.stickiness="toNone";return _this72;}_createClass(kk,[{key:"type",get:function get(){if(this.targetPosition.root.rootName=="$graveyard"){return"remove";}else if(this.sourcePosition.root.rootName=="$graveyard"){return"reinsert";}return"move";}},{key:"clone",value:function clone(){return new this.constructor(this.sourcePosition,this.howMany,this.targetPosition,this.baseVersion);}},{key:"getMovedRangeStart",value:function getMovedRangeStart(){return this.targetPosition._getTransformedByDeletion(this.sourcePosition,this.howMany);}},{key:"getReversed",value:function getReversed(){var t=this.sourcePosition._getTransformedByInsertion(this.targetPosition,this.howMany);return new this.constructor(this.getMovedRangeStart(),this.howMany,t,this.baseVersion+1);}},{key:"_validate",value:function _validate(){var t=this.sourcePosition.parent;var e=this.targetPosition.parent;var n=this.sourcePosition.offset;var o=this.targetPosition.offset;if(n+this.howMany>t.maxOffset){throw new h("move-operation-nodes-do-not-exist",this);}else if(t===e&&n<o&&o<n+this.howMany){throw new h("move-operation-range-into-itself",this);}else if(this.sourcePosition.root==this.targetPosition.root){if(lc(this.sourcePosition.getParentPath(),this.targetPosition.getParentPath())=="prefix"){var _t174=this.sourcePosition.path.length-1;if(this.targetPosition.path[_t174]>=n&&this.targetPosition.path[_t174]<n+this.howMany){throw new h("move-operation-node-into-itself",this);}}}}},{key:"_execute",value:function _execute(){ak(Og._createFromPositionAndShift(this.sourcePosition,this.howMany),this.targetPosition);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(kk.prototype),"toJSON",this).call(this);t.sourcePosition=this.sourcePosition.toJSON();t.targetPosition=this.targetPosition.toJSON();return t;}}],[{key:"className",get:function get(){return"MoveOperation";}},{key:"fromJSON",value:function fromJSON(t,e){var n=Tg.fromJSON(t.sourcePosition,e);var o=Tg.fromJSON(t.targetPosition,e);return new this(n,t.howMany,o,t.baseVersion);}}]);return kk;}(nk);var bk=/*#__PURE__*/function(_nk4){_inherits(bk,_nk4);var _super32=_createSuper(bk);function bk(t,e,n){var _this73;_classCallCheck(this,bk);_this73=_super32.call(this,n);_this73.position=t.clone();_this73.position.stickiness="toNone";_this73.nodes=new xg(lk(e));_this73.shouldReceiveAttributes=false;return _this73;}_createClass(bk,[{key:"type",get:function get(){return"insert";}},{key:"howMany",get:function get(){return this.nodes.maxOffset;}},{key:"clone",value:function clone(){var t=new xg(_toConsumableArray(this.nodes).map(function(t){return t._clone(true);}));var e=new bk(this.position,t,this.baseVersion);e.shouldReceiveAttributes=this.shouldReceiveAttributes;return e;}},{key:"getReversed",value:function getReversed(){var t=this.position.root.document.graveyard;var e=new Tg(t,[0]);return new kk(this.position,this.nodes.maxOffset,e,this.baseVersion+1);}},{key:"_validate",value:function _validate(){var t=this.position.parent;if(!t||t.maxOffset<this.position.offset){throw new h("insert-operation-position-invalid",this);}}},{key:"_execute",value:function _execute(){var t=this.nodes;this.nodes=new xg(_toConsumableArray(t).map(function(t){return t._clone(true);}));rk(this.position,t);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(bk.prototype),"toJSON",this).call(this);t.position=this.position.toJSON();t.nodes=this.nodes.toJSON();return t;}}],[{key:"className",get:function get(){return"InsertOperation";}},{key:"fromJSON",value:function fromJSON(t,e){var n=[];var _iterator239=_createForOfIteratorHelper(t.nodes),_step239;try{for(_iterator239.s();!(_step239=_iterator239.n()).done;){var _e161=_step239.value;if(_e161.name){n.push(Eg.fromJSON(_e161));}else{n.push(Cg.fromJSON(_e161));}}}catch(err){_iterator239.e(err);}finally{_iterator239.f();}var o=new bk(Tg.fromJSON(t.position,e),n,t.baseVersion);o.shouldReceiveAttributes=t.shouldReceiveAttributes;return o;}}]);return bk;}(nk);var wk=/*#__PURE__*/function(_nk5){_inherits(wk,_nk5);var _super33=_createSuper(wk);function wk(t,e,n,o,i,r){var _this74;_classCallCheck(this,wk);_this74=_super33.call(this,r);_this74.name=t;_this74.oldRange=e?e.clone():null;_this74.newRange=n?n.clone():null;_this74.affectsData=i;_this74._markers=o;return _this74;}_createClass(wk,[{key:"type",get:function get(){return"marker";}},{key:"clone",value:function clone(){return new wk(this.name,this.oldRange,this.newRange,this._markers,this.affectsData,this.baseVersion);}},{key:"getReversed",value:function getReversed(){return new wk(this.name,this.newRange,this.oldRange,this._markers,this.affectsData,this.baseVersion+1);}},{key:"_execute",value:function _execute(){var t=this.newRange?"_set":"_remove";this._markers[t](this.name,this.newRange,true,this.affectsData);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(wk.prototype),"toJSON",this).call(this);if(this.oldRange){t.oldRange=this.oldRange.toJSON();}if(this.newRange){t.newRange=this.newRange.toJSON();}delete t._markers;return t;}}],[{key:"className",get:function get(){return"MarkerOperation";}},{key:"fromJSON",value:function fromJSON(t,e){return new wk(t.name,t.oldRange?Og.fromJSON(t.oldRange,e):null,t.newRange?Og.fromJSON(t.newRange,e):null,e.model.markers,t.affectsData,t.baseVersion);}}]);return wk;}(nk);var _k=/*#__PURE__*/function(_nk6){_inherits(_k,_nk6);var _super34=_createSuper(_k);function _k(t,e,n,o){var _this75;_classCallCheck(this,_k);_this75=_super34.call(this,o);_this75.position=t;_this75.position.stickiness="toNext";_this75.oldName=e;_this75.newName=n;return _this75;}_createClass(_k,[{key:"type",get:function get(){return"rename";}},{key:"clone",value:function clone(){return new _k(this.position.clone(),this.oldName,this.newName,this.baseVersion);}},{key:"getReversed",value:function getReversed(){return new _k(this.position.clone(),this.newName,this.oldName,this.baseVersion+1);}},{key:"_validate",value:function _validate(){var t=this.position.nodeAfter;if(!(t instanceof Eg)){throw new h("rename-operation-wrong-position",this);}else if(t.name!==this.oldName){throw new h("rename-operation-wrong-name",this);}}},{key:"_execute",value:function _execute(){var t=this.position.nodeAfter;t.name=this.newName;}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(_k.prototype),"toJSON",this).call(this);t.position=this.position.toJSON();return t;}}],[{key:"className",get:function get(){return"RenameOperation";}},{key:"fromJSON",value:function fromJSON(t,e){return new _k(Tg.fromJSON(t.position,e),t.oldName,t.newName,t.baseVersion);}}]);return _k;}(nk);var vk=/*#__PURE__*/function(_nk7){_inherits(vk,_nk7);var _super35=_createSuper(vk);function vk(t,e,n,o,i){var _this76;_classCallCheck(this,vk);_this76=_super35.call(this,i);_this76.root=t;_this76.key=e;_this76.oldValue=n;_this76.newValue=o;return _this76;}_createClass(vk,[{key:"type",get:function get(){if(this.oldValue===null){return"addRootAttribute";}else if(this.newValue===null){return"removeRootAttribute";}else{return"changeRootAttribute";}}},{key:"clone",value:function clone(){return new vk(this.root,this.key,this.oldValue,this.newValue,this.baseVersion);}},{key:"getReversed",value:function getReversed(){return new vk(this.root,this.key,this.newValue,this.oldValue,this.baseVersion+1);}},{key:"_validate",value:function _validate(){if(this.root!=this.root.root||this.root.is("documentFragment")){throw new h("rootattribute-operation-not-a-root",this,{root:this.root,key:this.key});}if(this.oldValue!==null&&this.root.getAttribute(this.key)!==this.oldValue){throw new h("rootattribute-operation-wrong-old-value",this,{root:this.root,key:this.key});}if(this.oldValue===null&&this.newValue!==null&&this.root.hasAttribute(this.key)){throw new h("rootattribute-operation-attribute-exists",this,{root:this.root,key:this.key});}}},{key:"_execute",value:function _execute(){if(this.newValue!==null){this.root._setAttribute(this.key,this.newValue);}else{this.root._removeAttribute(this.key);}}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(vk.prototype),"toJSON",this).call(this);t.root=this.root.toJSON();return t;}}],[{key:"className",get:function get(){return"RootAttributeOperation";}},{key:"fromJSON",value:function fromJSON(t,e){if(!e.getRoot(t.root)){throw new h("rootattribute-operation-fromjson-no-root",this,{rootName:t.root});}return new vk(e.getRoot(t.root),t.key,t.oldValue,t.newValue,t.baseVersion);}}]);return vk;}(nk);var Ak=/*#__PURE__*/function(_nk8){_inherits(Ak,_nk8);var _super36=_createSuper(Ak);function Ak(t,e,n,o,i){var _this77;_classCallCheck(this,Ak);_this77=_super36.call(this,i);_this77.sourcePosition=t.clone();_this77.sourcePosition.stickiness="toPrevious";_this77.howMany=e;_this77.targetPosition=n.clone();_this77.targetPosition.stickiness="toNext";_this77.graveyardPosition=o.clone();return _this77;}_createClass(Ak,[{key:"type",get:function get(){return"merge";}},{key:"deletionPosition",get:function get(){return new Tg(this.sourcePosition.root,this.sourcePosition.path.slice(0,-1));}},{key:"movedRange",get:function get(){var t=this.sourcePosition.getShiftedBy(Number.POSITIVE_INFINITY);return new Og(this.sourcePosition,t);}},{key:"clone",value:function clone(){return new this.constructor(this.sourcePosition,this.howMany,this.targetPosition,this.graveyardPosition,this.baseVersion);}},{key:"getReversed",value:function getReversed(){var t=this.targetPosition._getTransformedByMergeOperation(this);var e=this.sourcePosition.path.slice(0,-1);var n=new Tg(this.sourcePosition.root,e)._getTransformedByMergeOperation(this);return new Ck(t,this.howMany,n,this.graveyardPosition,this.baseVersion+1);}},{key:"_validate",value:function _validate(){var t=this.sourcePosition.parent;var e=this.targetPosition.parent;if(!t.parent){throw new h("merge-operation-source-position-invalid",this);}else if(!e.parent){throw new h("merge-operation-target-position-invalid",this);}else if(this.howMany!=t.maxOffset){throw new h("merge-operation-how-many-invalid",this);}}},{key:"_execute",value:function _execute(){var t=this.sourcePosition.parent;var e=Og._createIn(t);ak(e,this.targetPosition);ak(Og._createOn(t),this.graveyardPosition);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(Ak.prototype),"toJSON",this).call(this);t.sourcePosition=t.sourcePosition.toJSON();t.targetPosition=t.targetPosition.toJSON();t.graveyardPosition=t.graveyardPosition.toJSON();return t;}}],[{key:"className",get:function get(){return"MergeOperation";}},{key:"fromJSON",value:function fromJSON(t,e){var n=Tg.fromJSON(t.sourcePosition,e);var o=Tg.fromJSON(t.targetPosition,e);var i=Tg.fromJSON(t.graveyardPosition,e);return new this(n,t.howMany,o,i,t.baseVersion);}}]);return Ak;}(nk);var Ck=/*#__PURE__*/function(_nk9){_inherits(Ck,_nk9);var _super37=_createSuper(Ck);function Ck(t,e,n,o,i){var _this78;_classCallCheck(this,Ck);_this78=_super37.call(this,i);_this78.splitPosition=t.clone();_this78.splitPosition.stickiness="toNext";_this78.howMany=e;_this78.insertionPosition=n;_this78.graveyardPosition=o?o.clone():null;if(_this78.graveyardPosition){_this78.graveyardPosition.stickiness="toNext";}return _this78;}_createClass(Ck,[{key:"type",get:function get(){return"split";}},{key:"moveTargetPosition",get:function get(){var t=this.insertionPosition.path.slice();t.push(0);return new Tg(this.insertionPosition.root,t);}},{key:"movedRange",get:function get(){var t=this.splitPosition.getShiftedBy(Number.POSITIVE_INFINITY);return new Og(this.splitPosition,t);}},{key:"clone",value:function clone(){return new this.constructor(this.splitPosition,this.howMany,this.insertionPosition,this.graveyardPosition,this.baseVersion);}},{key:"getReversed",value:function getReversed(){var t=this.splitPosition.root.document.graveyard;var e=new Tg(t,[0]);return new Ak(this.moveTargetPosition,this.howMany,this.splitPosition,e,this.baseVersion+1);}},{key:"_validate",value:function _validate(){var t=this.splitPosition.parent;var e=this.splitPosition.offset;if(!t||t.maxOffset<e){throw new h("split-operation-position-invalid",this);}else if(!t.parent){throw new h("split-operation-split-in-root",this);}else if(this.howMany!=t.maxOffset-this.splitPosition.offset){throw new h("split-operation-how-many-invalid",this);}else if(this.graveyardPosition&&!this.graveyardPosition.nodeAfter){throw new h("split-operation-graveyard-position-invalid",this);}}},{key:"_execute",value:function _execute(){var t=this.splitPosition.parent;if(this.graveyardPosition){ak(Og._createFromPositionAndShift(this.graveyardPosition,1),this.insertionPosition);}else{var _e162=t._clone();rk(this.insertionPosition,_e162);}var e=new Og(Tg._createAt(t,this.splitPosition.offset),Tg._createAt(t,t.maxOffset));ak(e,this.moveTargetPosition);}},{key:"toJSON",value:function toJSON(){var t=_get(_getPrototypeOf(Ck.prototype),"toJSON",this).call(this);t.splitPosition=this.splitPosition.toJSON();t.insertionPosition=this.insertionPosition.toJSON();if(this.graveyardPosition){t.graveyardPosition=this.graveyardPosition.toJSON();}return t;}}],[{key:"className",get:function get(){return"SplitOperation";}},{key:"getInsertionPosition",value:function getInsertionPosition(t){var e=t.path.slice(0,-1);e[e.length-1]++;return new Tg(t.root,e,"toPrevious");}},{key:"fromJSON",value:function fromJSON(t,e){var n=Tg.fromJSON(t.splitPosition,e);var o=Tg.fromJSON(t.insertionPosition,e);var i=t.graveyardPosition?Tg.fromJSON(t.graveyardPosition,e):null;return new this(n,t.howMany,o,i,t.baseVersion);}}]);return Ck;}(nk);var yk=/*#__PURE__*/function(_Eg){_inherits(yk,_Eg);var _super38=_createSuper(yk);function yk(t,e){var _this79;var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"main";_classCallCheck(this,yk);_this79=_super38.call(this,e);_this79._document=t;_this79.rootName=n;return _this79;}_createClass(yk,[{key:"document",get:function get(){return this._document;}},{key:"is",value:function is(t,e){if(!e){return t==="rootElement"||t==="model:rootElement"||t==="element"||t==="model:element"||t==="node"||t==="model:node";}return e===this.name&&(t==="rootElement"||t==="model:rootElement"||t==="element"||t==="model:element");}},{key:"toJSON",value:function toJSON(){return this.rootName;}}]);return yk;}(Eg);var xk=/*#__PURE__*/function(){function xk(t,e){_classCallCheck(this,xk);this.model=t;this.batch=e;}_createClass(xk,[{key:"createText",value:function createText(t,e){return new Cg(t,e);}},{key:"createElement",value:function createElement(t,e){return new Eg(t,e);}},{key:"createDocumentFragment",value:function createDocumentFragment(){return new ok();}},{key:"cloneElement",value:function cloneElement(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return t._clone(e);}},{key:"insert",value:function insert(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;this._assertWriterUsedCorrectly();if(t instanceof Cg&&t.data==""){return;}var o=Tg._createAt(e,n);if(t.parent){if(Tk(t.root,o.root)){this.move(Og._createOn(t),o);return;}else{if(t.root.document){throw new h("model-writer-insert-forbidden-move",this);}else{this.remove(t);}}}var i=o.root.document?o.root.document.version:null;var r=new bk(o,t,i);if(t instanceof Cg){r.shouldReceiveAttributes=true;}this.batch.addOperation(r);this.model.applyOperation(r);if(t instanceof ok){var _iterator240=_createForOfIteratorHelper(t.markers),_step240;try{for(_iterator240.s();!(_step240=_iterator240.n()).done;){var _step240$value=_slicedToArray(_step240.value,2),_e163=_step240$value[0],_n152=_step240$value[1];var _t175=Tg._createAt(_n152.root,0);var _i82=new Og(_n152.start._getCombined(_t175,o),_n152.end._getCombined(_t175,o));var _r31={range:_i82,usingOperation:true,affectsData:true};if(this.model.markers.has(_e163)){this.updateMarker(_e163,_r31);}else{this.addMarker(_e163,_r31);}}}catch(err){_iterator240.e(err);}finally{_iterator240.f();}}}},{key:"insertText",value:function insertText(t,e,n,o){if(e instanceof ok||e instanceof Eg||e instanceof Tg){this.insert(this.createText(t),e,n);}else{this.insert(this.createText(t,e),n,o);}}},{key:"insertElement",value:function insertElement(t,e,n,o){if(e instanceof ok||e instanceof Eg||e instanceof Tg){this.insert(this.createElement(t),e,n);}else{this.insert(this.createElement(t,e),n,o);}}},{key:"append",value:function append(t,e){this.insert(t,e,"end");}},{key:"appendText",value:function appendText(t,e,n){if(e instanceof ok||e instanceof Eg){this.insert(this.createText(t),e,"end");}else{this.insert(this.createText(t,e),n,"end");}}},{key:"appendElement",value:function appendElement(t,e,n){if(e instanceof ok||e instanceof Eg){this.insert(this.createElement(t),e,"end");}else{this.insert(this.createElement(t,e),n,"end");}}},{key:"setAttribute",value:function setAttribute(t,e,n){this._assertWriterUsedCorrectly();if(n instanceof Og){var _o100=n.getMinimalFlatRanges();var _iterator241=_createForOfIteratorHelper(_o100),_step241;try{for(_iterator241.s();!(_step241=_iterator241.n()).done;){var _n153=_step241.value;Ek(this,t,e,_n153);}}catch(err){_iterator241.e(err);}finally{_iterator241.f();}}else{Dk(this,t,e,n);}}},{key:"setAttributes",value:function setAttributes(t,e){var _iterator242=_createForOfIteratorHelper(kc(t)),_step242;try{for(_iterator242.s();!(_step242=_iterator242.n()).done;){var _step242$value=_slicedToArray(_step242.value,2),_n154=_step242$value[0],_o101=_step242$value[1];this.setAttribute(_n154,_o101,e);}}catch(err){_iterator242.e(err);}finally{_iterator242.f();}}},{key:"removeAttribute",value:function removeAttribute(t,e){this._assertWriterUsedCorrectly();if(e instanceof Og){var _n155=e.getMinimalFlatRanges();var _iterator243=_createForOfIteratorHelper(_n155),_step243;try{for(_iterator243.s();!(_step243=_iterator243.n()).done;){var _e164=_step243.value;Ek(this,t,null,_e164);}}catch(err){_iterator243.e(err);}finally{_iterator243.f();}}else{Dk(this,t,null,e);}}},{key:"clearAttributes",value:function clearAttributes(t){var _this80=this;this._assertWriterUsedCorrectly();var e=function e(t){var _iterator244=_createForOfIteratorHelper(t.getAttributeKeys()),_step244;try{for(_iterator244.s();!(_step244=_iterator244.n()).done;){var _e165=_step244.value;_this80.removeAttribute(_e165,t);}}catch(err){_iterator244.e(err);}finally{_iterator244.f();}};if(!(t instanceof Og)){e(t);}else{var _iterator245=_createForOfIteratorHelper(t.getItems()),_step245;try{for(_iterator245.s();!(_step245=_iterator245.n()).done;){var _n156=_step245.value;e(_n156);}}catch(err){_iterator245.e(err);}finally{_iterator245.f();}}}},{key:"move",value:function move(t,e,n){this._assertWriterUsedCorrectly();if(!(t instanceof Og)){throw new h("writer-move-invalid-range",this);}if(!t.isFlat){throw new h("writer-move-range-not-flat",this);}var o=Tg._createAt(e,n);if(o.isEqual(t.start)){return;}this._addOperationForAffectedMarkers("move",t);if(!Tk(t.root,o.root)){throw new h("writer-move-different-document",this);}var i=t.root.document?t.root.document.version:null;var r=new kk(t.start,t.end.offset-t.start.offset,o,i);this.batch.addOperation(r);this.model.applyOperation(r);}},{key:"remove",value:function remove(t){this._assertWriterUsedCorrectly();var e=t instanceof Og?t:Og._createOn(t);var n=e.getMinimalFlatRanges().reverse();var _iterator246=_createForOfIteratorHelper(n),_step246;try{for(_iterator246.s();!(_step246=_iterator246.n()).done;){var _t176=_step246.value;this._addOperationForAffectedMarkers("move",_t176);Pk(_t176.start,_t176.end.offset-_t176.start.offset,this.batch,this.model);}}catch(err){_iterator246.e(err);}finally{_iterator246.f();}}},{key:"merge",value:function merge(t){this._assertWriterUsedCorrectly();var e=t.nodeBefore;var n=t.nodeAfter;this._addOperationForAffectedMarkers("merge",t);if(!(e instanceof Eg)){throw new h("writer-merge-no-element-before",this);}if(!(n instanceof Eg)){throw new h("writer-merge-no-element-after",this);}if(!t.root.document){this._mergeDetached(t);}else{this._merge(t);}}},{key:"createPositionFromPath",value:function createPositionFromPath(t,e,n){return this.model.createPositionFromPath(t,e,n);}},{key:"createPositionAt",value:function createPositionAt(t,e){return this.model.createPositionAt(t,e);}},{key:"createPositionAfter",value:function createPositionAfter(t){return this.model.createPositionAfter(t);}},{key:"createPositionBefore",value:function createPositionBefore(t){return this.model.createPositionBefore(t);}},{key:"createRange",value:function createRange(t,e){return this.model.createRange(t,e);}},{key:"createRangeIn",value:function createRangeIn(t){return this.model.createRangeIn(t);}},{key:"createRangeOn",value:function createRangeOn(t){return this.model.createRangeOn(t);}},{key:"createSelection",value:function createSelection(t,e,n){return this.model.createSelection(t,e,n);}},{key:"_mergeDetached",value:function _mergeDetached(t){var e=t.nodeBefore;var n=t.nodeAfter;this.move(Og._createIn(n),Tg._createAt(e,"end"));this.remove(n);}},{key:"_merge",value:function _merge(t){var e=Tg._createAt(t.nodeBefore,"end");var n=Tg._createAt(t.nodeAfter,0);var o=t.root.document.graveyard;var i=new Tg(o,[0]);var r=t.root.document.version;var s=new Ak(n,t.nodeAfter.maxOffset,e,i,r);this.batch.addOperation(s);this.model.applyOperation(s);}},{key:"rename",value:function rename(t,e){this._assertWriterUsedCorrectly();if(!(t instanceof Eg)){throw new h("writer-rename-not-element-instance",this);}var n=t.root.document?t.root.document.version:null;var o=new _k(Tg._createBefore(t),t.name,e,n);this.batch.addOperation(o);this.model.applyOperation(o);}},{key:"split",value:function split(t,e){this._assertWriterUsedCorrectly();var n=t.parent;if(!n.parent){throw new h("writer-split-element-no-parent",this);}if(!e){e=n.parent;}if(!t.parent.getAncestors({includeSelf:true}).includes(e)){throw new h("writer-split-invalid-limit-element",this);}var o,i;do{var _e166=n.root.document?n.root.document.version:null;var _r32=n.maxOffset-t.offset;var _s16=Ck.getInsertionPosition(t);var _a8=new Ck(t,_r32,_s16,null,_e166);this.batch.addOperation(_a8);this.model.applyOperation(_a8);if(!o&&!i){o=n;i=t.parent.nextSibling;}t=this.createPositionAfter(t.parent);n=t.parent;}while(n!==e);return{position:t,range:new Og(Tg._createAt(o,"end"),Tg._createAt(i,0))};}},{key:"wrap",value:function wrap(t,e){this._assertWriterUsedCorrectly();if(!t.isFlat){throw new h("writer-wrap-range-not-flat",this);}var n=e instanceof Eg?e:new Eg(e);if(n.childCount>0){throw new h("writer-wrap-element-not-empty",this);}if(n.parent!==null){throw new h("writer-wrap-element-attached",this);}this.insert(n,t.start);var o=new Og(t.start.getShiftedBy(1),t.end.getShiftedBy(1));this.move(o,Tg._createAt(n,0));}},{key:"unwrap",value:function unwrap(t){this._assertWriterUsedCorrectly();if(t.parent===null){throw new h("writer-unwrap-element-no-parent",this);}this.move(Og._createIn(t),this.createPositionAfter(t));this.remove(t);}},{key:"addMarker",value:function addMarker(t,e){this._assertWriterUsedCorrectly();if(!e||typeof e.usingOperation!="boolean"){throw new h("writer-addmarker-no-usingoperation",this);}var n=e.usingOperation;var o=e.range;var i=e.affectsData===undefined?false:e.affectsData;if(this.model.markers.has(t)){throw new h("writer-addmarker-marker-exists",this);}if(!o){throw new h("writer-addmarker-no-range",this);}if(!n){return this.model.markers._set(t,o,n,i);}Sk(this,t,null,o,i);return this.model.markers.get(t);}},{key:"updateMarker",value:function updateMarker(t,e){this._assertWriterUsedCorrectly();var n=typeof t=="string"?t:t.name;var o=this.model.markers.get(n);if(!o){throw new h("writer-updatemarker-marker-not-exists",this);}if(!e){u("writer-updatemarker-reconvert-using-editingcontroller",{markerName:n});this.model.markers._refresh(o);return;}var i=typeof e.usingOperation=="boolean";var r=typeof e.affectsData=="boolean";var s=r?e.affectsData:o.affectsData;if(!i&&!e.range&&!r){throw new h("writer-updatemarker-wrong-options",this);}var a=o.getRange();var c=e.range?e.range:a;if(i&&e.usingOperation!==o.managedUsingOperations){if(e.usingOperation){Sk(this,n,null,c,s);}else{Sk(this,n,a,null,s);this.model.markers._set(n,c,undefined,s);}return;}if(o.managedUsingOperations){Sk(this,n,a,c,s);}else{this.model.markers._set(n,c,undefined,s);}}},{key:"removeMarker",value:function removeMarker(t){this._assertWriterUsedCorrectly();var e=typeof t=="string"?t:t.name;if(!this.model.markers.has(e)){throw new h("writer-removemarker-no-marker",this);}var n=this.model.markers.get(e);if(!n.managedUsingOperations){this.model.markers._remove(e);return;}var o=n.getRange();Sk(this,e,o,null,n.affectsData);}},{key:"setSelection",value:function setSelection(t,e,n){this._assertWriterUsedCorrectly();this.model.document.selection._setTo(t,e,n);}},{key:"setSelectionFocus",value:function setSelectionFocus(t,e){this._assertWriterUsedCorrectly();this.model.document.selection._setFocus(t,e);}},{key:"setSelectionAttribute",value:function setSelectionAttribute(t,e){this._assertWriterUsedCorrectly();if(typeof t==="string"){this._setSelectionAttribute(t,e);}else{var _iterator247=_createForOfIteratorHelper(kc(t)),_step247;try{for(_iterator247.s();!(_step247=_iterator247.n()).done;){var _step247$value=_slicedToArray(_step247.value,2),_e167=_step247$value[0],_n157=_step247$value[1];this._setSelectionAttribute(_e167,_n157);}}catch(err){_iterator247.e(err);}finally{_iterator247.f();}}}},{key:"removeSelectionAttribute",value:function removeSelectionAttribute(t){this._assertWriterUsedCorrectly();if(typeof t==="string"){this._removeSelectionAttribute(t);}else{var _iterator248=_createForOfIteratorHelper(t),_step248;try{for(_iterator248.s();!(_step248=_iterator248.n()).done;){var _e168=_step248.value;this._removeSelectionAttribute(_e168);}}catch(err){_iterator248.e(err);}finally{_iterator248.f();}}}},{key:"overrideSelectionGravity",value:function overrideSelectionGravity(){return this.model.document.selection._overrideGravity();}},{key:"restoreSelectionGravity",value:function restoreSelectionGravity(t){this.model.document.selection._restoreGravity(t);}},{key:"_setSelectionAttribute",value:function _setSelectionAttribute(t,e){var n=this.model.document.selection;if(n.isCollapsed&&n.anchor.parent.isEmpty){var _o102=Xg._getStoreAttributeKey(t);this.setAttribute(_o102,e,n.anchor.parent);}n._setAttribute(t,e);}},{key:"_removeSelectionAttribute",value:function _removeSelectionAttribute(t){var e=this.model.document.selection;if(e.isCollapsed&&e.anchor.parent.isEmpty){var _n158=Xg._getStoreAttributeKey(t);this.removeAttribute(_n158,e.anchor.parent);}e._removeAttribute(t);}},{key:"_assertWriterUsedCorrectly",value:function _assertWriterUsedCorrectly(){if(this.model._currentWriter!==this){throw new h("writer-incorrect-use",this);}}},{key:"_addOperationForAffectedMarkers",value:function _addOperationForAffectedMarkers(t,e){var _iterator249=_createForOfIteratorHelper(this.model.markers),_step249;try{for(_iterator249.s();!(_step249=_iterator249.n()).done;){var _n159=_step249.value;if(!_n159.managedUsingOperations){continue;}var _o103=_n159.getRange();var _i83=false;if(t==="move"){_i83=e.containsPosition(_o103.start)||e.start.isEqual(_o103.start)||e.containsPosition(_o103.end)||e.end.isEqual(_o103.end);}else{var _t177=e.nodeBefore;var _n160=e.nodeAfter;var _r33=_o103.start.parent==_t177&&_o103.start.isAtEnd;var _s17=_o103.end.parent==_n160&&_o103.end.offset==0;var _a9=_o103.end.nodeAfter==_n160;var _c4=_o103.start.nodeAfter==_n160;_i83=_r33||_s17||_a9||_c4;}if(_i83){this.updateMarker(_n159.name,{range:_o103});}}}catch(err){_iterator249.e(err);}finally{_iterator249.f();}}}]);return xk;}();function Ek(t,e,n,o){var i=t.model;var r=i.document;var s=o.start;var a;var c;var l;var _iterator250=_createForOfIteratorHelper(o.getWalker({shallow:true})),_step250;try{for(_iterator250.s();!(_step250=_iterator250.n()).done;){var _t178=_step250.value;l=_t178.item.getAttribute(e);if(a&&c!=l){if(c!=n){d();}s=a;}a=_t178.nextPosition;c=l;}}catch(err){_iterator250.e(err);}finally{_iterator250.f();}if(a instanceof Tg&&a!=s&&c!=n){d();}function d(){var o=new Og(s,a);var l=o.root.document?r.version:null;var d=new pk(o,e,c,n,l);t.batch.addOperation(d);i.applyOperation(d);}}function Dk(t,e,n,o){var i=t.model;var r=i.document;var s=o.getAttribute(e);var a,c;if(s!=n){var _l2=o.root===o;if(_l2){var _t179=o.document?r.version:null;c=new vk(o,e,s,n,_t179);}else{a=new Og(Tg._createBefore(o),t.createPositionAfter(o));var _i84=a.root.document?r.version:null;c=new pk(a,e,s,n,_i84);}t.batch.addOperation(c);i.applyOperation(c);}}function Sk(t,e,n,o,i){var r=t.model;var s=r.document;var a=new wk(e,n,o,r.markers,i,s.version);t.batch.addOperation(a);r.applyOperation(a);}function Pk(t,e,n,o){var i;if(t.root.document){var _n161=o.document;var _r34=new Tg(_n161.graveyard,[0]);i=new kk(t,e,_r34,_n161.version);}else{i=new mk(t,e);}n.addOperation(i);o.applyOperation(i);}function Tk(t,e){if(t===e){return true;}if(t instanceof yk&&e instanceof yk){return true;}return false;}var Bk=/*#__PURE__*/function(){function Bk(t){_classCallCheck(this,Bk);this._markerCollection=t;this._changesInElement=new Map();this._elementSnapshots=new Map();this._changedMarkers=new Map();this._changeCount=0;this._cachedChanges=null;this._cachedChangesWithGraveyard=null;this._refreshedItems=new Set();}_createClass(Bk,[{key:"isEmpty",get:function get(){return this._changesInElement.size==0&&this._changedMarkers.size==0;}},{key:"bufferOperation",value:function bufferOperation(t){switch(t.type){case"insert":{if(this._isInInsertedElement(t.position.parent)){return;}this._markInsert(t.position.parent,t.position.offset,t.nodes.maxOffset);break;}case"addAttribute":case"removeAttribute":case"changeAttribute":{var _iterator251=_createForOfIteratorHelper(t.range.getItems({shallow:true})),_step251;try{for(_iterator251.s();!(_step251=_iterator251.n()).done;){var _e169=_step251.value;if(this._isInInsertedElement(_e169.parent)){continue;}this._markAttribute(_e169);}}catch(err){_iterator251.e(err);}finally{_iterator251.f();}break;}case"remove":case"move":case"reinsert":{if(t.sourcePosition.isEqual(t.targetPosition)||t.sourcePosition.getShiftedBy(t.howMany).isEqual(t.targetPosition)){return;}var _e170=this._isInInsertedElement(t.sourcePosition.parent);var _n162=this._isInInsertedElement(t.targetPosition.parent);if(!_e170){this._markRemove(t.sourcePosition.parent,t.sourcePosition.offset,t.howMany);}if(!_n162){this._markInsert(t.targetPosition.parent,t.getMovedRangeStart().offset,t.howMany);}break;}case"rename":{if(this._isInInsertedElement(t.position.parent)){return;}this._markRemove(t.position.parent,t.position.offset,1);this._markInsert(t.position.parent,t.position.offset,1);var _e171=Og._createFromPositionAndShift(t.position,1);var _iterator252=_createForOfIteratorHelper(this._markerCollection.getMarkersIntersectingRange(_e171)),_step252;try{for(_iterator252.s();!(_step252=_iterator252.n()).done;){var _t180=_step252.value;var _e172=_t180.getData();this.bufferMarkerChange(_t180.name,_e172,_e172);}}catch(err){_iterator252.e(err);}finally{_iterator252.f();}break;}case"split":{var _e173=t.splitPosition.parent;if(!this._isInInsertedElement(_e173)){this._markRemove(_e173,t.splitPosition.offset,t.howMany);}if(!this._isInInsertedElement(t.insertionPosition.parent)){this._markInsert(t.insertionPosition.parent,t.insertionPosition.offset,1);}if(t.graveyardPosition){this._markRemove(t.graveyardPosition.parent,t.graveyardPosition.offset,1);}break;}case"merge":{var _e174=t.sourcePosition.parent;if(!this._isInInsertedElement(_e174.parent)){this._markRemove(_e174.parent,_e174.startOffset,1);}var _n163=t.graveyardPosition.parent;this._markInsert(_n163,t.graveyardPosition.offset,1);var _o104=t.targetPosition.parent;if(!this._isInInsertedElement(_o104)){this._markInsert(_o104,t.targetPosition.offset,_e174.maxOffset);}break;}}this._cachedChanges=null;}},{key:"bufferMarkerChange",value:function bufferMarkerChange(t,e,n){var o=this._changedMarkers.get(t);if(!o){this._changedMarkers.set(t,{newMarkerData:n,oldMarkerData:e});}else{o.newMarkerData=n;if(o.oldMarkerData.range==null&&n.range==null){this._changedMarkers.delete(t);}}}},{key:"getMarkersToRemove",value:function getMarkersToRemove(){var t=[];var _iterator253=_createForOfIteratorHelper(this._changedMarkers),_step253;try{for(_iterator253.s();!(_step253=_iterator253.n()).done;){var _step253$value=_slicedToArray(_step253.value,2),_e175=_step253$value[0],_n164=_step253$value[1];if(_n164.oldMarkerData.range!=null){t.push({name:_e175,range:_n164.oldMarkerData.range});}}}catch(err){_iterator253.e(err);}finally{_iterator253.f();}return t;}},{key:"getMarkersToAdd",value:function getMarkersToAdd(){var t=[];var _iterator254=_createForOfIteratorHelper(this._changedMarkers),_step254;try{for(_iterator254.s();!(_step254=_iterator254.n()).done;){var _step254$value=_slicedToArray(_step254.value,2),_e176=_step254$value[0],_n165=_step254$value[1];if(_n165.newMarkerData.range!=null){t.push({name:_e176,range:_n165.newMarkerData.range});}}}catch(err){_iterator254.e(err);}finally{_iterator254.f();}return t;}},{key:"getChangedMarkers",value:function getChangedMarkers(){return Array.from(this._changedMarkers).map(function(_ref28){var _ref29=_slicedToArray(_ref28,2),t=_ref29[0],e=_ref29[1];return{name:t,data:{oldRange:e.oldMarkerData.range,newRange:e.newMarkerData.range}};});}},{key:"hasDataChanges",value:function hasDataChanges(){if(this._changesInElement.size>0){return true;}var _iterator255=_createForOfIteratorHelper(this._changedMarkers.values()),_step255;try{for(_iterator255.s();!(_step255=_iterator255.n()).done;){var _step255$value=_step255.value,_t181=_step255$value.newMarkerData,_e177=_step255$value.oldMarkerData;if(_t181.affectsData!==_e177.affectsData){return true;}if(_t181.affectsData){var _n166=_t181.range&&!_e177.range;var _o105=!_t181.range&&_e177.range;var _i85=_t181.range&&_e177.range&&!_t181.range.isEqual(_e177.range);if(_n166||_o105||_i85){return true;}}}}catch(err){_iterator255.e(err);}finally{_iterator255.f();}return false;}},{key:"getChanges",value:function getChanges(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{includeChangesInGraveyard:false};if(this._cachedChanges){if(t.includeChangesInGraveyard){return this._cachedChangesWithGraveyard.slice();}else{return this._cachedChanges.slice();}}var e=[];var _iterator256=_createForOfIteratorHelper(this._changesInElement.keys()),_step256;try{for(_iterator256.s();!(_step256=_iterator256.n()).done;){var _t183=_step256.value;var _n168=this._changesInElement.get(_t183).sort(function(t,e){if(t.offset===e.offset){if(t.type!=e.type){return t.type=="remove"?-1:1;}return 0;}return t.offset<e.offset?-1:1;});var _o107=this._elementSnapshots.get(_t183);var _i87=Ik(_t183.getChildren());var _r36=Rk(_o107.length,_n168);var _s19=0;var _a11=0;var _iterator258=_createForOfIteratorHelper(_r36),_step258;try{for(_iterator258.s();!(_step258=_iterator258.n()).done;){var _n169=_step258.value;if(_n169==="i"){e.push(this._getInsertDiff(_t183,_s19,_i87[_s19]));_s19++;}else if(_n169==="r"){e.push(this._getRemoveDiff(_t183,_s19,_o107[_a11]));_a11++;}else if(_n169==="a"){var _e179;var _n170=_i87[_s19].attributes;var _r37=_o107[_a11].attributes;var _c5=void 0;if(_i87[_s19].name=="$text"){_c5=new Og(Tg._createAt(_t183,_s19),Tg._createAt(_t183,_s19+1));}else{var _e178=_t183.offsetToIndex(_s19);_c5=new Og(Tg._createAt(_t183,_s19),Tg._createAt(_t183.getChild(_e178),0));}(_e179=e).push.apply(_e179,_toConsumableArray(this._getAttributesDiff(_c5,_r37,_n170)));_s19++;_a11++;}else{_s19++;_a11++;}}}catch(err){_iterator258.e(err);}finally{_iterator258.f();}}}catch(err){_iterator256.e(err);}finally{_iterator256.f();}e.sort(function(t,e){if(t.position.root!=e.position.root){return t.position.root.rootName<e.position.root.rootName?-1:1;}if(t.position.isEqual(e.position)){return t.changeCount-e.changeCount;}return t.position.isBefore(e.position)?-1:1;});for(var _t182=1,_n167=0;_t182<e.length;_t182++){var _o106=e[_n167];var _i86=e[_t182];var _r35=_o106.type=="remove"&&_i86.type=="remove"&&_o106.name=="$text"&&_i86.name=="$text"&&_o106.position.isEqual(_i86.position);var _s18=_o106.type=="insert"&&_i86.type=="insert"&&_o106.name=="$text"&&_i86.name=="$text"&&_o106.position.parent==_i86.position.parent&&_o106.position.offset+_o106.length==_i86.position.offset;var _a10=_o106.type=="attribute"&&_i86.type=="attribute"&&_o106.position.parent==_i86.position.parent&&_o106.range.isFlat&&_i86.range.isFlat&&_o106.position.offset+_o106.length==_i86.position.offset&&_o106.attributeKey==_i86.attributeKey&&_o106.attributeOldValue==_i86.attributeOldValue&&_o106.attributeNewValue==_i86.attributeNewValue;if(_r35||_s18||_a10){_o106.length++;if(_a10){_o106.range.end=_o106.range.end.getShiftedBy(1);}e[_t182]=null;}else{_n167=_t182;}}e=e.filter(function(t){return t;});var _iterator257=_createForOfIteratorHelper(e),_step257;try{for(_iterator257.s();!(_step257=_iterator257.n()).done;){var _t184=_step257.value;delete _t184.changeCount;if(_t184.type=="attribute"){delete _t184.position;delete _t184.length;}}}catch(err){_iterator257.e(err);}finally{_iterator257.f();}this._changeCount=0;this._cachedChangesWithGraveyard=e;this._cachedChanges=e.filter(Ok);if(t.includeChangesInGraveyard){return this._cachedChangesWithGraveyard.slice();}else{return this._cachedChanges.slice();}}},{key:"getRefreshedItems",value:function getRefreshedItems(){return new Set(this._refreshedItems);}},{key:"reset",value:function reset(){this._changesInElement.clear();this._elementSnapshots.clear();this._changedMarkers.clear();this._refreshedItems=new Set();this._cachedChanges=null;}},{key:"_refreshItem",value:function _refreshItem(t){if(this._isInInsertedElement(t.parent)){return;}this._markRemove(t.parent,t.startOffset,t.offsetSize);this._markInsert(t.parent,t.startOffset,t.offsetSize);this._refreshedItems.add(t);var e=Og._createOn(t);var _iterator259=_createForOfIteratorHelper(this._markerCollection.getMarkersIntersectingRange(e)),_step259;try{for(_iterator259.s();!(_step259=_iterator259.n()).done;){var _t185=_step259.value;var _e180=_t185.getData();this.bufferMarkerChange(_t185.name,_e180,_e180);}}catch(err){_iterator259.e(err);}finally{_iterator259.f();}this._cachedChanges=null;}},{key:"_markInsert",value:function _markInsert(t,e,n){var o={type:"insert",offset:e,howMany:n,count:this._changeCount++};this._markChange(t,o);}},{key:"_markRemove",value:function _markRemove(t,e,n){var o={type:"remove",offset:e,howMany:n,count:this._changeCount++};this._markChange(t,o);this._removeAllNestedChanges(t,e,n);}},{key:"_markAttribute",value:function _markAttribute(t){var e={type:"attribute",offset:t.startOffset,howMany:t.offsetSize,count:this._changeCount++};this._markChange(t.parent,e);}},{key:"_markChange",value:function _markChange(t,e){this._makeSnapshot(t);var n=this._getChangesForElement(t);this._handleChange(e,n);n.push(e);for(var _t186=0;_t186<n.length;_t186++){if(n[_t186].howMany<1){n.splice(_t186,1);_t186--;}}}},{key:"_getChangesForElement",value:function _getChangesForElement(t){var e;if(this._changesInElement.has(t)){e=this._changesInElement.get(t);}else{e=[];this._changesInElement.set(t,e);}return e;}},{key:"_makeSnapshot",value:function _makeSnapshot(t){if(!this._elementSnapshots.has(t)){this._elementSnapshots.set(t,Ik(t.getChildren()));}}},{key:"_handleChange",value:function _handleChange(t,e){t.nodesToHandle=t.howMany;var _iterator260=_createForOfIteratorHelper(e),_step260;try{for(_iterator260.s();!(_step260=_iterator260.n()).done;){var _n171=_step260.value;var _o108=t.offset+t.howMany;var _i88=_n171.offset+_n171.howMany;if(t.type=="insert"){if(_n171.type=="insert"){if(t.offset<=_n171.offset){_n171.offset+=t.howMany;}else if(t.offset<_i88){_n171.howMany+=t.nodesToHandle;t.nodesToHandle=0;}}if(_n171.type=="remove"){if(t.offset<_n171.offset){_n171.offset+=t.howMany;}}if(_n171.type=="attribute"){if(t.offset<=_n171.offset){_n171.offset+=t.howMany;}else if(t.offset<_i88){var _i89=_n171.howMany;_n171.howMany=t.offset-_n171.offset;e.unshift({type:"attribute",offset:_o108,howMany:_i89-_n171.howMany,count:this._changeCount++});}}}if(t.type=="remove"){if(_n171.type=="insert"){if(_o108<=_n171.offset){_n171.offset-=t.howMany;}else if(_o108<=_i88){if(t.offset<_n171.offset){var _e181=_o108-_n171.offset;_n171.offset=t.offset;_n171.howMany-=_e181;t.nodesToHandle-=_e181;}else{_n171.howMany-=t.nodesToHandle;t.nodesToHandle=0;}}else{if(t.offset<=_n171.offset){t.nodesToHandle-=_n171.howMany;_n171.howMany=0;}else if(t.offset<_i88){var _e182=_i88-t.offset;_n171.howMany-=_e182;t.nodesToHandle-=_e182;}}}if(_n171.type=="remove"){if(_o108<=_n171.offset){_n171.offset-=t.howMany;}else if(t.offset<_n171.offset){t.nodesToHandle+=_n171.howMany;_n171.howMany=0;}}if(_n171.type=="attribute"){if(_o108<=_n171.offset){_n171.offset-=t.howMany;}else if(t.offset<_n171.offset){var _e183=_o108-_n171.offset;_n171.offset=t.offset;_n171.howMany-=_e183;}else if(t.offset<_i88){if(_o108<=_i88){var _o109=_n171.howMany;_n171.howMany=t.offset-_n171.offset;var _i90=_o109-_n171.howMany-t.nodesToHandle;e.unshift({type:"attribute",offset:t.offset,howMany:_i90,count:this._changeCount++});}else{_n171.howMany-=_i88-t.offset;}}}}if(t.type=="attribute"){if(_n171.type=="insert"){if(t.offset<_n171.offset&&_o108>_n171.offset){if(_o108>_i88){var _t187={type:"attribute",offset:_i88,howMany:_o108-_i88,count:this._changeCount++};this._handleChange(_t187,e);e.push(_t187);}t.nodesToHandle=_n171.offset-t.offset;t.howMany=t.nodesToHandle;}else if(t.offset>=_n171.offset&&t.offset<_i88){if(_o108>_i88){t.nodesToHandle=_o108-_i88;t.offset=_i88;}else{t.nodesToHandle=0;}}}if(_n171.type=="remove"){if(t.offset<_n171.offset&&_o108>_n171.offset){var _i91={type:"attribute",offset:_n171.offset,howMany:_o108-_n171.offset,count:this._changeCount++};this._handleChange(_i91,e);e.push(_i91);t.nodesToHandle=_n171.offset-t.offset;t.howMany=t.nodesToHandle;}}if(_n171.type=="attribute"){if(t.offset>=_n171.offset&&_o108<=_i88){t.nodesToHandle=0;t.howMany=0;t.offset=0;}else if(t.offset<=_n171.offset&&_o108>=_i88){_n171.howMany=0;}}}}}catch(err){_iterator260.e(err);}finally{_iterator260.f();}t.howMany=t.nodesToHandle;delete t.nodesToHandle;}},{key:"_getInsertDiff",value:function _getInsertDiff(t,e,n){return{type:"insert",position:Tg._createAt(t,e),name:n.name,attributes:new Map(n.attributes),length:1,changeCount:this._changeCount++};}},{key:"_getRemoveDiff",value:function _getRemoveDiff(t,e,n){return{type:"remove",position:Tg._createAt(t,e),name:n.name,attributes:new Map(n.attributes),length:1,changeCount:this._changeCount++};}},{key:"_getAttributesDiff",value:function _getAttributesDiff(t,e,n){var o=[];n=new Map(n);var _iterator261=_createForOfIteratorHelper(e),_step261;try{for(_iterator261.s();!(_step261=_iterator261.n()).done;){var _step261$value=_slicedToArray(_step261.value,2),_i92=_step261$value[0],_r38=_step261$value[1];var _e184=n.has(_i92)?n.get(_i92):null;if(_e184!==_r38){o.push({type:"attribute",position:t.start,range:t.clone(),length:1,attributeKey:_i92,attributeOldValue:_r38,attributeNewValue:_e184,changeCount:this._changeCount++});}n.delete(_i92);}}catch(err){_iterator261.e(err);}finally{_iterator261.f();}var _iterator262=_createForOfIteratorHelper(n),_step262;try{for(_iterator262.s();!(_step262=_iterator262.n()).done;){var _step262$value=_slicedToArray(_step262.value,2),_e185=_step262$value[0],_i93=_step262$value[1];o.push({type:"attribute",position:t.start,range:t.clone(),length:1,attributeKey:_e185,attributeOldValue:null,attributeNewValue:_i93,changeCount:this._changeCount++});}}catch(err){_iterator262.e(err);}finally{_iterator262.f();}return o;}},{key:"_isInInsertedElement",value:function _isInInsertedElement(t){var e=t.parent;if(!e){return false;}var n=this._changesInElement.get(e);var o=t.startOffset;if(n){var _iterator263=_createForOfIteratorHelper(n),_step263;try{for(_iterator263.s();!(_step263=_iterator263.n()).done;){var _t188=_step263.value;if(_t188.type=="insert"&&o>=_t188.offset&&o<_t188.offset+_t188.howMany){return true;}}}catch(err){_iterator263.e(err);}finally{_iterator263.f();}}return this._isInInsertedElement(e);}},{key:"_removeAllNestedChanges",value:function _removeAllNestedChanges(t,e,n){var o=new Og(Tg._createAt(t,e),Tg._createAt(t,e+n));var _iterator264=_createForOfIteratorHelper(o.getItems({shallow:true})),_step264;try{for(_iterator264.s();!(_step264=_iterator264.n()).done;){var _t189=_step264.value;if(_t189.is("element")){this._elementSnapshots.delete(_t189);this._changesInElement.delete(_t189);this._removeAllNestedChanges(_t189,0,_t189.maxOffset);}}}catch(err){_iterator264.e(err);}finally{_iterator264.f();}}}]);return Bk;}();function Ik(t){var e=[];var _iterator265=_createForOfIteratorHelper(t),_step265;try{for(_iterator265.s();!(_step265=_iterator265.n()).done;){var _n172=_step265.value;if(_n172.is("$text")){for(var _t190=0;_t190<_n172.data.length;_t190++){e.push({name:"$text",attributes:new Map(_n172.getAttributes())});}}else{e.push({name:_n172.name,attributes:new Map(_n172.getAttributes())});}}}catch(err){_iterator265.e(err);}finally{_iterator265.f();}return e;}function Rk(t,e){var n=[];var o=0;var i=0;var _iterator266=_createForOfIteratorHelper(e),_step266;try{for(_iterator266.s();!(_step266=_iterator266.n()).done;){var _t191=_step266.value;if(_t191.offset>o){for(var _e187=0;_e187<_t191.offset-o;_e187++){n.push("e");}i+=_t191.offset-o;}if(_t191.type=="insert"){for(var _e188=0;_e188<_t191.howMany;_e188++){n.push("i");}o=_t191.offset+_t191.howMany;}else if(_t191.type=="remove"){for(var _e189=0;_e189<_t191.howMany;_e189++){n.push("r");}o=_t191.offset;i+=_t191.howMany;}else{n.push.apply(n,_toConsumableArray("a".repeat(_t191.howMany).split("")));o=_t191.offset+_t191.howMany;i+=_t191.howMany;}}}catch(err){_iterator266.e(err);}finally{_iterator266.f();}if(i<t){for(var _e186=0;_e186<t-i-o;_e186++){n.push("e");}}return n;}function Ok(t){var e=t.position&&t.position.root.rootName=="$graveyard";var n=t.range&&t.range.root.rootName=="$graveyard";return!e&&!n;}var zk=/*#__PURE__*/function(){function zk(){_classCallCheck(this,zk);this._operations=[];this._undoPairs=new Map();this._undoneOperations=new Set();}_createClass(zk,[{key:"addOperation",value:function addOperation(t){if(this._operations.includes(t)){return;}this._operations.push(t);}},{key:"getOperations",value:function getOperations(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Number.NEGATIVE_INFINITY;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.POSITIVE_INFINITY;var n=[];var _iterator267=_createForOfIteratorHelper(this._operations),_step267;try{for(_iterator267.s();!(_step267=_iterator267.n()).done;){var _o110=_step267.value;if(_o110.baseVersion>=t&&_o110.baseVersion<e){n.push(_o110);}}}catch(err){_iterator267.e(err);}finally{_iterator267.f();}return n;}},{key:"getOperation",value:function getOperation(t){var _iterator268=_createForOfIteratorHelper(this._operations),_step268;try{for(_iterator268.s();!(_step268=_iterator268.n()).done;){var _e190=_step268.value;if(_e190.baseVersion==t){return _e190;}}}catch(err){_iterator268.e(err);}finally{_iterator268.f();}}},{key:"setOperationAsUndone",value:function setOperationAsUndone(t,e){this._undoPairs.set(e,t);this._undoneOperations.add(t);}},{key:"isUndoingOperation",value:function isUndoingOperation(t){return this._undoPairs.has(t);}},{key:"isUndoneOperation",value:function isUndoneOperation(t){return this._undoneOperations.has(t);}},{key:"getUndoneOperation",value:function getUndoneOperation(t){return this._undoPairs.get(t);}}]);return zk;}();function Mk(t){return!!t&&t.length==1&&/[\u0300-\u036f\u1ab0-\u1aff\u1dc0-\u1dff\u20d0-\u20ff\ufe20-\ufe2f]/.test(t);}function Nk(t){return!!t&&t.length==1&&/[\ud800-\udbff]/.test(t);}function Fk(t){return!!t&&t.length==1&&/[\udc00-\udfff]/.test(t);}function Vk(t,e){return Nk(t.charAt(e-1))&&Fk(t.charAt(e));}function Lk(t,e){return Mk(t.charAt(e));}var Hk=qk();function jk(t,e){var n=String(t).matchAll(Hk);return Array.from(n).some(function(t){return t.index<e&&e<t.index+t[0].length;});}function qk(){var t=[/(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEDD-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6])(?:\uDB40[\uDC20-\uDC7E])+(?:\uDB40\uDC7F)/,/(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEDD-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6])\uFE0F?\u20E3/,/(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEDD-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6])\uFE0F/,/(?=(?:[\xA6\xA9\xAE\xB0\u0482\u058D\u058E\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u09FA\u0B70\u0BF3-\u0BF8\u0BFA\u0C7F\u0D4F\u0D79\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116\u2117\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u214A\u214C\u214D\u214F\u218A\u218B\u2195-\u2199\u219C-\u219F\u21A1\u21A2\u21A4\u21A5\u21A7-\u21AD\u21AF-\u21CD\u21D0\u21D1\u21D3\u21D5-\u21F3\u2300-\u2307\u230C-\u231F\u2322-\u2328\u232B-\u237B\u237D-\u239A\u23B4-\u23DB\u23E2-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u25B6\u25B8-\u25C0\u25C2-\u25F7\u2600-\u266E\u2670-\u2767\u2794-\u27BF\u2800-\u28FF\u2B00-\u2B2F\u2B45\u2B46\u2B4D-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA828-\uA82B\uA836\uA837\uA839\uAA77-\uAA79\uFD40-\uFD4F\uFDCF\uFDFD-\uFDFF\uFFE4\uFFE8\uFFED\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFDC\uDFE1-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838\uDD4F|\uD83B[\uDCAC\uDD2E]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFA]|\uD83D[\uDC00-\uDED7\uDEDD-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6\uDF00-\uDF92\uDF94-\uDFCA]))(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEDD-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC5\uDED0-\uDED9\uDEE0-\uDEE7\uDEF0-\uDEF6])(?:\uD83C[\uDFFB-\uDFFF])*/];var e=/(?:\uD83C[\uDDE6-\uDDFF]){2}/.source;var n="(?:"+t.map(function(t){return t.source;}).join("|")+")";var o="".concat(e,"|").concat(n,"(?:\u200D").concat(n,")*");return new RegExp(o,"ug");}var Wk="$graveyard";var Kk=/*#__PURE__*/function(){function Kk(t){var _this81=this;_classCallCheck(this,Kk);this.model=t;this.version=0;this.history=new zk(this);this.selection=new Xg(this);this.roots=new Ja({idProperty:"rootName"});this.differ=new Bk(t.markers);this._postFixers=new Set();this._hasSelectionChangedFromTheLastChangeBlock=false;this.createRoot("$root",Wk);this.listenTo(t,"applyOperation",function(t,e){var n=e[0];if(n.isDocumentOperation&&n.baseVersion!==_this81.version){throw new h("model-document-applyoperation-wrong-version",_this81,{operation:n});}},{priority:"highest"});this.listenTo(t,"applyOperation",function(t,e){var n=e[0];if(n.isDocumentOperation){_this81.differ.bufferOperation(n);}},{priority:"high"});this.listenTo(t,"applyOperation",function(t,e){var n=e[0];if(n.isDocumentOperation){_this81.version++;_this81.history.addOperation(n);}},{priority:"low"});this.listenTo(this.selection,"change",function(){_this81._hasSelectionChangedFromTheLastChangeBlock=true;});this.listenTo(t.markers,"update",function(t,e,n,o,i){var r=_objectSpread(_objectSpread({},e.getData()),{},{range:o});_this81.differ.bufferMarkerChange(e.name,i,r);if(n===null){e.on("change",function(t,n){var o=e.getData();_this81.differ.bufferMarkerChange(e.name,_objectSpread(_objectSpread({},o),{},{range:n}),o);});}});}_createClass(Kk,[{key:"graveyard",get:function get(){return this.getRoot(Wk);}},{key:"createRoot",value:function createRoot(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"$root";var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"main";if(this.roots.get(e)){throw new h("model-document-createroot-name-exists",this,{name:e});}var n=new yk(this,t,e);this.roots.add(n);return n;}},{key:"destroy",value:function destroy(){this.selection.destroy();this.stopListening();}},{key:"getRoot",value:function getRoot(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"main";return this.roots.get(t);}},{key:"getRootNames",value:function getRootNames(){return Array.from(this.roots,function(t){return t.rootName;}).filter(function(t){return t!=Wk;});}},{key:"registerPostFixer",value:function registerPostFixer(t){this._postFixers.add(t);}},{key:"toJSON",value:function toJSON(){var t=uc(this);t.selection="[engine.model.DocumentSelection]";t.model="[engine.model.Model]";return t;}},{key:"_handleChangeBlock",value:function _handleChangeBlock(t){if(this._hasDocumentChangedFromTheLastChangeBlock()){this._callPostFixers(t);this.selection.refresh();if(this.differ.hasDataChanges()){this.fire("change:data",t.batch);}else{this.fire("change",t.batch);}this.selection.refresh();this.differ.reset();}this._hasSelectionChangedFromTheLastChangeBlock=false;}},{key:"_hasDocumentChangedFromTheLastChangeBlock",value:function _hasDocumentChangedFromTheLastChangeBlock(){return!this.differ.isEmpty||this._hasSelectionChangedFromTheLastChangeBlock;}},{key:"_getDefaultRoot",value:function _getDefaultRoot(){var _iterator269=_createForOfIteratorHelper(this.roots),_step269;try{for(_iterator269.s();!(_step269=_iterator269.n()).done;){var _t192=_step269.value;if(_t192!==this.graveyard){return _t192;}}}catch(err){_iterator269.e(err);}finally{_iterator269.f();}return this.graveyard;}},{key:"_getDefaultRange",value:function _getDefaultRange(){var t=this._getDefaultRoot();var e=this.model;var n=e.schema;var o=e.createPositionFromPath(t,[0]);var i=n.getNearestSelectionRange(o);return i||e.createRange(o);}},{key:"_validateSelectionRange",value:function _validateSelectionRange(t){return Gk(t.start)&&Gk(t.end);}},{key:"_callPostFixers",value:function _callPostFixers(t){var e=false;do{var _iterator270=_createForOfIteratorHelper(this._postFixers),_step270;try{for(_iterator270.s();!(_step270=_iterator270.n()).done;){var _n173=_step270.value;this.selection.refresh();e=_n173(t);if(e){break;}}}catch(err){_iterator270.e(err);}finally{_iterator270.f();}}while(e);}}]);return Kk;}();fo(Kk,C);function Gk(t){var e=t.textNode;if(e){var _n174=e.data;var _o111=t.offset-e.startOffset;return!Vk(_n174,_o111)&&!Lk(_n174,_o111);}return true;}var $k=/*#__PURE__*/function(_Symbol$iterator12){function $k(){_classCallCheck(this,$k);this._markers=new Map();}_createClass($k,[{key:_Symbol$iterator12,value:function value(){return this._markers.values();}},{key:"has",value:function has(t){var e=t instanceof Uk?t.name:t;return this._markers.has(e);}},{key:"get",value:function get(t){return this._markers.get(t)||null;}},{key:"_set",value:function _set(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var i=t instanceof Uk?t.name:t;if(i.includes(",")){throw new h("markercollection-incorrect-marker-name",this);}var r=this._markers.get(i);if(r){var _t193=r.getData();var _s20=r.getRange();var _a12=false;if(!_s20.isEqual(e)){r._attachLiveRange(Ug.fromRange(e));_a12=true;}if(n!=r.managedUsingOperations){r._managedUsingOperations=n;_a12=true;}if(typeof o==="boolean"&&o!=r.affectsData){r._affectsData=o;_a12=true;}if(_a12){this.fire("update:"+i,r,_s20,e,_t193);}return r;}var s=Ug.fromRange(e);var a=new Uk(i,s,n,o);this._markers.set(i,a);this.fire("update:"+i,a,null,e,_objectSpread(_objectSpread({},a.getData()),{},{range:null}));return a;}},{key:"_remove",value:function _remove(t){var e=t instanceof Uk?t.name:t;var n=this._markers.get(e);if(n){this._markers.delete(e);this.fire("update:"+e,n,n.getRange(),null,n.getData());this._destroyMarker(n);return true;}return false;}},{key:"_refresh",value:function _refresh(t){var e=t instanceof Uk?t.name:t;var n=this._markers.get(e);if(!n){throw new h("markercollection-refresh-marker-not-exists",this);}var o=n.getRange();this.fire("update:"+e,n,o,o,n.getData());}},{key:"getMarkersAtPosition",value:/*#__PURE__*/regeneratorRuntime.mark(function getMarkersAtPosition(t){var _iterator271,_step271,_e191;return regeneratorRuntime.wrap(function getMarkersAtPosition$(_context31){while(1){switch(_context31.prev=_context31.next){case 0:_iterator271=_createForOfIteratorHelper(this);_context31.prev=1;_iterator271.s();case 3:if((_step271=_iterator271.n()).done){_context31.next=10;break;}_e191=_step271.value;if(!_e191.getRange().containsPosition(t)){_context31.next=8;break;}_context31.next=8;return _e191;case 8:_context31.next=3;break;case 10:_context31.next=15;break;case 12:_context31.prev=12;_context31.t0=_context31["catch"](1);_iterator271.e(_context31.t0);case 15:_context31.prev=15;_iterator271.f();return _context31.finish(15);case 18:case"end":return _context31.stop();}}},getMarkersAtPosition,this,[[1,12,15,18]]);})},{key:"getMarkersIntersectingRange",value:/*#__PURE__*/regeneratorRuntime.mark(function getMarkersIntersectingRange(t){var _iterator272,_step272,_e192;return regeneratorRuntime.wrap(function getMarkersIntersectingRange$(_context32){while(1){switch(_context32.prev=_context32.next){case 0:_iterator272=_createForOfIteratorHelper(this);_context32.prev=1;_iterator272.s();case 3:if((_step272=_iterator272.n()).done){_context32.next=10;break;}_e192=_step272.value;if(!(_e192.getRange().getIntersection(t)!==null)){_context32.next=8;break;}_context32.next=8;return _e192;case 8:_context32.next=3;break;case 10:_context32.next=15;break;case 12:_context32.prev=12;_context32.t0=_context32["catch"](1);_iterator272.e(_context32.t0);case 15:_context32.prev=15;_iterator272.f();return _context32.finish(15);case 18:case"end":return _context32.stop();}}},getMarkersIntersectingRange,this,[[1,12,15,18]]);})},{key:"destroy",value:function destroy(){var _iterator273=_createForOfIteratorHelper(this._markers.values()),_step273;try{for(_iterator273.s();!(_step273=_iterator273.n()).done;){var _t194=_step273.value;this._destroyMarker(_t194);}}catch(err){_iterator273.e(err);}finally{_iterator273.f();}this._markers=null;this.stopListening();}},{key:"getMarkersGroup",value:/*#__PURE__*/regeneratorRuntime.mark(function getMarkersGroup(t){var _iterator274,_step274,_e193;return regeneratorRuntime.wrap(function getMarkersGroup$(_context33){while(1){switch(_context33.prev=_context33.next){case 0:_iterator274=_createForOfIteratorHelper(this._markers.values());_context33.prev=1;_iterator274.s();case 3:if((_step274=_iterator274.n()).done){_context33.next=10;break;}_e193=_step274.value;if(!_e193.name.startsWith(t+":")){_context33.next=8;break;}_context33.next=8;return _e193;case 8:_context33.next=3;break;case 10:_context33.next=15;break;case 12:_context33.prev=12;_context33.t0=_context33["catch"](1);_iterator274.e(_context33.t0);case 15:_context33.prev=15;_iterator274.f();return _context33.finish(15);case 18:case"end":return _context33.stop();}}},getMarkersGroup,this,[[1,12,15,18]]);})},{key:"_destroyMarker",value:function _destroyMarker(t){t.stopListening();t._detachLiveRange();}}]);return $k;}(Symbol.iterator);fo($k,C);var Uk=/*#__PURE__*/function(){function Uk(t,e,n,o){_classCallCheck(this,Uk);this.name=t;this._liveRange=this._attachLiveRange(e);this._managedUsingOperations=n;this._affectsData=o;}_createClass(Uk,[{key:"managedUsingOperations",get:function get(){if(!this._liveRange){throw new h("marker-destroyed",this);}return this._managedUsingOperations;}},{key:"affectsData",get:function get(){if(!this._liveRange){throw new h("marker-destroyed",this);}return this._affectsData;}},{key:"getData",value:function getData(){return{range:this.getRange(),affectsData:this.affectsData,managedUsingOperations:this.managedUsingOperations};}},{key:"getStart",value:function getStart(){if(!this._liveRange){throw new h("marker-destroyed",this);}return this._liveRange.start.clone();}},{key:"getEnd",value:function getEnd(){if(!this._liveRange){throw new h("marker-destroyed",this);}return this._liveRange.end.clone();}},{key:"getRange",value:function getRange(){if(!this._liveRange){throw new h("marker-destroyed",this);}return this._liveRange.toRange();}},{key:"is",value:function is(t){return t==="marker"||t==="model:marker";}},{key:"_attachLiveRange",value:function _attachLiveRange(t){if(this._liveRange){this._detachLiveRange();}t.delegate("change:range").to(this);t.delegate("change:content").to(this);this._liveRange=t;return t;}},{key:"_detachLiveRange",value:function _detachLiveRange(){this._liveRange.stopDelegating("change:range",this);this._liveRange.stopDelegating("change:content",this);this._liveRange.detach();this._liveRange=null;}}]);return Uk;}();fo(Uk,C);var Jk=/*#__PURE__*/function(_nk10){_inherits(Jk,_nk10);var _super39=_createSuper(Jk);function Jk(){_classCallCheck(this,Jk);return _super39.apply(this,arguments);}_createClass(Jk,[{key:"type",get:function get(){return"noop";}},{key:"clone",value:function clone(){return new Jk(this.baseVersion);}},{key:"getReversed",value:function getReversed(){return new Jk(this.baseVersion+1);}},{key:"_execute",value:function _execute(){}}],[{key:"className",get:function get(){return"NoOperation";}}]);return Jk;}(nk);var Zk={};Zk[pk.className]=pk;Zk[bk.className]=bk;Zk[wk.className]=wk;Zk[kk.className]=kk;Zk[Jk.className]=Jk;Zk[nk.className]=nk;Zk[_k.className]=_k;Zk[vk.className]=vk;Zk[Ck.className]=Ck;Zk[Ak.className]=Ak;var Yk=/*#__PURE__*/function(){function Yk(){_classCallCheck(this,Yk);}_createClass(Yk,null,[{key:"fromJSON",value:function fromJSON(t,e){return Zk[t.__className].fromJSON(t,e);}}]);return Yk;}();var Qk=/*#__PURE__*/function(_Tg){_inherits(Qk,_Tg);var _super40=_createSuper(Qk);function Qk(t,e){var _this82;var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"toNone";_classCallCheck(this,Qk);_this82=_super40.call(this,t,e,n);if(!_this82.root.is("rootElement")){throw new h("model-liveposition-root-not-rootelement",t);}Xk.call(_assertThisInitialized(_this82));return _this82;}_createClass(Qk,[{key:"detach",value:function detach(){this.stopListening();}},{key:"is",value:function is(t){return t==="livePosition"||t==="model:livePosition"||t=="position"||t==="model:position";}},{key:"toPosition",value:function toPosition(){return new Tg(this.root,this.path.slice(),this.stickiness);}}],[{key:"fromPosition",value:function fromPosition(t,e){return new this(t.root,t.path.slice(),e?e:t.stickiness);}}]);return Qk;}(Tg);function Xk(){var _this83=this;this.listenTo(this.root.document.model,"applyOperation",function(t,e){var n=e[0];if(!n.isDocumentOperation){return;}tb.call(_this83,n);},{priority:"low"});}function tb(t){var e=this.getTransformedByOperation(t);if(!this.isEqual(e)){var _t195=this.toPosition();this.path=e.path;this.root=e.root;this.fire("change",_t195);}}fo(Qk,C);function eb(t,e,n,o){return t.change(function(i){var r;if(!n){r=t.document.selection;}else if(n instanceof jg||n instanceof Xg){r=n;}else{r=i.createSelection(n,o);}if(!r.isCollapsed){t.deleteContent(r,{doNotAutoparagraph:true});}var s=new nb(t,i,r.anchor);var a;if(e.is("documentFragment")){a=e.getChildren();}else{a=[e];}s.handleNodes(a);var c=s.getSelectionRange();if(c){if(r instanceof Xg){i.setSelection(c);}else{r.setTo(c);}}else{}var l=s.getAffectedRange()||t.createRange(r.anchor);s.destroy();return l;});}var nb=/*#__PURE__*/function(){function nb(t,e,n){_classCallCheck(this,nb);this.model=t;this.writer=e;this.position=n;this.canMergeWith=new Set([this.position.parent]);this.schema=t.schema;this._documentFragment=e.createDocumentFragment();this._documentFragmentPosition=e.createPositionAt(this._documentFragment,0);this._firstNode=null;this._lastNode=null;this._lastAutoParagraph=null;this._filterAttributesOf=[];this._affectedStart=null;this._affectedEnd=null;}_createClass(nb,[{key:"handleNodes",value:function handleNodes(t){for(var _i94=0,_Array$from6=Array.from(t);_i94<_Array$from6.length;_i94++){var _e194=_Array$from6[_i94];this._handleNode(_e194);}this._insertPartialFragment();if(this._lastAutoParagraph){this._updateLastNodeFromAutoParagraph(this._lastAutoParagraph);}this._mergeOnRight();this.schema.removeDisallowedAttributes(this._filterAttributesOf,this.writer);this._filterAttributesOf=[];}},{key:"_updateLastNodeFromAutoParagraph",value:function _updateLastNodeFromAutoParagraph(t){var e=this.writer.createPositionAfter(this._lastNode);var n=this.writer.createPositionAfter(t);if(n.isAfter(e)){this._lastNode=t;if(this.position.parent!=t||!this.position.isAtEnd){throw new h("insertcontent-invalid-insertion-position",this);}this.position=n;this._setAffectedBoundaries(this.position);}}},{key:"getSelectionRange",value:function getSelectionRange(){if(this.nodeToSelect){return Og._createOn(this.nodeToSelect);}return this.model.schema.getNearestSelectionRange(this.position);}},{key:"getAffectedRange",value:function getAffectedRange(){if(!this._affectedStart){return null;}return new Og(this._affectedStart,this._affectedEnd);}},{key:"destroy",value:function destroy(){if(this._affectedStart){this._affectedStart.detach();}if(this._affectedEnd){this._affectedEnd.detach();}}},{key:"_handleNode",value:function _handleNode(t){if(this.schema.isObject(t)){this._handleObject(t);return;}var e=this._checkAndAutoParagraphToAllowedPosition(t);if(!e){e=this._checkAndSplitToAllowedPosition(t);if(!e){this._handleDisallowedNode(t);return;}}this._appendToFragment(t);if(!this._firstNode){this._firstNode=t;}this._lastNode=t;}},{key:"_insertPartialFragment",value:function _insertPartialFragment(){if(this._documentFragment.isEmpty){return;}var t=Qk.fromPosition(this.position,"toNext");this._setAffectedBoundaries(this.position);if(this._documentFragment.getChild(0)==this._firstNode){this.writer.insert(this._firstNode,this.position);this._mergeOnLeft();this.position=t.toPosition();}if(!this._documentFragment.isEmpty){this.writer.insert(this._documentFragment,this.position);}this._documentFragmentPosition=this.writer.createPositionAt(this._documentFragment,0);this.position=t.toPosition();t.detach();}},{key:"_handleObject",value:function _handleObject(t){if(this._checkAndSplitToAllowedPosition(t)){this._appendToFragment(t);}else{this._tryAutoparagraphing(t);}}},{key:"_handleDisallowedNode",value:function _handleDisallowedNode(t){if(t.is("element")){this.handleNodes(t.getChildren());}else{this._tryAutoparagraphing(t);}}},{key:"_appendToFragment",value:function _appendToFragment(t){if(!this.schema.checkChild(this.position,t)){throw new h("insertcontent-wrong-position",this,{node:t,position:this.position});}this.writer.insert(t,this._documentFragmentPosition);this._documentFragmentPosition=this._documentFragmentPosition.getShiftedBy(t.offsetSize);if(this.schema.isObject(t)&&!this.schema.checkChild(this.position,"$text")){this.nodeToSelect=t;}else{this.nodeToSelect=null;}this._filterAttributesOf.push(t);}},{key:"_setAffectedBoundaries",value:function _setAffectedBoundaries(t){if(!this._affectedStart){this._affectedStart=Qk.fromPosition(t,"toPrevious");}if(!this._affectedEnd||this._affectedEnd.isBefore(t)){if(this._affectedEnd){this._affectedEnd.detach();}this._affectedEnd=Qk.fromPosition(t,"toNext");}}},{key:"_mergeOnLeft",value:function _mergeOnLeft(){var t=this._firstNode;if(!(t instanceof Eg)){return;}if(!this._canMergeLeft(t)){return;}var e=Qk._createBefore(t);e.stickiness="toNext";var n=Qk.fromPosition(this.position,"toNext");if(this._affectedStart.isEqual(e)){this._affectedStart.detach();this._affectedStart=Qk._createAt(e.nodeBefore,"end","toPrevious");}if(this._firstNode===this._lastNode){this._firstNode=e.nodeBefore;this._lastNode=e.nodeBefore;}this.writer.merge(e);if(e.isEqual(this._affectedEnd)&&this._firstNode===this._lastNode){this._affectedEnd.detach();this._affectedEnd=Qk._createAt(e.nodeBefore,"end","toNext");}this.position=n.toPosition();n.detach();this._filterAttributesOf.push(this.position.parent);e.detach();}},{key:"_mergeOnRight",value:function _mergeOnRight(){var t=this._lastNode;if(!(t instanceof Eg)){return;}if(!this._canMergeRight(t)){return;}var e=Qk._createAfter(t);e.stickiness="toNext";if(!this.position.isEqual(e)){throw new h("insertcontent-invalid-insertion-position",this);}this.position=Tg._createAt(e.nodeBefore,"end");var n=Qk.fromPosition(this.position,"toPrevious");if(this._affectedEnd.isEqual(e)){this._affectedEnd.detach();this._affectedEnd=Qk._createAt(e.nodeBefore,"end","toNext");}if(this._firstNode===this._lastNode){this._firstNode=e.nodeBefore;this._lastNode=e.nodeBefore;}this.writer.merge(e);if(e.getShiftedBy(-1).isEqual(this._affectedStart)&&this._firstNode===this._lastNode){this._affectedStart.detach();this._affectedStart=Qk._createAt(e.nodeBefore,0,"toPrevious");}this.position=n.toPosition();n.detach();this._filterAttributesOf.push(this.position.parent);e.detach();}},{key:"_canMergeLeft",value:function _canMergeLeft(t){var e=t.previousSibling;return e instanceof Eg&&this.canMergeWith.has(e)&&this.model.schema.checkMerge(e,t);}},{key:"_canMergeRight",value:function _canMergeRight(t){var e=t.nextSibling;return e instanceof Eg&&this.canMergeWith.has(e)&&this.model.schema.checkMerge(t,e);}},{key:"_tryAutoparagraphing",value:function _tryAutoparagraphing(t){var e=this.writer.createElement("paragraph");if(this._getAllowedIn(this.position.parent,e)&&this.schema.checkChild(e,t)){e._appendChild(t);this._handleNode(e);}}},{key:"_checkAndAutoParagraphToAllowedPosition",value:function _checkAndAutoParagraphToAllowedPosition(t){if(this.schema.checkChild(this.position.parent,t)){return true;}if(!this.schema.checkChild(this.position.parent,"paragraph")||!this.schema.checkChild("paragraph",t)){return false;}this._insertPartialFragment();var e=this.writer.createElement("paragraph");this.writer.insert(e,this.position);this._setAffectedBoundaries(this.position);this._lastAutoParagraph=e;this.position=this.writer.createPositionAt(e,0);return true;}},{key:"_checkAndSplitToAllowedPosition",value:function _checkAndSplitToAllowedPosition(t){var e=this._getAllowedIn(this.position.parent,t);if(!e){return false;}if(e!=this.position.parent){this._insertPartialFragment();}while(e!=this.position.parent){if(this.position.isAtStart){var _t196=this.position.parent;this.position=this.writer.createPositionBefore(_t196);if(_t196.isEmpty&&_t196.parent===e){this.writer.remove(_t196);}}else if(this.position.isAtEnd){this.position=this.writer.createPositionAfter(this.position.parent);}else{var _t197=this.writer.createPositionAfter(this.position.parent);this._setAffectedBoundaries(this.position);this.writer.split(this.position);this.position=_t197;this.canMergeWith.add(this.position.nodeAfter);}}return true;}},{key:"_getAllowedIn",value:function _getAllowedIn(t,e){if(this.schema.checkChild(t,e)){return t;}if(this.schema.isLimit(t)){return null;}return this._getAllowedIn(t.parent,e);}}]);return nb;}();function ob(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"auto";var o=t.getSelectedElement();if(o&&e.schema.isObject(o)&&!e.schema.isInline(o)){if(["before","after"].includes(n)){return e.createRange(e.createPositionAt(o,n));}return e.createRangeOn(o);}var i=mg(t.getSelectedBlocks());if(!i){return e.createRange(t.focus);}if(i.isEmpty){return e.createRange(e.createPositionAt(i,0));}var r=e.createPositionAfter(i);if(t.focus.isTouching(r)){return e.createRange(r);}return e.createRange(e.createPositionBefore(i));}function ib(t,e,n,o){var i=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};if(!t.schema.isObject(e)){throw new h("insertobject-element-not-an-object",t,{object:e});}var r;if(!n){r=t.document.selection;}else if(n.is("selection")){r=n;}else{r=t.createSelection(n,o);}var s=r;if(i.findOptimalPosition&&t.schema.isBlock(e)){s=t.createSelection(ob(r,t,i.findOptimalPosition));}var a=mg(r.getSelectedBlocks());var c={};if(a){Object.assign(c,t.schema.getAttributesWithProperty(a,"copyOnReplace",true));}return t.change(function(n){if(!s.isCollapsed){t.deleteContent(s,{doNotAutoparagraph:true});}var o=e;var r=s.anchor.parent;if(!t.schema.checkChild(r,e)&&t.schema.checkChild(r,"paragraph")&&t.schema.checkChild("paragraph",e)){o=n.createElement("paragraph");n.insert(e,o);}t.schema.setAllowedAttributes(o,c,n);var a=t.insertContent(o,s);if(a.isCollapsed){return a;}if(i.setSelection){rb(n,e,i.setSelection,c);}return a;});}function rb(t,e,n,o){var i=t.model;if(n=="after"){var _n175=e.nextSibling;var _r39=_n175&&i.schema.checkChild(_n175,"$text");if(!_r39&&i.schema.checkChild(e.parent,"paragraph")){_n175=t.createElement("paragraph");i.schema.setAllowedAttributes(_n175,o,t);i.insertContent(_n175,t.createPositionAfter(e));}if(_n175){t.setSelection(_n175,0);}}else if(n=="on"){t.setSelection(e,"on");}else{throw new h("insertobject-invalid-place-parameter-value",i);}}function sb(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(e.isCollapsed){return;}var o=e.getFirstRange();if(o.root.rootName=="$graveyard"){return;}var i=t.schema;t.change(function(t){if(!n.doNotResetEntireContent&&wb(i,e)){bb(t,e,i);return;}var r={};if(!n.doNotAutoparagraph){var _t198=e.getSelectedElement();if(_t198){Object.assign(r,i.getAttributesWithProperty(_t198,"copyOnReplace",true));}}var _ab=ab(o),_ab2=_slicedToArray(_ab,2),s=_ab2[0],a=_ab2[1];if(!s.isTouching(a)){t.remove(t.createRange(s,a));}if(!n.leaveUnmerged){lb(t,s,a);i.removeDisallowedAttributes(s.parent.getChildren(),t);}_b(t,e,s);if(!n.doNotAutoparagraph&&pb(i,s)){kb(t,s,e,r);}s.detach();a.detach();});}function ab(t){var e=t.root.document.model;var n=t.start;var o=t.end;if(e.hasContent(t,{ignoreMarkers:true})){var _n176=cb(o);if(_n176&&o.isTouching(e.createPositionAt(_n176,0))){var _n177=e.createSelection(t);e.modifySelection(_n177,{direction:"backward"});var _i95=_n177.getLastPosition();var _r40=e.createRange(_i95,o);if(!e.hasContent(_r40,{ignoreMarkers:true})){o=_i95;}}}return[Qk.fromPosition(n,"toPrevious"),Qk.fromPosition(o,"toNext")];}function cb(t){var e=t.parent;var n=e.root.document.model.schema;var o=e.getAncestors({parentFirst:true,includeSelf:true});var _iterator275=_createForOfIteratorHelper(o),_step275;try{for(_iterator275.s();!(_step275=_iterator275.n()).done;){var _t199=_step275.value;if(n.isLimit(_t199)){return null;}if(n.isBlock(_t199)){return _t199;}}}catch(err){_iterator275.e(err);}finally{_iterator275.f();}}function lb(t,e,n){var o=t.model;if(!fb(t.model.schema,e,n)){return;}var _gb=gb(e,n),_gb2=_slicedToArray(_gb,2),i=_gb2[0],r=_gb2[1];if(!i||!r){return;}if(!o.hasContent(i,{ignoreMarkers:true})&&o.hasContent(r,{ignoreMarkers:true})){hb(t,e,n,i.parent);}else{db(t,e,n,i.parent);}}function db(t,e,n,o){var i=e.parent;var r=n.parent;if(i==o||r==o){return;}e=t.createPositionAfter(i);n=t.createPositionBefore(r);if(!n.isEqual(e)){t.insert(r,e);}t.merge(e);while(n.parent.isEmpty){var _e195=n.parent;n=t.createPositionBefore(_e195);t.remove(_e195);}if(!fb(t.model.schema,e,n)){return;}db(t,e,n,o);}function hb(t,e,n,o){var i=e.parent;var r=n.parent;if(i==o||r==o){return;}e=t.createPositionAfter(i);n=t.createPositionBefore(r);if(!n.isEqual(e)){t.insert(i,n);}while(e.parent.isEmpty){var _n178=e.parent;e=t.createPositionBefore(_n178);t.remove(_n178);}n=t.createPositionBefore(r);ub(t,n);if(!fb(t.model.schema,e,n)){return;}hb(t,e,n,o);}function ub(t,e){var n=e.nodeBefore;var o=e.nodeAfter;if(n.name!=o.name){t.rename(n,o.name);}t.clearAttributes(n);t.setAttributes(Object.fromEntries(o.getAttributes()),n);t.merge(e);}function fb(t,e,n){var o=e.parent;var i=n.parent;if(o==i){return false;}if(t.isLimit(o)||t.isLimit(i)){return false;}return mb(e,n,t);}function gb(t,e){var n=t.getAncestors();var o=e.getAncestors();var i=0;while(n[i]&&n[i]==o[i]){i++;}return[n[i],o[i]];}function pb(t,e){var n=t.checkChild(e,"$text");var o=t.checkChild(e,"paragraph");return!n&&o;}function mb(t,e,n){var o=new Og(t,e);var _iterator276=_createForOfIteratorHelper(o.getWalker()),_step276;try{for(_iterator276.s();!(_step276=_iterator276.n()).done;){var _t200=_step276.value;if(n.isLimit(_t200.item)){return false;}}}catch(err){_iterator276.e(err);}finally{_iterator276.f();}return true;}function kb(t,e,n){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var i=t.createElement("paragraph");t.model.schema.setAllowedAttributes(i,o,t);t.insert(i,e);_b(t,n,t.createPositionAt(i,0));}function bb(t,e){var n=t.model.schema.getLimitElement(e);t.remove(t.createRangeIn(n));kb(t,t.createPositionAt(n,0),e);}function wb(t,e){var n=t.getLimitElement(e);if(!e.containsEntireContent(n)){return false;}var o=e.getFirstRange();if(o.start.parent==o.end.parent){return false;}return t.checkChild(n,"paragraph");}function _b(t,e,n){if(e instanceof Xg){t.setSelection(n);}else{e.setTo(n);}}var vb=' ,.?!:;"-()';function Ab(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=t.schema;var i=n.direction!="backward";var r=n.unit?n.unit:"character";var s=!!n.treatEmojiAsSingleUnit;var a=e.focus;var c=new Sg({boundaries:Eb(a,i),singleCharacters:true,direction:i?"forward":"backward"});var l={walker:c,schema:o,isForward:i,unit:r,treatEmojiAsSingleUnit:s};var d;var _loop3=function _loop3(){if(d.done){return{v:void 0};}var n=Cb(l,d.value);if(n){if(e instanceof Xg){t.change(function(t){t.setSelectionFocus(n);});}else{e.setFocus(n);}return{v:void 0};}};while(d=c.next()){var _ret2=_loop3();if(_typeof(_ret2)==="object")return _ret2.v;}}function Cb(t,e){var n=t.isForward,o=t.walker,i=t.unit,r=t.schema,s=t.treatEmojiAsSingleUnit;var a=e.type,c=e.item,l=e.nextPosition;if(a=="text"){if(t.unit==="word"){return xb(o,n);}return yb(o,i,s);}if(a==(n?"elementStart":"elementEnd")){if(r.isSelectable(c)){return Tg._createAt(c,n?"after":"before");}if(r.checkChild(l,"$text")){return l;}}else{if(r.isLimit(c)){o.skip(function(){return true;});return;}if(r.checkChild(l,"$text")){return l;}}}function yb(t,e,n){var o=t.position.textNode;if(o){var _i96=o.data;var _r41=t.position.offset-o.startOffset;while(Vk(_i96,_r41)||e=="character"&&Lk(_i96,_r41)||n&&jk(_i96,_r41)){t.next();_r41=t.position.offset-o.startOffset;}}return t.position;}function xb(t,e){var n=t.position.textNode;if(n){var _o112=t.position.offset-n.startOffset;while(!Db(n.data,_o112,e)&&!Sb(n,_o112,e)){t.next();var _i97=e?t.position.nodeAfter:t.position.nodeBefore;if(_i97&&_i97.is("$text")){var _o113=_i97.data.charAt(e?0:_i97.data.length-1);if(!vb.includes(_o113)){t.next();n=t.position.textNode;}}_o112=t.position.offset-n.startOffset;}}return t.position;}function Eb(t,e){var n=t.root;var o=Tg._createAt(n,e?"end":0);if(e){return new Og(t,o);}else{return new Og(o,t);}}function Db(t,e,n){var o=e+(n?0:-1);return vb.includes(t.charAt(o));}function Sb(t,e,n){return e===(n?t.endOffset:0);}function Pb(t,e){return t.change(function(t){var n=t.createDocumentFragment();var o=e.getFirstRange();if(!o||o.isCollapsed){return n;}var i=o.start.root;var r=o.start.getCommonPath(o.end);var s=i.getNodeByPath(r);var a;if(o.start.parent==o.end.parent){a=o;}else{a=t.createRange(t.createPositionAt(s,o.start.path[r.length]),t.createPositionAt(s,o.end.path[r.length]+1));}var c=a.end.offset-a.start.offset;var _iterator277=_createForOfIteratorHelper(a.getItems({shallow:true})),_step277;try{for(_iterator277.s();!(_step277=_iterator277.n()).done;){var _e197=_step277.value;if(_e197.is("$textProxy")){t.appendText(_e197.data,_e197.getAttributes(),n);}else{t.append(t.cloneElement(_e197,true),n);}}}catch(err){_iterator277.e(err);}finally{_iterator277.f();}if(a!=o){var _e196=o._getTransformedByMove(a.start,t.createPositionAt(n,0),c)[0];var _i98=t.createRange(t.createPositionAt(n,0),_e196.start);var _r42=t.createRange(_e196.end,t.createPositionAt(n,"end"));Tb(_r42,t);Tb(_i98,t);}return n;});}function Tb(t,e){var n=[];Array.from(t.getItems({direction:"backward"})).map(function(t){return e.createRangeOn(t);}).filter(function(e){var n=(e.start.isAfter(t.start)||e.start.isEqual(t.start))&&(e.end.isBefore(t.end)||e.end.isEqual(t.end));return n;}).forEach(function(t){n.push(t.start.parent);e.remove(t);});n.forEach(function(t){var n=t;while(n.parent&&n.isEmpty){var _t201=e.createRangeOn(n);n=n.parent;e.remove(_t201);}});}function Bb(t){t.document.registerPostFixer(function(e){return Ib(e,t);});}function Ib(t,e){var n=e.document.selection;var o=e.schema;var i=[];var r=false;var _iterator278=_createForOfIteratorHelper(n.getRanges()),_step278;try{for(_iterator278.s();!(_step278=_iterator278.n()).done;){var _t202=_step278.value;var _e198=Rb(_t202,o);if(_e198&&!_e198.isEqual(_t202)){i.push(_e198);r=true;}else{i.push(_t202);}}}catch(err){_iterator278.e(err);}finally{_iterator278.f();}if(r){t.setSelection(Fb(i),{backward:n.isBackward});}}function Rb(t,e){if(t.isCollapsed){return Ob(t,e);}return zb(t,e);}function Ob(t,e){var n=t.start;var o=e.getNearestSelectionRange(n);if(!o){var _t203=n.getAncestors().reverse().find(function(t){return e.isObject(t);});if(_t203){return Og._createOn(_t203);}return null;}if(!o.isCollapsed){return o;}var i=o.start;if(n.isEqual(i)){return null;}return new Og(i);}function zb(t,e){var n=t.start,o=t.end;var i=e.checkChild(n,"$text");var r=e.checkChild(o,"$text");var s=e.getLimitElement(n);var a=e.getLimitElement(o);if(s===a){if(i&&r){return null;}if(Nb(n,o,e)){var _t204=n.nodeAfter&&e.isSelectable(n.nodeAfter);var _i99=_t204?null:e.getNearestSelectionRange(n,"forward");var _r43=o.nodeBefore&&e.isSelectable(o.nodeBefore);var _s21=_r43?null:e.getNearestSelectionRange(o,"backward");var _a13=_i99?_i99.start:n;var _c6=_s21?_s21.end:o;return new Og(_a13,_c6);}}var c=s&&!s.is("rootElement");var l=a&&!a.is("rootElement");if(c||l){var _t205=n.nodeAfter&&o.nodeBefore&&n.nodeAfter.parent===o.nodeBefore.parent;var _i100=c&&(!_t205||!Vb(n.nodeAfter,e));var _r44=l&&(!_t205||!Vb(o.nodeBefore,e));var _d2=n;var _h2=o;if(_i100){_d2=Tg._createBefore(Mb(s,e));}if(_r44){_h2=Tg._createAfter(Mb(a,e));}return new Og(_d2,_h2);}return null;}function Mb(t,e){var n=t;var o=n;while(e.isLimit(o)&&o.parent){n=o;o=o.parent;}return n;}function Nb(t,e,n){var o=t.nodeAfter&&!n.isLimit(t.nodeAfter)||n.checkChild(t,"$text");var i=e.nodeBefore&&!n.isLimit(e.nodeBefore)||n.checkChild(e,"$text");return o||i;}function Fb(t){var e=_toConsumableArray(t);var n=new Set();var o=1;while(o<e.length){var _t206=e[o];var _i101=e.slice(0,o);var _iterator279=_createForOfIteratorHelper(_i101.entries()),_step279;try{for(_iterator279.s();!(_step279=_iterator279.n()).done;){var _step279$value=_slicedToArray(_step279.value,2),_r45=_step279$value[0],_s22=_step279$value[1];if(n.has(_r45)){continue;}if(_t206.isEqual(_s22)){n.add(_r45);}else if(_t206.isIntersecting(_s22)){n.add(_r45);n.add(o);var _i102=_t206.getJoined(_s22);e.push(_i102);}}}catch(err){_iterator279.e(err);}finally{_iterator279.f();}o++;}var i=e.filter(function(t,e){return!n.has(e);});return i;}function Vb(t,e){return t&&e.isSelectable(t);}var Lb=/*#__PURE__*/function(){function Lb(){var _this84=this;_classCallCheck(this,Lb);this.markers=new $k();this.document=new Kk(this);this.schema=new xm();this._pendingChanges=[];this._currentWriter=null;["insertContent","insertObject","deleteContent","modifySelection","getSelectedContent","applyOperation"].forEach(function(t){return _this84.decorate(t);});this.on("applyOperation",function(t,e){var n=e[0];n._validate();},{priority:"highest"});this.schema.register("$root",{isLimit:true});this.schema.register("$container",{allowIn:["$root","$container"]});this.schema.register("$block",{allowIn:["$root","$container"],isBlock:true});this.schema.register("$blockObject",{allowWhere:"$block",isBlock:true,isObject:true});this.schema.register("$inlineObject",{allowWhere:"$text",allowAttributesOf:"$text",isInline:true,isObject:true});this.schema.register("$text",{allowIn:"$block",isInline:true,isContent:true});this.schema.register("$clipboardHolder",{allowContentOf:"$root",allowChildren:"$text",isLimit:true});this.schema.register("$documentFragment",{allowContentOf:"$root",allowChildren:"$text",isLimit:true});this.schema.register("$marker");this.schema.addChildCheck(function(t,e){if(e.name==="$marker"){return true;}});Bb(this);this.document.registerPostFixer(Qp);}_createClass(Lb,[{key:"change",value:function change(t){try{if(this._pendingChanges.length===0){this._pendingChanges.push({batch:new ek(),callback:t});return this._runPendingChanges()[0];}else{return t(this._currentWriter);}}catch(t){h.rethrowUnexpectedError(t,this);}}},{key:"enqueueChange",value:function enqueueChange(t,e){try{if(!t){t=new ek();}else if(typeof t==="function"){e=t;t=new ek();}else if(!(t instanceof ek)){t=new ek(t);}this._pendingChanges.push({batch:t,callback:e});if(this._pendingChanges.length==1){this._runPendingChanges();}}catch(t){h.rethrowUnexpectedError(t,this);}}},{key:"applyOperation",value:function applyOperation(t){t._execute();}},{key:"insertContent",value:function insertContent(t,e,n){return eb(this,t,e,n);}},{key:"insertObject",value:function insertObject(t,e,n,o){return ib(this,t,e,n,o);}},{key:"deleteContent",value:function deleteContent(t,e){sb(this,t,e);}},{key:"modifySelection",value:function modifySelection(t,e){Ab(this,t,e);}},{key:"getSelectedContent",value:function getSelectedContent(t){return Pb(this,t);}},{key:"hasContent",value:function hasContent(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=t instanceof Eg?Og._createIn(t):t;if(n.isCollapsed){return false;}var _e$ignoreWhitespaces=e.ignoreWhitespaces,o=_e$ignoreWhitespaces===void 0?false:_e$ignoreWhitespaces,_e$ignoreMarkers=e.ignoreMarkers,i=_e$ignoreMarkers===void 0?false:_e$ignoreMarkers;if(!i){var _iterator280=_createForOfIteratorHelper(this.markers.getMarkersIntersectingRange(n)),_step280;try{for(_iterator280.s();!(_step280=_iterator280.n()).done;){var _t207=_step280.value;if(_t207.affectsData){return true;}}}catch(err){_iterator280.e(err);}finally{_iterator280.f();}}var _iterator281=_createForOfIteratorHelper(n.getItems()),_step281;try{for(_iterator281.s();!(_step281=_iterator281.n()).done;){var _t208=_step281.value;if(this.schema.isContent(_t208)){if(_t208.is("$textProxy")){if(!o){return true;}else if(_t208.data.search(/\S/)!==-1){return true;}}else{return true;}}}}catch(err){_iterator281.e(err);}finally{_iterator281.f();}return false;}},{key:"createPositionFromPath",value:function createPositionFromPath(t,e,n){return new Tg(t,e,n);}},{key:"createPositionAt",value:function createPositionAt(t,e){return Tg._createAt(t,e);}},{key:"createPositionAfter",value:function createPositionAfter(t){return Tg._createAfter(t);}},{key:"createPositionBefore",value:function createPositionBefore(t){return Tg._createBefore(t);}},{key:"createRange",value:function createRange(t,e){return new Og(t,e);}},{key:"createRangeIn",value:function createRangeIn(t){return Og._createIn(t);}},{key:"createRangeOn",value:function createRangeOn(t){return Og._createOn(t);}},{key:"createSelection",value:function createSelection(t,e,n){return new jg(t,e,n);}},{key:"createBatch",value:function createBatch(t){return new ek(t);}},{key:"createOperationFromJSON",value:function createOperationFromJSON(t){return Yk.fromJSON(t,this.document);}},{key:"destroy",value:function destroy(){this.document.destroy();this.stopListening();}},{key:"_runPendingChanges",value:function _runPendingChanges(){var t=[];this.fire("_beforeChanges");while(this._pendingChanges.length){var _e199=this._pendingChanges[0].batch;this._currentWriter=new xk(this,_e199);var _n179=this._pendingChanges[0].callback(this._currentWriter);t.push(_n179);this.document._handleChangeBlock(this._currentWriter);this._pendingChanges.shift();this._currentWriter=null;}this.fire("_afterChanges");return t;}}]);return Lb;}();fo(Lb,eo);var Hb=/*#__PURE__*/function(_bg){_inherits(Hb,_bg);var _super41=_createSuper(Hb);function Hb(t){var _this85;_classCallCheck(this,Hb);_this85=_super41.call(this);_this85.editor=t;return _this85;}_createClass(Hb,[{key:"set",value:function set(t,e){var _this86=this;var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof e=="string"){var _t209=e;e=function e(_e200,n){_this86.editor.execute(_t209);n();};}_get(_getPrototypeOf(Hb.prototype),"set",this).call(this,t,e,n);}}]);return Hb;}(bg);var jb=/*#__PURE__*/function(){function jb(){var _this87=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,jb);var e=t.language||this.constructor.defaultConfig&&this.constructor.defaultConfig.language;this._context=t.context||new ac({language:e});this._context._addEditor(this,!t.context);var n=Array.from(this.constructor.builtinPlugins||[]);this.config=new Ka(t,this.constructor.defaultConfig);this.config.define("plugins",n);this.config.define(this._context._getEditorConfig());this.plugins=new Za(this,n,this._context.plugins);this.locale=this._context.locale;this.t=this.locale.t;this._readOnlyLocks=new Set();this.commands=new Am();this.set("state","initializing");this.once("ready",function(){return _this87.state="ready";},{priority:"high"});this.once("destroy",function(){return _this87.state="destroyed";},{priority:"high"});this.model=new Lb();var o=new jl();this.data=new Zm(this.model,o);this.editing=new vm(this.model,o);this.editing.view.document.bind("isReadOnly").to(this);this.conversion=new Qm([this.editing.downcastDispatcher,this.data.downcastDispatcher],this.data.upcastDispatcher);this.conversion.addAlias("dataDowncast",this.data.downcastDispatcher);this.conversion.addAlias("editingDowncast",this.editing.downcastDispatcher);this.keystrokes=new Hb(this);this.keystrokes.listenTo(this.editing.view.document);}_createClass(jb,[{key:"isReadOnly",get:function get(){return this._readOnlyLocks.size>0;},set:function set(t){throw new h("editor-isreadonly-has-no-setter");}},{key:"enableReadOnlyMode",value:function enableReadOnlyMode(t){if(typeof t!=="string"&&_typeof(t)!=="symbol"){throw new h("editor-read-only-lock-id-invalid",null,{lockId:t});}if(this._readOnlyLocks.has(t)){return;}this._readOnlyLocks.add(t);if(this._readOnlyLocks.size===1){this.fire("change:isReadOnly","isReadOnly",true,false);}}},{key:"disableReadOnlyMode",value:function disableReadOnlyMode(t){if(typeof t!=="string"&&_typeof(t)!=="symbol"){throw new h("editor-read-only-lock-id-invalid",null,{lockId:t});}if(!this._readOnlyLocks.has(t)){return;}this._readOnlyLocks.delete(t);if(this._readOnlyLocks.size===0){this.fire("change:isReadOnly","isReadOnly",false,true);}}},{key:"initPlugins",value:function initPlugins(){var t=this.config;var e=t.get("plugins");var n=t.get("removePlugins")||[];var o=t.get("extraPlugins")||[];var i=t.get("substitutePlugins")||[];return this.plugins.init(e.concat(o),n,i);}},{key:"destroy",value:function destroy(){var _this88=this;var t=Promise.resolve();if(this.state=="initializing"){t=new Promise(function(t){return _this88.once("ready",t);});}return t.then(function(){_this88.fire("destroy");_this88.stopListening();_this88.commands.destroy();}).then(function(){return _this88.plugins.destroy();}).then(function(){_this88.model.destroy();_this88.data.destroy();_this88.editing.destroy();_this88.keystrokes.destroy();}).then(function(){return _this88._context._removeEditor(_this88);});}},{key:"execute",value:function execute(){try{var _this$commands;return(_this$commands=this.commands).execute.apply(_this$commands,arguments);}catch(t){h.rethrowUnexpectedError(t,this);}}},{key:"focus",value:function focus(){this.editing.view.focus();}}]);return jb;}();fo(jb,eo);var qb=/*#__PURE__*/function(){function qb(t){_classCallCheck(this,qb);this.editor=t;this._components=new Map();}_createClass(qb,[{key:"names",value:/*#__PURE__*/regeneratorRuntime.mark(function names(){var _iterator282,_step282,_t210;return regeneratorRuntime.wrap(function names$(_context34){while(1){switch(_context34.prev=_context34.next){case 0:_iterator282=_createForOfIteratorHelper(this._components.values());_context34.prev=1;_iterator282.s();case 3:if((_step282=_iterator282.n()).done){_context34.next=9;break;}_t210=_step282.value;_context34.next=7;return _t210.originalName;case 7:_context34.next=3;break;case 9:_context34.next=14;break;case 11:_context34.prev=11;_context34.t0=_context34["catch"](1);_iterator282.e(_context34.t0);case 14:_context34.prev=14;_iterator282.f();return _context34.finish(14);case 17:case"end":return _context34.stop();}}},names,this,[[1,11,14,17]]);})},{key:"add",value:function add(t,e){this._components.set(Wb(t),{callback:e,originalName:t});}},{key:"create",value:function create(t){if(!this.has(t)){throw new h("componentfactory-item-missing",this,{name:t});}return this._components.get(Wb(t)).callback(this.editor.locale);}},{key:"has",value:function has(t){return this._components.has(Wb(t));}}]);return qb;}();function Wb(t){return String(t).toLowerCase();}var Kb=/*#__PURE__*/function(){function Kb(t){var _this89=this;_classCallCheck(this,Kb);this.editor=t;this.componentFactory=new qb(t);this.focusTracker=new kg();this.set("viewportOffset",this._readViewportOffsetFromConfig());this._editableElementsMap=new Map();this.listenTo(t.editing.view.document,"layoutChanged",function(){return _this89.update();});}_createClass(Kb,[{key:"element",get:function get(){return null;}},{key:"update",value:function update(){this.fire("update");}},{key:"destroy",value:function destroy(){this.stopListening();this.focusTracker.destroy();var _iterator283=_createForOfIteratorHelper(this._editableElementsMap.values()),_step283;try{for(_iterator283.s();!(_step283=_iterator283.n()).done;){var _t211=_step283.value;_t211.ckeditorInstance=null;}}catch(err){_iterator283.e(err);}finally{_iterator283.f();}this._editableElementsMap=new Map();}},{key:"setEditableElement",value:function setEditableElement(t,e){this._editableElementsMap.set(t,e);if(!e.ckeditorInstance){e.ckeditorInstance=this.editor;}}},{key:"getEditableElement",value:function getEditableElement(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"main";return this._editableElementsMap.get(t);}},{key:"getEditableElementsNames",value:function getEditableElementsNames(){return this._editableElementsMap.keys();}},{key:"_editableElements",get:function get(){console.warn("editor-ui-deprecated-editable-elements: "+"The EditorUI#_editableElements property has been deprecated and will be removed in the near future.",{editorUI:this});return this._editableElementsMap;}},{key:"_readViewportOffsetFromConfig",value:function _readViewportOffsetFromConfig(){var t=this.editor;var e=t.config.get("ui.viewportOffset");if(e){return e;}var n=t.config.get("toolbar.viewportTopOffset");if(n){console.warn("editor-ui-deprecated-viewport-offset-config: "+"The `toolbar.vieportTopOffset` configuration option is deprecated. "+"It will be removed from future CKEditor versions. Use `ui.viewportOffset.top` instead.");return{top:n};}return{top:0};}}]);return Kb;}();fo(Kb,eo);function Gb(t){if(!dt(t.updateSourceElement)){throw new h("attachtoform-missing-elementapi-interface",t);}var e=t.sourceElement;if(e&&e.tagName.toLowerCase()==="textarea"&&e.form){var _n180;var _o114=e.form;var _i103=function _i103(){return t.updateSourceElement();};if(dt(_o114.submit)){_n180=_o114.submit;_o114.submit=function(){_i103();_n180.apply(_o114);};}_o114.addEventListener("submit",_i103);t.on("destroy",function(){_o114.removeEventListener("submit",_i103);if(_n180){_o114.submit=_n180;}});}}var $b={setData:function setData(t){this.data.set(t);},getData:function getData(t){return this.data.get(t);}};var Ub=$b;var Jb={updateSourceElement:function updateSourceElement(){if(!this.sourceElement){throw new h("editor-missing-sourceelement",this);}og(this.sourceElement,this.data.get());}};var Zb=Jb;function Yb(t){var e=t.sourceElement;if(!e){return;}if(e.ckeditorInstance){throw new h("editor-source-element-already-used",t);}e.ckeditorInstance=t;t.once("destroy",function(){delete e.ckeditorInstance;});}var Qb=/*#__PURE__*/function(_ref30,_Symbol$iterator13){_inherits(Qb,_ref30);var _super42=_createSuper(Qb);function Qb(){_classCallCheck(this,Qb);return _super42.apply(this,arguments);}_createClass(Qb,[{key:"init",value:function init(){this.set("hasAny",false);this._actions=new Collection({idProperty:"_id"});this._actions.delegate("add","remove").to(this);}},{key:"add",value:function add(t){if(typeof t!=="string"){throw new CKEditorError("pendingactions-add-invalid-message",this);}var e=Object.create(ObservableMixin);e.set("message",t);this._actions.add(e);this.hasAny=true;return e;}},{key:"remove",value:function remove(t){this._actions.remove(t);this.hasAny=!!this._actions.length;}},{key:"first",get:function get(){return this._actions.get(0);}},{key:_Symbol$iterator13,value:function value(){return this._actions[Symbol.iterator]();}}],[{key:"pluginName",get:function get(){return"PendingActions";}}]);return Qb;}(null&&ContextPlugin,Symbol.iterator);var Xb='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m11.591 10.177 4.243 4.242a1 1 0 0 1-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 0 1-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 0 1 5.934 4.52l4.243 4.243 4.242-4.243a1 1 0 1 1 1.415 1.414l-4.243 4.243z"/></svg>';var tw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 16h9a1 1 0 0 1 0 2H2a1 1 0 0 1 0-2z"/><path d="M17 1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h14zm0 1.5H3a.5.5 0 0 0-.492.41L2.5 3v9a.5.5 0 0 0 .41.492L3 12.5h14a.5.5 0 0 0 .492-.41L17.5 12V3a.5.5 0 0 0-.41-.492L17 2.5z" fill-opacity=".6"/></svg>';var ew='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.972 16.615a.997.997 0 0 1-.744-.292l-4.596-4.596a1 1 0 1 1 1.414-1.414l3.926 3.926 9.937-9.937a1 1 0 0 1 1.414 1.415L7.717 16.323a.997.997 0 0 1-.745.292z"/></svg>';var nw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m11.333 2 .19 2.263a5.899 5.899 0 0 1 1.458.604L14.714 3.4 16.6 5.286l-1.467 1.733c.263.452.468.942.605 1.46L18 8.666v2.666l-2.263.19a5.899 5.899 0 0 1-.604 1.458l1.467 1.733-1.886 1.886-1.733-1.467a5.899 5.899 0 0 1-1.46.605L11.334 18H8.667l-.19-2.263a5.899 5.899 0 0 1-1.458-.604L5.286 16.6 3.4 14.714l1.467-1.733a5.899 5.899 0 0 1-.604-1.458L2 11.333V8.667l2.262-.189a5.899 5.899 0 0 1 .605-1.459L3.4 5.286 5.286 3.4l1.733 1.467a5.899 5.899 0 0 1 1.46-.605L8.666 2h2.666zM10 6.267a3.733 3.733 0 1 0 0 7.466 3.733 3.733 0 0 0 0-7.466z"/></svg>';var ow='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m8.636 9.531-2.758 3.94a.5.5 0 0 0 .122.696l3.224 2.284h1.314l2.636-3.736L8.636 9.53zm.288 8.451L5.14 15.396a2 2 0 0 1-.491-2.786l6.673-9.53a2 2 0 0 1 2.785-.49l3.742 2.62a2 2 0 0 1 .491 2.785l-7.269 10.053-2.147-.066z"/><path d="M4 18h5.523v-1H4zm-2 0h1v-1H2z"/></svg>';var iw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.085 6.22 2.943 4.078a.75.75 0 1 1 1.06-1.06l2.592 2.59A11.094 11.094 0 0 1 10 5.068c4.738 0 8.578 3.101 8.578 5.083 0 1.197-1.401 2.803-3.555 3.887l1.714 1.713a.75.75 0 0 1-.09 1.138.488.488 0 0 1-.15.084.75.75 0 0 1-.821-.16L6.17 7.304c-.258.11-.51.233-.757.365l6.239 6.24-.006.005.78.78c-.388.094-.78.166-1.174.215l-1.11-1.11h.011L4.55 8.197a7.2 7.2 0 0 0-.665.514l-.112.098 4.897 4.897-.005.006 1.276 1.276a10.164 10.164 0 0 1-1.477-.117l-.479-.479-.009.009-4.863-4.863-.022.031a2.563 2.563 0 0 0-.124.2c-.043.077-.08.158-.108.241a.534.534 0 0 0-.028.133.29.29 0 0 0 .008.072.927.927 0 0 0 .082.226c.067.133.145.26.234.379l3.242 3.365.025.01.59.623c-3.265-.918-5.59-3.155-5.59-4.668 0-1.194 1.448-2.838 3.663-3.93zm7.07.531a4.632 4.632 0 0 1 1.108 5.992l.345.344.046-.018a9.313 9.313 0 0 0 2-1.112c.256-.187.5-.392.727-.613.137-.134.27-.277.392-.431.072-.091.141-.185.203-.286.057-.093.107-.19.148-.292a.72.72 0 0 0 .036-.12.29.29 0 0 0 .008-.072.492.492 0 0 0-.028-.133.999.999 0 0 0-.036-.096 2.165 2.165 0 0 0-.071-.145 2.917 2.917 0 0 0-.125-.2 3.592 3.592 0 0 0-.263-.335 5.444 5.444 0 0 0-.53-.523 7.955 7.955 0 0 0-1.054-.768 9.766 9.766 0 0 0-1.879-.891c-.337-.118-.68-.219-1.027-.301zm-2.85.21-.069.002a.508.508 0 0 0-.254.097.496.496 0 0 0-.104.679.498.498 0 0 0 .326.199l.045.005c.091.003.181.003.272.012a2.45 2.45 0 0 1 2.017 1.513c.024.061.043.125.069.185a.494.494 0 0 0 .45.287h.008a.496.496 0 0 0 .35-.158.482.482 0 0 0 .13-.335.638.638 0 0 0-.048-.219 3.379 3.379 0 0 0-.36-.723 3.438 3.438 0 0 0-2.791-1.543l-.028-.001h-.013z"/></svg>';var rw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.91 10.54c.26-.23.64-.21.88.03l3.36 3.14 2.23-2.06a.64.64 0 0 1 .87 0l2.52 2.97V4.5H3.2v10.12l3.71-4.08zm10.27-7.51c.6 0 1.09.47 1.09 1.05v11.84c0 .59-.49 1.06-1.09 1.06H2.79c-.6 0-1.09-.47-1.09-1.06V4.08c0-.58.49-1.05 1.1-1.05h14.38zm-5.22 5.56a1.96 1.96 0 1 1 3.4-1.96 1.96 1.96 0 0 1-3.4 1.96z"/></svg>';var sw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m9.239 13.938-2.88-1.663a.75.75 0 0 1 .75-1.3L9 12.067V4.75a.75.75 0 1 1 1.5 0v7.318l1.89-1.093a.75.75 0 0 1 .75 1.3l-2.879 1.663a.752.752 0 0 1-.511.187.752.752 0 0 1-.511-.187zM4.25 17a.75.75 0 1 1 0-1.5h10.5a.75.75 0 0 1 0 1.5H4.25z"/></svg>';var aw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.75 11.875a.752.752 0 0 1 .508.184l2.883 1.666a.75.75 0 0 1-.659 1.344l-.091-.044-1.892-1.093.001 4.318a.75.75 0 1 1-1.5 0v-4.317l-1.89 1.092a.75.75 0 0 1-.75-1.3l2.879-1.663a.752.752 0 0 1 .51-.187zM15.25 9a.75.75 0 1 1 0 1.5H4.75a.75.75 0 1 1 0-1.5h10.5zM9.75.375a.75.75 0 0 1 .75.75v4.318l1.89-1.093.092-.045a.75.75 0 0 1 .659 1.344l-2.883 1.667a.752.752 0 0 1-.508.184.752.752 0 0 1-.511-.187L6.359 5.65a.75.75 0 0 1 .75-1.299L9 5.442V1.125a.75.75 0 0 1 .75-.75z"/></svg>';var cw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m10.261 7.062 2.88 1.663a.75.75 0 0 1-.75 1.3L10.5 8.933v7.317a.75.75 0 1 1-1.5 0V8.932l-1.89 1.093a.75.75 0 0 1-.75-1.3l2.879-1.663a.752.752 0 0 1 .511-.187.752.752 0 0 1 .511.187zM15.25 4a.75.75 0 1 1 0 1.5H4.75a.75.75 0 0 1 0-1.5h10.5z"/></svg>';var lw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z"/></svg>';var dw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm2.286 4c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75z"/></svg>';var hw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M18 3.75a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 8a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 4a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75zm0-8a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75z"/></svg>';var uw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z"/></svg>';var fw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';var gw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M15.003 7v5.5a1 1 0 0 1-1 1H5.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H6.5V12h6.997V7.5z"/></svg>';var pw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M18.003 7v5.5a1 1 0 0 1-1 1H8.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H9.5V12h6.997V7.5z"/></svg>';var mw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2z"/><path d="M18 7v5.5a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1zm-1.505.5H3.504V12h12.991V7.5z"/></svg>';var kw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm11.5 9H18v1.5h-4.5zM2 15h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';var bw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm11.5 9H18v1.5h-4.5zm0-3H18v1.5h-4.5zm0-3H18v1.5h-4.5zM2 15h16v1.5H2z"/><path d="M12.003 7v5.5a1 1 0 0 1-1 1H2.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H3.5V12h6.997V7.5z"/></svg>';var ww='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path opacity=".5" d="M2 3h16v1.5H2zm0 12h16v1.5H2zm0-9h5v1.5H2zm0 3h5v1.5H2zm0 3h5v1.5H2z"/><path d="M18.003 7v5.5a1 1 0 0 1-1 1H8.996a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h8.007a1 1 0 0 1 1 1zm-1.506.5H9.5V12h6.997V7.5z"/></svg>';var _w='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M18.095 2H1.905C.853 2 0 2.895 0 4v12c0 1.105.853 2 1.905 2h16.19C19.147 18 20 17.105 20 16V4c0-1.105-.853-2-1.905-2zm0 1.5c.263 0 .476.224.476.5v12c0 .276-.213.5-.476.5H1.905a.489.489 0 0 1-.476-.5V4c0-.276.213-.5.476-.5h16.19z"/></svg>';var vw='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M13 6H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5h11z"/></svg>';var Aw='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M7 10H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-4a.5.5 0 0 1 .5-.5h5z"/></svg>';var Cw='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.5 17v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zm2 0v1h-1v-1h1zM1 15.5v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm-19-2v1H0v-1h1zm19 0v1h-1v-1h1zm0-2v1h-1v-1h1zm-19 0v1H0v-1h1zM14.5 2v1h-1V2h1zm2 0v1h-1V2h1zm2 0v1h-1V2h1zm-8 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm-2 0v1h-1V2h1zm8 0v1h-1V2h1zm-10 0v1h-1V2h1z"/><path d="M10 8H2a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm0 1.5a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-6a.5.5 0 0 1 .5-.5h8z"/></svg>';var yw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m7.3 17.37-.061.088a1.518 1.518 0 0 1-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 0 1 .187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506 13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5 9.375 17H19v1.5H8z"/></svg>';var xw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.999 2H15a1 1 0 0 1 0 2h-1.004v13a1 1 0 1 1-2 0V4H8.999v13a1 1 0 1 1-2 0v-7A4 4 0 0 1 3 6a4 4 0 0 1 3.999-4z"/></svg>';var Ew='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M3 10.423a6.5 6.5 0 0 1 6.056-6.408l.038.67C6.448 5.423 5.354 7.663 5.22 10H9c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574zm8 0a6.5 6.5 0 0 1 6.056-6.408l.038.67c-2.646.739-3.74 2.979-3.873 5.315H17c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574z"/></svg>';var Dw='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="9.5" cy="4.5" r="1.5"/><circle cx="9.5" cy="10.5" r="1.5"/><circle cx="9.5" cy="16.5" r="1.5"/></svg>';var Sw={cancel:Xb,caption:tw,check:ew,cog:nw,eraser:ow,lowVision:iw,image:rw,alignBottom:sw,alignMiddle:aw,alignTop:cw,alignLeft:lw,alignCenter:dw,alignRight:hw,alignJustify:uw,objectLeft:bw,objectCenter:gw,objectRight:ww,objectFullWidth:mw,objectInline:kw,objectBlockLeft:fw,objectBlockRight:pw,objectSizeFull:_w,objectSizeLarge:vw,objectSizeSmall:Aw,objectSizeMedium:Cw,pencil:yw,pilcrow:xw,quote:Ew,threeVerticalDots:Dw};function Pw(_ref31){var t=_ref31.emitter,e=_ref31.activator,n=_ref31.callback,o=_ref31.contextElements;t.listenTo(document,"mousedown",function(t,i){if(!e()){return;}var r=typeof i.composedPath=="function"?i.composedPath():[];var _iterator284=_createForOfIteratorHelper(o),_step284;try{for(_iterator284.s();!(_step284=_iterator284.n()).done;){var _t212=_step284.value;if(_t212.contains(i.target)||r.includes(_t212)){return;}}}catch(err){_iterator284.e(err);}finally{_iterator284.f();}n();});}function Tw(t){t.set("_isCssTransitionsDisabled",false);t.disableCssTransitions=function(){t._isCssTransitionsDisabled=true;};t.enableCssTransitions=function(){t._isCssTransitionsDisabled=false;};t.extendTemplate({attributes:{class:[t.bindTemplate.if("_isCssTransitionsDisabled","ck-transitions-disabled")]}});}function Bw(_ref32){var t=_ref32.view;t.listenTo(t.element,"submit",function(e,n){n.preventDefault();t.fire("submit");},{useCapture:true});}var Iw=/*#__PURE__*/function(_Ja){_inherits(Iw,_Ja);var _super43=_createSuper(Iw);function Iw(){var _this90;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,Iw);_this90=_super43.call(this,t,{idProperty:"viewUid"});_this90.on("add",function(t,e,n){_this90._renderViewIntoCollectionParent(e,n);});_this90.on("remove",function(t,e){if(e.element&&_this90._parentElement){e.element.remove();}});_this90._parentElement=null;return _this90;}_createClass(Iw,[{key:"destroy",value:function destroy(){this.map(function(t){return t.destroy();});}},{key:"setParent",value:function setParent(t){this._parentElement=t;var _iterator285=_createForOfIteratorHelper(this),_step285;try{for(_iterator285.s();!(_step285=_iterator285.n()).done;){var _t213=_step285.value;this._renderViewIntoCollectionParent(_t213);}}catch(err){_iterator285.e(err);}finally{_iterator285.f();}}},{key:"delegate",value:function delegate(){var _this91=this;for(var _len19=arguments.length,t=new Array(_len19),_key19=0;_key19<_len19;_key19++){t[_key19]=arguments[_key19];}if(!t.length||!Rw(t)){throw new h("ui-viewcollection-delegate-wrong-events",this);}return{to:function to(e){var _iterator286=_createForOfIteratorHelper(_this91),_step286;try{for(_iterator286.s();!(_step286=_iterator286.n()).done;){var _n183=_step286.value;var _iterator289=_createForOfIteratorHelper(t),_step289;try{for(_iterator289.s();!(_step289=_iterator289.n()).done;){var _o115=_step289.value;_n183.delegate(_o115).to(e);}}catch(err){_iterator289.e(err);}finally{_iterator289.f();}}}catch(err){_iterator286.e(err);}finally{_iterator286.f();}_this91.on("add",function(n,o){var _iterator287=_createForOfIteratorHelper(t),_step287;try{for(_iterator287.s();!(_step287=_iterator287.n()).done;){var _n181=_step287.value;o.delegate(_n181).to(e);}}catch(err){_iterator287.e(err);}finally{_iterator287.f();}});_this91.on("remove",function(n,o){var _iterator288=_createForOfIteratorHelper(t),_step288;try{for(_iterator288.s();!(_step288=_iterator288.n()).done;){var _n182=_step288.value;o.stopDelegating(_n182,e);}}catch(err){_iterator288.e(err);}finally{_iterator288.f();}});}};}},{key:"_renderViewIntoCollectionParent",value:function _renderViewIntoCollectionParent(t,e){if(!t.isRendered){t.render();}if(t.element&&this._parentElement){this._parentElement.insertBefore(t.element,this._parentElement.children[e]);}}}]);return Iw;}(Ja);function Rw(t){return t.every(function(t){return typeof t=="string";});}var Ow=n(150);var zw={injectType:"singletonStyleTag",attributes:{"data-cke":true}};zw.insert="head";zw.singleton=true;var Mw=Nh()(Ow.Z,zw);var Nw=Ow.Z.locals||{};var Fw=/*#__PURE__*/function(){function Fw(t){_classCallCheck(this,Fw);this.element=null;this.isRendered=false;this.locale=t;this.t=t&&t.t;this._viewCollections=new Ja();this._unboundChildren=this.createCollection();this._viewCollections.on("add",function(e,n){n.locale=t;});this.decorate("render");}_createClass(Fw,[{key:"bindTemplate",get:function get(){if(this._bindTemplate){return this._bindTemplate;}return this._bindTemplate=Lw.bind(this,this);}},{key:"createCollection",value:function createCollection(t){var e=new Iw(t);this._viewCollections.add(e);return e;}},{key:"registerChild",value:function registerChild(t){if(!Ua(t)){t=[t];}var _iterator290=_createForOfIteratorHelper(t),_step290;try{for(_iterator290.s();!(_step290=_iterator290.n()).done;){var _e201=_step290.value;this._unboundChildren.add(_e201);}}catch(err){_iterator290.e(err);}finally{_iterator290.f();}}},{key:"deregisterChild",value:function deregisterChild(t){if(!Ua(t)){t=[t];}var _iterator291=_createForOfIteratorHelper(t),_step291;try{for(_iterator291.s();!(_step291=_iterator291.n()).done;){var _e202=_step291.value;this._unboundChildren.remove(_e202);}}catch(err){_iterator291.e(err);}finally{_iterator291.f();}}},{key:"setTemplate",value:function setTemplate(t){this.template=new Lw(t);}},{key:"extendTemplate",value:function extendTemplate(t){Lw.extend(this.template,t);}},{key:"render",value:function render(){if(this.isRendered){throw new h("ui-view-render-already-rendered",this);}if(this.template){this.element=this.template.render();this.registerChild(this.template.getViews());}this.isRendered=true;}},{key:"destroy",value:function destroy(){this.stopListening();this._viewCollections.map(function(t){return t.destroy();});if(this.template&&this.template._revertData){this.template.revert(this.element);}}}]);return Fw;}();fo(Fw,fu);fo(Fw,eo);var Vw="http://www.w3.org/1999/xhtml";var Lw=/*#__PURE__*/function(){function Lw(t){_classCallCheck(this,Lw);Object.assign(this,Yw(Zw(t)));this._isRendered=false;this._revertData=null;}_createClass(Lw,[{key:"render",value:function render(){var t=this._renderNode({intoFragment:true});this._isRendered=true;return t;}},{key:"apply",value:function apply(t){this._revertData=d_();this._renderNode({node:t,isApplying:true,revertData:this._revertData});return t;}},{key:"revert",value:function revert(t){if(!this._revertData){throw new h("ui-template-revert-not-applied",[this,t]);}this._revertTemplateFromNode(t,this._revertData);}},{key:"getViews",value:/*#__PURE__*/regeneratorRuntime.mark(function getViews(){var _marked5,t;return regeneratorRuntime.wrap(function getViews$(_context36){while(1){switch(_context36.prev=_context36.next){case 0:t=function _t214(e){var _iterator292,_step292,_n184;return regeneratorRuntime.wrap(function t$(_context35){while(1){switch(_context35.prev=_context35.next){case 0:if(!e.children){_context35.next=23;break;}_iterator292=_createForOfIteratorHelper(e.children);_context35.prev=2;_iterator292.s();case 4:if((_step292=_iterator292.n()).done){_context35.next=15;break;}_n184=_step292.value;if(!a_(_n184)){_context35.next=11;break;}_context35.next=9;return _n184;case 9:_context35.next=13;break;case 11:if(!c_(_n184)){_context35.next=13;break;}return _context35.delegateYield(t(_n184),"t0",13);case 13:_context35.next=4;break;case 15:_context35.next=20;break;case 17:_context35.prev=17;_context35.t1=_context35["catch"](2);_iterator292.e(_context35.t1);case 20:_context35.prev=20;_iterator292.f();return _context35.finish(20);case 23:case"end":return _context35.stop();}}},_marked5,null,[[2,17,20,23]]);};_marked5=/*#__PURE__*/regeneratorRuntime.mark(t);return _context36.delegateYield(t(this),"t0",3);case 3:case"end":return _context36.stop();}}},getViews,this);})},{key:"_renderNode",value:function _renderNode(t){var e;if(t.node){e=this.tag&&this.text;}else{e=this.tag?this.text:!this.text;}if(e){throw new h("ui-template-wrong-syntax",this);}if(this.text){return this._renderText(t);}else{return this._renderElement(t);}}},{key:"_renderElement",value:function _renderElement(t){var e=t.node;if(!e){e=t.node=document.createElementNS(this.ns||Vw,this.tag);}this._renderAttributes(t);this._renderElementChildren(t);this._setUpListeners(t);return e;}},{key:"_renderText",value:function _renderText(t){var e=t.node;if(e){t.revertData.text=e.textContent;}else{e=t.node=document.createTextNode("");}if(Ww(this.text)){this._bindToObservable({schema:this.text,updater:$w(e),data:t});}else{e.textContent=this.text.join("");}return e;}},{key:"_renderAttributes",value:function _renderAttributes(t){var e,n,o,i;if(!this.attributes){return;}var r=t.node;var s=t.revertData;for(e in this.attributes){o=r.getAttribute(e);n=this.attributes[e];if(s){s.attributes[e]=o;}i=M(n[0])&&n[0].ns?n[0].ns:null;if(Ww(n)){var _a14=i?n[0].value:n;if(s&&h_(e)){_a14.unshift(o);}this._bindToObservable({schema:_a14,updater:Uw(r,e,i),data:t});}else if(e=="style"&&typeof n[0]!=="string"){this._renderStyleAttribute(n[0],t);}else{if(s&&o&&h_(e)){n.unshift(o);}n=n.map(function(t){return t?t.value||t:t;}).reduce(function(t,e){return t.concat(e);},[]).reduce(o_,"");if(!s_(n)){r.setAttributeNS(i,e,n);}}}}},{key:"_renderStyleAttribute",value:function _renderStyleAttribute(t,e){var n=e.node;for(var _o116 in t){var _i104=t[_o116];if(Ww(_i104)){this._bindToObservable({schema:[_i104],updater:Jw(n,_o116),data:e});}else{n.style[_o116]=_i104;}}}},{key:"_renderElementChildren",value:function _renderElementChildren(t){var e=t.node;var n=t.intoFragment?document.createDocumentFragment():e;var o=t.isApplying;var i=0;var _iterator293=_createForOfIteratorHelper(this.children),_step293;try{for(_iterator293.s();!(_step293=_iterator293.n()).done;){var _r46=_step293.value;if(l_(_r46)){if(!o){_r46.setParent(e);var _iterator294=_createForOfIteratorHelper(_r46),_step294;try{for(_iterator294.s();!(_step294=_iterator294.n()).done;){var _t215=_step294.value;n.appendChild(_t215.element);}}catch(err){_iterator294.e(err);}finally{_iterator294.f();}}}else if(a_(_r46)){if(!o){if(!_r46.isRendered){_r46.render();}n.appendChild(_r46.element);}}else if(zh(_r46)){n.appendChild(_r46);}else{if(o){var _e203=t.revertData;var _o117=d_();_e203.children.push(_o117);_r46._renderNode({node:n.childNodes[i++],isApplying:true,revertData:_o117});}else{n.appendChild(_r46.render());}}}}catch(err){_iterator293.e(err);}finally{_iterator293.f();}if(t.intoFragment){e.appendChild(n);}}},{key:"_setUpListeners",value:function _setUpListeners(t){var _this92=this;if(!this.eventListeners){return;}var _loop4=function _loop4(_e204){var n=_this92.eventListeners[_e204].map(function(n){var _e204$split=_e204.split("@"),_e204$split2=_slicedToArray(_e204$split,2),o=_e204$split2[0],i=_e204$split2[1];return n.activateDomEventListener(o,i,t);});if(t.revertData){t.revertData.bindings.push(n);}};for(var _e204 in this.eventListeners){_loop4(_e204);}}},{key:"_bindToObservable",value:function _bindToObservable(_ref33){var t=_ref33.schema,e=_ref33.updater,n=_ref33.data;var o=n.revertData;Gw(t,e,n);var i=t.filter(function(t){return!s_(t);}).filter(function(t){return t.observable;}).map(function(o){return o.activateAttributeListener(t,e,n);});if(o){o.bindings.push(i);}}},{key:"_revertTemplateFromNode",value:function _revertTemplateFromNode(t,e){var _iterator295=_createForOfIteratorHelper(e.bindings),_step295;try{for(_iterator295.s();!(_step295=_iterator295.n()).done;){var _t216=_step295.value;var _iterator296=_createForOfIteratorHelper(_t216),_step296;try{for(_iterator296.s();!(_step296=_iterator296.n()).done;){var _e205=_step296.value;_e205();}}catch(err){_iterator296.e(err);}finally{_iterator296.f();}}}catch(err){_iterator295.e(err);}finally{_iterator295.f();}if(e.text){t.textContent=e.text;return;}for(var _n185 in e.attributes){var _o118=e.attributes[_n185];if(_o118===null){t.removeAttribute(_n185);}else{t.setAttribute(_n185,_o118);}}for(var _n186=0;_n186<e.children.length;++_n186){this._revertTemplateFromNode(t.childNodes[_n186],e.children[_n186]);}}}],[{key:"bind",value:function bind(t,e){return{to:function to(n,o){return new jw({eventNameOrFunction:n,attribute:n,observable:t,emitter:e,callback:o});},if:function _if(n,o,i){return new qw({observable:t,emitter:e,attribute:n,valueIfTrue:o,callback:i});}};}},{key:"extend",value:function extend(t,e){if(t._isRendered){throw new h("template-extend-render",[this,t]);}r_(t,Yw(Zw(e)));}}]);return Lw;}();fo(Lw,C);var Hw=/*#__PURE__*/function(){function Hw(t){_classCallCheck(this,Hw);Object.assign(this,t);}_createClass(Hw,[{key:"getValue",value:function getValue(t){var e=this.observable[this.attribute];return this.callback?this.callback(e,t):e;}},{key:"activateAttributeListener",value:function activateAttributeListener(t,e,n){var _this93=this;var o=function o(){return Gw(t,e,n);};this.emitter.listenTo(this.observable,"change:"+this.attribute,o);return function(){_this93.emitter.stopListening(_this93.observable,"change:"+_this93.attribute,o);};}}]);return Hw;}();var jw=/*#__PURE__*/function(_Hw){_inherits(jw,_Hw);var _super44=_createSuper(jw);function jw(){_classCallCheck(this,jw);return _super44.apply(this,arguments);}_createClass(jw,[{key:"activateDomEventListener",value:function activateDomEventListener(t,e,n){var _this94=this;var o=function o(t,n){if(!e||n.target.matches(e)){if(typeof _this94.eventNameOrFunction=="function"){_this94.eventNameOrFunction(n);}else{_this94.observable.fire(_this94.eventNameOrFunction,n);}}};this.emitter.listenTo(n.node,t,o);return function(){_this94.emitter.stopListening(n.node,t,o);};}}]);return jw;}(Hw);var qw=/*#__PURE__*/function(_Hw2){_inherits(qw,_Hw2);var _super45=_createSuper(qw);function qw(){_classCallCheck(this,qw);return _super45.apply(this,arguments);}_createClass(qw,[{key:"getValue",value:function getValue(t){var e=_get(_getPrototypeOf(qw.prototype),"getValue",this).call(this,t);return s_(e)?false:this.valueIfTrue||true;}}]);return qw;}(Hw);function Ww(t){if(!t){return false;}if(t.value){t=t.value;}if(Array.isArray(t)){return t.some(Ww);}else if(t instanceof Hw){return true;}return false;}function Kw(t,e){return t.map(function(t){if(t instanceof Hw){return t.getValue(e);}return t;});}function Gw(t,e,_ref34){var n=_ref34.node;var o=Kw(t,n);if(t.length==1&&t[0]instanceof qw){o=o[0];}else{o=o.reduce(o_,"");}if(s_(o)){e.remove();}else{e.set(o);}}function $w(t){return{set:function set(e){t.textContent=e;},remove:function remove(){t.textContent="";}};}function Uw(t,e,n){return{set:function set(o){t.setAttributeNS(n,e,o);},remove:function remove(){t.removeAttributeNS(n,e);}};}function Jw(t,e){return{set:function set(n){t.style[e]=n;},remove:function remove(){t.style[e]=null;}};}function Zw(t){var e=ja(t,function(t){if(t&&(t instanceof Hw||c_(t)||a_(t)||l_(t))){return t;}});return e;}function Yw(t){if(typeof t=="string"){t=t_(t);}else if(t.text){e_(t);}if(t.on){t.eventListeners=Xw(t.on);delete t.on;}if(!t.text){if(t.attributes){Qw(t.attributes);}var _e206=[];if(t.children){if(l_(t.children)){_e206.push(t.children);}else{var _iterator297=_createForOfIteratorHelper(t.children),_step297;try{for(_iterator297.s();!(_step297=_iterator297.n()).done;){var _n187=_step297.value;if(c_(_n187)||a_(_n187)||zh(_n187)){_e206.push(_n187);}else{_e206.push(new Lw(_n187));}}}catch(err){_iterator297.e(err);}finally{_iterator297.f();}}}t.children=_e206;}return t;}function Qw(t){for(var _e207 in t){if(t[_e207].value){t[_e207].value=Ya(t[_e207].value);}n_(t,_e207);}}function Xw(t){for(var _e208 in t){n_(t,_e208);}return t;}function t_(t){return{text:[t]};}function e_(t){t.text=Ya(t.text);}function n_(t,e){t[e]=Ya(t[e]);}function o_(t,e){if(s_(e)){return t;}else if(s_(t)){return e;}else{return"".concat(t," ").concat(e);}}function i_(t,e){for(var _n188 in e){if(t[_n188]){var _t$_n;(_t$_n=t[_n188]).push.apply(_t$_n,_toConsumableArray(e[_n188]));}else{t[_n188]=e[_n188];}}}function r_(t,e){if(e.attributes){if(!t.attributes){t.attributes={};}i_(t.attributes,e.attributes);}if(e.eventListeners){if(!t.eventListeners){t.eventListeners={};}i_(t.eventListeners,e.eventListeners);}if(e.text){var _t$text;(_t$text=t.text).push.apply(_t$text,_toConsumableArray(e.text));}if(e.children&&e.children.length){if(t.children.length!=e.children.length){throw new h("ui-template-extend-children-mismatch",t);}var _n189=0;var _iterator298=_createForOfIteratorHelper(e.children),_step298;try{for(_iterator298.s();!(_step298=_iterator298.n()).done;){var _o119=_step298.value;r_(t.children[_n189++],_o119);}}catch(err){_iterator298.e(err);}finally{_iterator298.f();}}}function s_(t){return!t&&t!==0;}function a_(t){return t instanceof Fw;}function c_(t){return t instanceof Lw;}function l_(t){return t instanceof Iw;}function d_(){return{children:[],bindings:[],attributes:{}};}function h_(t){return t=="class"||t=="style";}var u_="[object String]";function f_(t){return typeof t=="string"||!Ne(t)&&De(t)&&it(t)==u_;}var g_=f_;function p_(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var i=n&&n.xmlns;var r=i?t.createElementNS(i,e):t.createElement(e);for(var _t217 in n){r.setAttribute(_t217,n[_t217]);}if(g_(o)||!Ua(o)){o=[o];}var _iterator299=_createForOfIteratorHelper(o),_step299;try{for(_iterator299.s();!(_step299=_iterator299.n()).done;){var _e209=_step299.value;if(g_(_e209)){_e209=t.createTextNode(_e209);}r.appendChild(_e209);}}catch(err){_iterator299.e(err);}finally{_iterator299.f();}return r;}var m_=/*#__PURE__*/function(_Iw){_inherits(m_,_Iw);var _super46=_createSuper(m_);function m_(t){var _this95;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,m_);_this95=_super46.call(this,e);_this95.locale=t;return _this95;}_createClass(m_,[{key:"attachToDom",value:function attachToDom(){this._bodyCollectionContainer=new Lw({tag:"div",attributes:{class:["ck","ck-reset_all","ck-body","ck-rounded-corners"],dir:this.locale.uiLanguageDirection},children:this}).render();var t=document.querySelector(".ck-body-wrapper");if(!t){t=p_(document,"div",{class:"ck-body-wrapper"});document.body.appendChild(t);}t.appendChild(this._bodyCollectionContainer);}},{key:"detachFromDom",value:function detachFromDom(){_get(_getPrototypeOf(m_.prototype),"destroy",this).call(this);if(this._bodyCollectionContainer){this._bodyCollectionContainer.remove();}var t=document.querySelector(".ck-body-wrapper");if(t&&t.childElementCount==0){t.remove();}}}]);return m_;}(Iw);var k_=n(174);var b_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};b_.insert="head";b_.singleton=true;var w_=Nh()(k_.Z,b_);var __=k_.Z.locals||{};var v_=/*#__PURE__*/function(_Fw){_inherits(v_,_Fw);var _super47=_createSuper(v_);function v_(){var _this96;_classCallCheck(this,v_);_this96=_super47.call(this);var t=_this96.bindTemplate;_this96.set("content","");_this96.set("viewBox","0 0 20 20");_this96.set("fillColor","");_this96.setTemplate({tag:"svg",ns:"http://www.w3.org/2000/svg",attributes:{class:["ck","ck-icon"],viewBox:t.to("viewBox")}});return _this96;}_createClass(v_,[{key:"render",value:function render(){var _this97=this;_get(_getPrototypeOf(v_.prototype),"render",this).call(this);this._updateXMLContent();this._colorFillPaths();this.on("change:content",function(){_this97._updateXMLContent();_this97._colorFillPaths();});this.on("change:fillColor",function(){_this97._colorFillPaths();});}},{key:"_updateXMLContent",value:function _updateXMLContent(){if(this.content){var _t218=new DOMParser().parseFromString(this.content.trim(),"image/svg+xml");var _e210=_t218.querySelector("svg");var _n190=_e210.getAttribute("viewBox");if(_n190){this.viewBox=_n190;}this.element.innerHTML="";while(_e210.childNodes.length>0){this.element.appendChild(_e210.childNodes[0]);}}}},{key:"_colorFillPaths",value:function _colorFillPaths(){var _this98=this;if(this.fillColor){this.element.querySelectorAll(".ck-icon__fill").forEach(function(t){t.style.fill=_this98.fillColor;});}}}]);return v_;}(Fw);var A_=n(948);var C_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};C_.insert="head";C_.singleton=true;var y_=Nh()(A_.Z,C_);var x_=A_.Z.locals||{};var E_=/*#__PURE__*/function(_Fw2){_inherits(E_,_Fw2);var _super48=_createSuper(E_);function E_(t){var _this99;_classCallCheck(this,E_);_this99=_super48.call(this,t);_this99.set("text","");_this99.set("position","s");var e=_this99.bindTemplate;_this99.setTemplate({tag:"span",attributes:{class:["ck","ck-tooltip",e.to("position",function(t){return"ck-tooltip_"+t;}),e.if("text","ck-hidden",function(t){return!t.trim();})]},children:[{tag:"span",attributes:{class:["ck","ck-tooltip__text"]},children:[{text:e.to("text")}]}]});return _this99;}return _createClass(E_);}(Fw);var D_=n(499);var S_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};S_.insert="head";S_.singleton=true;var P_=Nh()(D_.Z,S_);var T_=D_.Z.locals||{};var B_=/*#__PURE__*/function(_Fw3){_inherits(B_,_Fw3);var _super49=_createSuper(B_);function B_(t){var _this100;_classCallCheck(this,B_);_this100=_super49.call(this,t);var e=_this100.bindTemplate;var n=s();_this100.set("class");_this100.set("labelStyle");_this100.set("icon");_this100.set("isEnabled",true);_this100.set("isOn",false);_this100.set("isVisible",true);_this100.set("isToggleable",false);_this100.set("keystroke");_this100.set("label");_this100.set("tabindex",-1);_this100.set("tooltip");_this100.set("tooltipPosition","s");_this100.set("type","button");_this100.set("withText",false);_this100.set("withKeystroke",false);_this100.children=_this100.createCollection();_this100.tooltipView=_this100._createTooltipView();_this100.labelView=_this100._createLabelView(n);_this100.iconView=new v_();_this100.iconView.extendTemplate({attributes:{class:"ck-button__icon"}});_this100.keystrokeView=_this100._createKeystrokeView();_this100.bind("_tooltipString").to(_assertThisInitialized(_this100),"tooltip",_assertThisInitialized(_this100),"label",_assertThisInitialized(_this100),"keystroke",_this100._getTooltipString.bind(_assertThisInitialized(_this100)));_this100.setTemplate({tag:"button",attributes:{class:["ck","ck-button",e.to("class"),e.if("isEnabled","ck-disabled",function(t){return!t;}),e.if("isVisible","ck-hidden",function(t){return!t;}),e.to("isOn",function(t){return t?"ck-on":"ck-off";}),e.if("withText","ck-button_with-text"),e.if("withKeystroke","ck-button_with-keystroke")],type:e.to("type",function(t){return t?t:"button";}),tabindex:e.to("tabindex"),"aria-labelledby":"ck-editor__aria-label_".concat(n),"aria-disabled":e.if("isEnabled",true,function(t){return!t;}),"aria-pressed":e.to("isOn",function(t){return _this100.isToggleable?String(t):false;})},children:_this100.children,on:{mousedown:e.to(function(t){t.preventDefault();}),click:e.to(function(t){if(_this100.isEnabled){_this100.fire("execute");}else{t.preventDefault();}})}});return _this100;}_createClass(B_,[{key:"render",value:function render(){_get(_getPrototypeOf(B_.prototype),"render",this).call(this);if(this.icon){this.iconView.bind("content").to(this,"icon");this.children.add(this.iconView);}this.children.add(this.tooltipView);this.children.add(this.labelView);if(this.withKeystroke&&this.keystroke){this.children.add(this.keystrokeView);}}},{key:"focus",value:function focus(){this.element.focus();}},{key:"_createTooltipView",value:function _createTooltipView(){var t=new E_();t.bind("text").to(this,"_tooltipString");t.bind("position").to(this,"tooltipPosition");return t;}},{key:"_createLabelView",value:function _createLabelView(t){var e=new Fw();var n=this.bindTemplate;e.setTemplate({tag:"span",attributes:{class:["ck","ck-button__label"],style:n.to("labelStyle"),id:"ck-editor__aria-label_".concat(t)},children:[{text:this.bindTemplate.to("label")}]});return e;}},{key:"_createKeystrokeView",value:function _createKeystrokeView(){var t=new Fw();t.setTemplate({tag:"span",attributes:{class:["ck","ck-button__keystroke"]},children:[{text:this.bindTemplate.to("keystroke",function(t){return Hd(t);})}]});return t;}},{key:"_getTooltipString",value:function _getTooltipString(t,e,n){if(t){if(typeof t=="string"){return t;}else{if(n){n=Hd(n);}if(t instanceof Function){return t(e,n);}else{return"".concat(e).concat(n?" (".concat(n,")"):"");}}}return"";}}]);return B_;}(Fw);var I_=n(681);var R_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};R_.insert="head";R_.singleton=true;var O_=Nh()(I_.Z,R_);var z_=I_.Z.locals||{};var M_=/*#__PURE__*/function(_B_){_inherits(M_,_B_);var _super50=_createSuper(M_);function M_(t){var _this101;_classCallCheck(this,M_);_this101=_super50.call(this,t);_this101.isToggleable=true;_this101.toggleSwitchView=_this101._createToggleView();_this101.extendTemplate({attributes:{class:"ck-switchbutton"}});return _this101;}_createClass(M_,[{key:"render",value:function render(){_get(_getPrototypeOf(M_.prototype),"render",this).call(this);this.children.add(this.toggleSwitchView);}},{key:"_createToggleView",value:function _createToggleView(){var t=new Fw();t.setTemplate({tag:"span",attributes:{class:["ck","ck-button__toggle"]},children:[{tag:"span",attributes:{class:["ck","ck-button__toggle__inner"]}}]});return t;}}]);return M_;}(B_);function N_(t,e){var n=t.t;var o={Black:n("Black"),"Dim grey":n("Dim grey"),Grey:n("Grey"),"Light grey":n("Light grey"),White:n("White"),Red:n("Red"),Orange:n("Orange"),Yellow:n("Yellow"),"Light green":n("Light green"),Green:n("Green"),Aquamarine:n("Aquamarine"),Turquoise:n("Turquoise"),"Light blue":n("Light blue"),Blue:n("Blue"),Purple:n("Purple")};return e.map(function(t){var e=o[t.label];if(e&&e!=t.label){t.label=e;}return t;});}function F_(t){return t.map(V_).filter(function(t){return!!t;});}function V_(t){if(typeof t==="string"){return{model:t,label:t,hasBorder:false,view:{name:"span",styles:{color:t}}};}else{return{model:t.color,label:t.label||t.color,hasBorder:t.hasBorder===undefined?false:t.hasBorder,view:{name:"span",styles:{color:"".concat(t.color)}}};}}var L_='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path class="ck-icon__fill" d="M16.935 5.328a2 2 0 0 1 0 2.829l-7.778 7.778a2 2 0 0 1-2.829 0L3.5 13.107a1.999 1.999 0 1 1 2.828-2.829l.707.707a1 1 0 0 0 1.414 0l5.658-5.657a2 2 0 0 1 2.828 0z"/><path d="M14.814 6.035 8.448 12.4a1 1 0 0 1-1.414 0l-1.413-1.415A1 1 0 1 0 4.207 12.4l2.829 2.829a1 1 0 0 0 1.414 0l7.778-7.778a1 1 0 1 0-1.414-1.415z"/></svg>';var H_=/*#__PURE__*/function(_B_2){_inherits(H_,_B_2);var _super51=_createSuper(H_);function H_(t){var _this102;_classCallCheck(this,H_);_this102=_super51.call(this,t);var e=_this102.bindTemplate;_this102.set("color");_this102.set("hasBorder");_this102.icon=L_;_this102.extendTemplate({attributes:{style:{backgroundColor:e.to("color")},class:["ck","ck-color-grid__tile",e.if("hasBorder","ck-color-table__color-tile_bordered")]}});return _this102;}_createClass(H_,[{key:"render",value:function render(){_get(_getPrototypeOf(H_.prototype),"render",this).call(this);this.iconView.fillColor="hsl(0, 0%, 100%)";}}]);return H_;}(B_);function j_(t){return!!(t&&t.getClientRects&&t.getClientRects().length);}var q_=/*#__PURE__*/function(){function q_(t){var _this103=this;_classCallCheck(this,q_);Object.assign(this,t);if(t.actions&&t.keystrokeHandler){var _loop5=function _loop5(_e211){var n=t.actions[_e211];if(typeof n=="string"){n=[n];}var _iterator300=_createForOfIteratorHelper(n),_step300;try{for(_iterator300.s();!(_step300=_iterator300.n()).done;){var _o120=_step300.value;t.keystrokeHandler.set(_o120,function(t,n){_this103[_e211]();n();});}}catch(err){_iterator300.e(err);}finally{_iterator300.f();}};for(var _e211 in t.actions){_loop5(_e211);}}}_createClass(q_,[{key:"first",get:function get(){return this.focusables.find(W_)||null;}},{key:"last",get:function get(){return this.focusables.filter(W_).slice(-1)[0]||null;}},{key:"next",get:function get(){return this._getFocusableItem(1);}},{key:"previous",get:function get(){return this._getFocusableItem(-1);}},{key:"current",get:function get(){var _this104=this;var t=null;if(this.focusTracker.focusedElement===null){return null;}this.focusables.find(function(e,n){var o=e.element===_this104.focusTracker.focusedElement;if(o){t=n;}return o;});return t;}},{key:"focusFirst",value:function focusFirst(){this._focus(this.first);}},{key:"focusLast",value:function focusLast(){this._focus(this.last);}},{key:"focusNext",value:function focusNext(){this._focus(this.next);}},{key:"focusPrevious",value:function focusPrevious(){this._focus(this.previous);}},{key:"_focus",value:function _focus(t){if(t){t.focus();}}},{key:"_getFocusableItem",value:function _getFocusableItem(t){var e=this.current;var n=this.focusables.length;if(!n){return null;}if(e===null){return this[t===1?"first":"last"];}var o=(e+n+t)%n;do{var _e212=this.focusables.get(o);if(W_(_e212)){return _e212;}o=(o+n+t)%n;}while(o!==e);return null;}}]);return q_;}();function W_(t){return!!(t.focus&&j_(t.element));}var K_=n(923);var G_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};G_.insert="head";G_.singleton=true;var $_=Nh()(K_.Z,G_);var U_=K_.Z.locals||{};var J_=/*#__PURE__*/function(_Fw4){_inherits(J_,_Fw4);var _super52=_createSuper(J_);function J_(t,e){var _this105;_classCallCheck(this,J_);_this105=_super52.call(this,t);var n=e&&e.colorDefinitions||[];var o={};if(e&&e.columns){o.gridTemplateColumns="repeat( ".concat(e.columns,", 1fr)");}_this105.set("selectedColor");_this105.items=_this105.createCollection();_this105.focusTracker=new kg();_this105.keystrokes=new bg();_this105._focusCycler=new q_({focusables:_this105.items,focusTracker:_this105.focusTracker,keystrokeHandler:_this105.keystrokes,actions:{focusPrevious:"arrowleft",focusNext:"arrowright"}});_this105.items.on("add",function(t,e){e.isOn=e.color===_this105.selectedColor;});n.forEach(function(t){var e=new H_();e.set({color:t.color,label:t.label,tooltip:true,hasBorder:t.options.hasBorder});e.on("execute",function(){_this105.fire("execute",{value:t.color,hasBorder:t.options.hasBorder,label:t.label});});_this105.items.add(e);});_this105.setTemplate({tag:"div",children:_this105.items,attributes:{class:["ck","ck-color-grid"],style:o}});_this105.on("change:selectedColor",function(t,e,n){var _iterator301=_createForOfIteratorHelper(_this105.items),_step301;try{for(_iterator301.s();!(_step301=_iterator301.n()).done;){var _t219=_step301.value;_t219.isOn=_t219.color===n;}}catch(err){_iterator301.e(err);}finally{_iterator301.f();}});return _this105;}_createClass(J_,[{key:"focus",value:function focus(){if(this.items.length){this.items.first.focus();}}},{key:"focusLast",value:function focusLast(){if(this.items.length){this.items.last.focus();}}},{key:"render",value:function render(){var _this106=this;_get(_getPrototypeOf(J_.prototype),"render",this).call(this);var _iterator302=_createForOfIteratorHelper(this.items),_step302;try{for(_iterator302.s();!(_step302=_iterator302.n()).done;){var _t220=_step302.value;this.focusTracker.add(_t220.element);}}catch(err){_iterator302.e(err);}finally{_iterator302.f();}this.items.on("add",function(t,e){_this106.focusTracker.add(e.element);});this.items.on("remove",function(t,e){_this106.focusTracker.remove(e.element);});this.keystrokes.listenTo(this.element);}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(J_.prototype),"destroy",this).call(this);this.focusTracker.destroy();this.keystrokes.destroy();}}]);return J_;}(Fw);var Z_='<svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"><path d="M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z"/></svg>';var Y_=/*#__PURE__*/function(_B_3){_inherits(Y_,_B_3);var _super53=_createSuper(Y_);function Y_(t){var _this107;_classCallCheck(this,Y_);_this107=_super53.call(this,t);_this107.arrowView=_this107._createArrowView();_this107.extendTemplate({attributes:{"aria-haspopup":true}});_this107.delegate("execute").to(_assertThisInitialized(_this107),"open");return _this107;}_createClass(Y_,[{key:"render",value:function render(){_get(_getPrototypeOf(Y_.prototype),"render",this).call(this);this.children.add(this.arrowView);}},{key:"_createArrowView",value:function _createArrowView(){var t=new v_();t.content=Z_;t.extendTemplate({attributes:{class:"ck-dropdown__arrow"}});return t;}}]);return Y_;}(B_);var Q_=n(66);var X_={injectType:"singletonStyleTag",attributes:{"data-cke":true}};X_.insert="head";X_.singleton=true;var tv=Nh()(Q_.Z,X_);var ev=Q_.Z.locals||{};var nv=/*#__PURE__*/function(_ref35){_inherits(nv,_ref35);var _super54=_createSuper(nv);function nv(t){var _this108;_classCallCheck(this,nv);_this108=_super54.call(this,t);var e=_this108.bindTemplate;_this108.set("class");_this108.set("icon");_this108.set("isEnabled",true);_this108.set("isOn",false);_this108.set("isToggleable",false);_this108.set("isVisible",true);_this108.set("keystroke");_this108.set("label");_this108.set("tabindex",-1);_this108.set("tooltip");_this108.set("tooltipPosition","s");_this108.set("type","button");_this108.set("withText",false);_this108.children=_this108.createCollection();_this108.actionView=_this108._createActionView();_this108.arrowView=_this108._createArrowView();_this108.keystrokes=new KeystrokeHandler();_this108.focusTracker=new FocusTracker();_this108.setTemplate({tag:"div",attributes:{class:["ck","ck-splitbutton",e.to("class"),e.if("isVisible","ck-hidden",function(t){return!t;}),_this108.arrowView.bindTemplate.if("isOn","ck-splitbutton_open")]},children:_this108.children});return _this108;}_createClass(nv,[{key:"render",value:function render(){var _this109=this;_get(_getPrototypeOf(nv.prototype),"render",this).call(this);this.children.add(this.actionView);this.children.add(this.arrowView);this.focusTracker.add(this.actionView.element);this.focusTracker.add(this.arrowView.element);this.keystrokes.listenTo(this.element);this.keystrokes.set("arrowright",function(t,e){if(_this109.focusTracker.focusedElement===_this109.actionView.element){_this109.arrowView.focus();e();}});this.keystrokes.set("arrowleft",function(t,e){if(_this109.focusTracker.focusedElement===_this109.arrowView.element){_this109.actionView.focus();e();}});}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(nv.prototype),"destroy",this).call(this);this.focusTracker.destroy();this.keystrokes.destroy();}},{key:"focus",value:function focus(){this.actionView.focus();}},{key:"_createActionView",value:function _createActionView(){var t=new ButtonView();t.bind("icon","isEnabled","isOn","isToggleable","keystroke","label","tabindex","tooltip","tooltipPosition","type","withText").to(this);t.extendTemplate({attributes:{class:"ck-splitbutton__action"}});t.delegate("execute").to(this);return t;}},{key:"_createArrowView",value:function _createArrowView(){var t=new ButtonView();var e=t.bindTemplate;t.icon=dropdownArrowIcon;t.extendTemplate({attributes:{class:"ck-splitbutton__arrow","aria-haspopup":true,"aria-expanded":e.to("isOn",function(t){return String(t);})}});t.bind("isEnabled").to(this);t.delegate("execute").to(this,"open");return t;}}]);return nv;}(null&&View);var ov=/*#__PURE__*/function(_Fw5){_inherits(ov,_Fw5);var _super55=_createSuper(ov);function ov(t){var _this110;_classCallCheck(this,ov);_this110=_super55.call(this,t);var e=_this110.bindTemplate;_this110.set("isVisible",false);_this110.set("position","se");_this110.children=_this110.createCollection();_this110.setTemplate({tag:"div",attributes:{class:["ck","ck-reset","ck-dropdown__panel",e.to("position",function(t){return"ck-dropdown__panel_".concat(t);}),e.if("isVisible","ck-dropdown__panel-visible")]},children:_this110.children,on:{selectstart:e.to(function(t){return t.preventDefault();})}});return _this110;}_createClass(ov,[{key:"focus",value:function focus(){if(this.children.length){this.children.first.focus();}}},{key:"focusLast",value:function focusLast(){if(this.children.length){var _t221=this.children.last;if(typeof _t221.focusLast==="function"){_t221.focusLast();}else{_t221.focus();}}}}]);return ov;}(Fw);var iv=n(488);var rv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};rv.insert="head";rv.singleton=true;var sv=Nh()(iv.Z,rv);var av=iv.Z.locals||{};function cv(t){if(!t||!t.parentNode){return null;}if(t.offsetParent===Zh.document.body){return null;}return t.offsetParent;}function lv(_ref36){var t=_ref36.element,e=_ref36.target,n=_ref36.positions,o=_ref36.limiter,i=_ref36.fitInViewport,r=_ref36.viewportOffsetConfig;if(dt(e)){e=e();}if(dt(o)){o=o();}var s=cv(t);var a=new Yf(t);var c=new Yf(e);var l;var d={targetRect:c,elementRect:a,positionedElementAncestor:s};if(!o&&!i){l=new gv(n[0],d);}else{var _t222=o&&new Yf(o).getVisible();var _e213=i&&dv(r);Object.assign(d,{limiterRect:_t222,viewportRect:_e213});l=hv(n,d)||new gv(n[0],d);}return l;}function dv(t){t=Object.assign({top:0,bottom:0,left:0,right:0},t);var e=new Yf(Zh.window);e.top+=t.top;e.height-=t.top;e.bottom-=t.bottom;e.height-=t.bottom;return e;}function hv(t,e){var n=e.elementRect;var o=n.getArea();var i=t.map(function(t){return new gv(t,e);}).filter(function(t){return!!t.name;});var r=0;var s=null;var _iterator303=_createForOfIteratorHelper(i),_step303;try{for(_iterator303.s();!(_step303=_iterator303.n()).done;){var _t223=_step303.value;var _e214=_t223._limiterIntersectionArea,_n191=_t223._viewportIntersectionArea;if(_e214===o){return _t223;}var _i105=Math.pow(_n191,2)+Math.pow(_e214,2);if(_i105>r){r=_i105;s=_t223;}}}catch(err){_iterator303.e(err);}finally{_iterator303.f();}return s;}function uv(t,e){var n=fv(new Yf(e));var o=Jf(e);var i=0;var r=0;i-=n.left;r-=n.top;i+=e.scrollLeft;r+=e.scrollTop;i-=o.left;r-=o.top;t.moveBy(i,r);}function fv(t){var _Zh$window2=Zh.window,e=_Zh$window2.scrollX,n=_Zh$window2.scrollY;return t.clone().moveBy(e,n);}var gv=/*#__PURE__*/function(){function gv(t,e){_classCallCheck(this,gv);var n=t(e.targetRect,e.elementRect,e.viewportRect);if(!n){return;}var o=n.left,i=n.top,r=n.name,s=n.config;Object.assign(this,{name:r,config:s});this._positioningFunctionCorrdinates={left:o,top:i};this._options=e;}_createClass(gv,[{key:"left",get:function get(){return this._absoluteRect.left;}},{key:"top",get:function get(){return this._absoluteRect.top;}},{key:"_limiterIntersectionArea",get:function get(){var t=this._options.limiterRect;if(t){var _e215=this._options.viewportRect;if(_e215){var _n192=t.getIntersection(_e215);if(_n192){return _n192.getIntersectionArea(this._rect);}}else{return t.getIntersectionArea(this._rect);}}return 0;}},{key:"_viewportIntersectionArea",get:function get(){var t=this._options.viewportRect;if(t){return t.getIntersectionArea(this._rect);}return 0;}},{key:"_rect",get:function get(){if(this._cachedRect){return this._cachedRect;}this._cachedRect=this._options.elementRect.clone().moveTo(this._positioningFunctionCorrdinates.left,this._positioningFunctionCorrdinates.top);return this._cachedRect;}},{key:"_absoluteRect",get:function get(){if(this._cachedAbsoluteRect){return this._cachedAbsoluteRect;}this._cachedAbsoluteRect=fv(this._rect);if(this._options.positionedElementAncestor){uv(this._cachedAbsoluteRect,this._options.positionedElementAncestor);}return this._cachedAbsoluteRect;}}]);return gv;}();var pv=/*#__PURE__*/function(_Fw6){_inherits(pv,_Fw6);var _super56=_createSuper(pv);function pv(t,e,n){var _this111;_classCallCheck(this,pv);_this111=_super56.call(this,t);var o=_this111.bindTemplate;_this111.buttonView=e;_this111.panelView=n;_this111.set("isOpen",false);_this111.set("isEnabled",true);_this111.set("class");_this111.set("id");_this111.set("panelPosition","auto");_this111.keystrokes=new bg();_this111.setTemplate({tag:"div",attributes:{class:["ck","ck-dropdown",o.to("class"),o.if("isEnabled","ck-disabled",function(t){return!t;})],id:o.to("id"),"aria-describedby":o.to("ariaDescribedById")},children:[e,n]});e.extendTemplate({attributes:{class:["ck-dropdown__button"]}});return _this111;}_createClass(pv,[{key:"render",value:function render(){var _this112=this;_get(_getPrototypeOf(pv.prototype),"render",this).call(this);this.listenTo(this.buttonView,"open",function(){_this112.isOpen=!_this112.isOpen;});this.panelView.bind("isVisible").to(this,"isOpen");this.on("change:isOpen",function(){if(!_this112.isOpen){return;}if(_this112.panelPosition==="auto"){_this112.panelView.position=pv._getOptimalPosition({element:_this112.panelView.element,target:_this112.buttonView.element,fitInViewport:true,positions:_this112._panelPositions}).name;}else{_this112.panelView.position=_this112.panelPosition;}});this.keystrokes.listenTo(this.element);var t=function t(_t224,e){if(_this112.isOpen){_this112.buttonView.focus();_this112.isOpen=false;e();}};this.keystrokes.set("arrowdown",function(t,e){if(_this112.buttonView.isEnabled&&!_this112.isOpen){_this112.isOpen=true;e();}});this.keystrokes.set("arrowright",function(t,e){if(_this112.isOpen){e();}});this.keystrokes.set("arrowleft",t);this.keystrokes.set("esc",t);}},{key:"focus",value:function focus(){this.buttonView.focus();}},{key:"_panelPositions",get:function get(){var _pv$defaultPanelPosit=pv.defaultPanelPositions,t=_pv$defaultPanelPosit.south,e=_pv$defaultPanelPosit.north,n=_pv$defaultPanelPosit.southEast,o=_pv$defaultPanelPosit.southWest,i=_pv$defaultPanelPosit.northEast,r=_pv$defaultPanelPosit.northWest,s=_pv$defaultPanelPosit.southMiddleEast,a=_pv$defaultPanelPosit.southMiddleWest,c=_pv$defaultPanelPosit.northMiddleEast,l=_pv$defaultPanelPosit.northMiddleWest;if(this.locale.uiLanguageDirection!=="rtl"){return[n,o,s,a,t,i,r,c,l,e];}else{return[o,n,a,s,t,r,i,l,c,e];}}}]);return pv;}(Fw);pv.defaultPanelPositions={south:function south(t,e){return{top:t.bottom,left:t.left-(e.width-t.width)/2,name:"s"};},southEast:function southEast(t){return{top:t.bottom,left:t.left,name:"se"};},southWest:function southWest(t,e){return{top:t.bottom,left:t.left-e.width+t.width,name:"sw"};},southMiddleEast:function southMiddleEast(t,e){return{top:t.bottom,left:t.left-(e.width-t.width)/4,name:"sme"};},southMiddleWest:function southMiddleWest(t,e){return{top:t.bottom,left:t.left-(e.width-t.width)*3/4,name:"smw"};},north:function north(t,e){return{top:t.top-e.height,left:t.left-(e.width-t.width)/2,name:"n"};},northEast:function northEast(t,e){return{top:t.top-e.height,left:t.left,name:"ne"};},northWest:function northWest(t,e){return{top:t.top-e.height,left:t.left-e.width+t.width,name:"nw"};},northMiddleEast:function northMiddleEast(t,e){return{top:t.top-e.height,left:t.left-(e.width-t.width)/4,name:"nme"};},northMiddleWest:function northMiddleWest(t,e){return{top:t.top-e.height,left:t.left-(e.width-t.width)*3/4,name:"nmw"};}};pv._getOptimalPosition=lv;var mv=/*#__PURE__*/function(_Fw7){_inherits(mv,_Fw7);var _super57=_createSuper(mv);function mv(t){var _this113;_classCallCheck(this,mv);_this113=_super57.call(this,t);_this113.setTemplate({tag:"span",attributes:{class:["ck","ck-toolbar__separator"]}});return _this113;}return _createClass(mv);}(Fw);var kv=/*#__PURE__*/function(_Fw8){_inherits(kv,_Fw8);var _super58=_createSuper(kv);function kv(t){var _this114;_classCallCheck(this,kv);_this114=_super58.call(this,t);_this114.setTemplate({tag:"span",attributes:{class:["ck","ck-toolbar__line-break"]}});return _this114;}return _createClass(kv);}(Fw);function bv(t){return t.bindTemplate.to(function(e){if(e.target===t.element){e.preventDefault();}});}function wv(t){if(Array.isArray(t)){return{items:t,removeItems:[]};}if(!t){return{items:[],removeItems:[]};}return Object.assign({items:[],removeItems:[]},t);}var _v=n(571);var vv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};vv.insert="head";vv.singleton=true;var Av=Nh()(_v.Z,vv);var Cv=_v.Z.locals||{};var yv=/*#__PURE__*/function(_Fw9){_inherits(yv,_Fw9);var _super59=_createSuper(yv);function yv(t,e){var _this115;_classCallCheck(this,yv);_this115=_super59.call(this,t);var n=_this115.bindTemplate;var o=_this115.t;_this115.options=e||{};_this115.set("ariaLabel",o("Editor toolbar"));_this115.set("maxWidth","auto");_this115.items=_this115.createCollection();_this115.focusTracker=new kg();_this115.keystrokes=new bg();_this115.set("class");_this115.set("isCompact",false);_this115.itemsView=new xv(t);_this115.children=_this115.createCollection();_this115.children.add(_this115.itemsView);_this115.focusables=_this115.createCollection();var i=t.uiLanguageDirection==="rtl";_this115._focusCycler=new q_({focusables:_this115.focusables,focusTracker:_this115.focusTracker,keystrokeHandler:_this115.keystrokes,actions:{focusPrevious:[i?"arrowright":"arrowleft","arrowup"],focusNext:[i?"arrowleft":"arrowright","arrowdown"]}});var r=["ck","ck-toolbar",n.to("class"),n.if("isCompact","ck-toolbar_compact")];if(_this115.options.shouldGroupWhenFull&&_this115.options.isFloating){r.push("ck-toolbar_floating");}_this115.setTemplate({tag:"div",attributes:{class:r,role:"toolbar","aria-label":n.to("ariaLabel"),style:{maxWidth:n.to("maxWidth")}},children:_this115.children,on:{mousedown:bv(_assertThisInitialized(_this115))}});_this115._behavior=_this115.options.shouldGroupWhenFull?new Dv(_assertThisInitialized(_this115)):new Ev(_assertThisInitialized(_this115));return _this115;}_createClass(yv,[{key:"render",value:function render(){var _this116=this;_get(_getPrototypeOf(yv.prototype),"render",this).call(this);var _iterator304=_createForOfIteratorHelper(this.items),_step304;try{for(_iterator304.s();!(_step304=_iterator304.n()).done;){var _t225=_step304.value;this.focusTracker.add(_t225.element);}}catch(err){_iterator304.e(err);}finally{_iterator304.f();}this.items.on("add",function(t,e){_this116.focusTracker.add(e.element);});this.items.on("remove",function(t,e){_this116.focusTracker.remove(e.element);});this.keystrokes.listenTo(this.element);this._behavior.render(this);}},{key:"destroy",value:function destroy(){this._behavior.destroy();this.focusTracker.destroy();this.keystrokes.destroy();return _get(_getPrototypeOf(yv.prototype),"destroy",this).call(this);}},{key:"focus",value:function focus(){this._focusCycler.focusFirst();}},{key:"focusLast",value:function focusLast(){this._focusCycler.focusLast();}},{key:"fillFromConfig",value:function fillFromConfig(t,e){var _this117=this;var n=wv(t);var o=n.items.filter(function(t,o,i){if(t==="|"){return true;}if(n.removeItems.indexOf(t)!==-1){return false;}if(t==="-"){if(_this117.options.shouldGroupWhenFull){u("toolbarview-line-break-ignored-when-grouping-items",i);return false;}return true;}if(!e.has(t)){u("toolbarview-item-unavailable",{name:t});return false;}return true;});var i=this._cleanSeparators(o).map(function(t){if(t==="|"){return new mv();}else if(t==="-"){return new kv();}return e.create(t);});this.items.addMany(i);}},{key:"_cleanSeparators",value:function _cleanSeparators(t){var e=function e(t){return t!=="-"&&t!=="|";};var n=t.length;var o=t.findIndex(e);var i=n-t.slice().reverse().findIndex(e);return t.slice(o,i).filter(function(t,n,o){if(e(t)){return true;}var i=n>0&&o[n-1]===t;return!i;});}}]);return yv;}(Fw);var xv=/*#__PURE__*/function(_Fw10){_inherits(xv,_Fw10);var _super60=_createSuper(xv);function xv(t){var _this118;_classCallCheck(this,xv);_this118=_super60.call(this,t);_this118.children=_this118.createCollection();_this118.setTemplate({tag:"div",attributes:{class:["ck","ck-toolbar__items"]},children:_this118.children});return _this118;}return _createClass(xv);}(Fw);var Ev=/*#__PURE__*/function(){function Ev(t){_classCallCheck(this,Ev);var e=t.bindTemplate;t.set("isVertical",false);t.itemsView.children.bindTo(t.items).using(function(t){return t;});t.focusables.bindTo(t.items).using(function(t){return t;});t.extendTemplate({attributes:{class:[e.if("isVertical","ck-toolbar_vertical")]}});}_createClass(Ev,[{key:"render",value:function render(){}},{key:"destroy",value:function destroy(){}}]);return Ev;}();var Dv=/*#__PURE__*/function(){function Dv(t){var _this119=this;_classCallCheck(this,Dv);this.view=t;this.viewChildren=t.children;this.viewFocusables=t.focusables;this.viewItemsView=t.itemsView;this.viewFocusTracker=t.focusTracker;this.viewLocale=t.locale;this.ungroupedItems=t.createCollection();this.groupedItems=t.createCollection();this.groupedItemsDropdown=this._createGroupedItemsDropdown();this.resizeObserver=null;this.cachedPadding=null;this.shouldUpdateGroupingOnNextResize=false;t.itemsView.children.bindTo(this.ungroupedItems).using(function(t){return t;});this.ungroupedItems.on("add",this._updateFocusCycleableItems.bind(this));this.ungroupedItems.on("remove",this._updateFocusCycleableItems.bind(this));t.children.on("add",this._updateFocusCycleableItems.bind(this));t.children.on("remove",this._updateFocusCycleableItems.bind(this));t.items.on("change",function(t,e){var n=e.index;var _iterator305=_createForOfIteratorHelper(e.removed),_step305;try{for(_iterator305.s();!(_step305=_iterator305.n()).done;){var _t227=_step305.value;if(n>=_this119.ungroupedItems.length){_this119.groupedItems.remove(_t227);}else{_this119.ungroupedItems.remove(_t227);}}}catch(err){_iterator305.e(err);}finally{_iterator305.f();}for(var _t226=n;_t226<n+e.added.length;_t226++){var _o121=e.added[_t226-n];if(_t226>_this119.ungroupedItems.length){_this119.groupedItems.add(_o121,_t226-_this119.ungroupedItems.length);}else{_this119.ungroupedItems.add(_o121,_t226);}}_this119._updateGrouping();});t.extendTemplate({attributes:{class:["ck-toolbar_grouping"]}});}_createClass(Dv,[{key:"render",value:function render(t){this.viewElement=t.element;this._enableGroupingOnResize();this._enableGroupingOnMaxWidthChange(t);}},{key:"destroy",value:function destroy(){this.groupedItemsDropdown.destroy();this.resizeObserver.destroy();}},{key:"_updateGrouping",value:function _updateGrouping(){if(!this.viewElement.ownerDocument.body.contains(this.viewElement)){return;}if(!j_(this.viewElement)){this.shouldUpdateGroupingOnNextResize=true;return;}var t=this.groupedItems.length;var e;while(this._areItemsOverflowing){this._groupLastItem();e=true;}if(!e&&this.groupedItems.length){while(this.groupedItems.length&&!this._areItemsOverflowing){this._ungroupFirstItem();}if(this._areItemsOverflowing){this._groupLastItem();}}if(this.groupedItems.length!==t){this.view.fire("groupedItemsUpdate");}}},{key:"_areItemsOverflowing",get:function get(){if(!this.ungroupedItems.length){return false;}var t=this.viewElement;var e=this.viewLocale.uiLanguageDirection;var n=new Yf(t.lastChild);var o=new Yf(t);if(!this.cachedPadding){var _n193=Zh.window.getComputedStyle(t);var _o122=e==="ltr"?"paddingRight":"paddingLeft";this.cachedPadding=Number.parseInt(_n193[_o122]);}if(e==="ltr"){return n.right>o.right-this.cachedPadding;}else{return n.left<o.left+this.cachedPadding;}}},{key:"_enableGroupingOnResize",value:function _enableGroupingOnResize(){var _this120=this;var t;this.resizeObserver=new eg(this.viewElement,function(e){if(!t||t!==e.contentRect.width||_this120.shouldUpdateGroupingOnNextResize){_this120.shouldUpdateGroupingOnNextResize=false;_this120._updateGrouping();t=e.contentRect.width;}});this._updateGrouping();}},{key:"_enableGroupingOnMaxWidthChange",value:function _enableGroupingOnMaxWidthChange(t){var _this121=this;t.on("change:maxWidth",function(){_this121._updateGrouping();});}},{key:"_groupLastItem",value:function _groupLastItem(){if(!this.groupedItems.length){this.viewChildren.add(new mv());this.viewChildren.add(this.groupedItemsDropdown);this.viewFocusTracker.add(this.groupedItemsDropdown.element);}this.groupedItems.add(this.ungroupedItems.remove(this.ungroupedItems.last),0);}},{key:"_ungroupFirstItem",value:function _ungroupFirstItem(){this.ungroupedItems.add(this.groupedItems.remove(this.groupedItems.first));if(!this.groupedItems.length){this.viewChildren.remove(this.groupedItemsDropdown);this.viewChildren.remove(this.viewChildren.last);this.viewFocusTracker.remove(this.groupedItemsDropdown.element);}}},{key:"_createGroupedItemsDropdown",value:function _createGroupedItemsDropdown(){var t=this.viewLocale;var e=t.t;var n=qv(t);n.class="ck-toolbar__grouped-dropdown";n.panelPosition=t.uiLanguageDirection==="ltr"?"sw":"se";Wv(n,[]);n.buttonView.set({label:e("Show more items"),tooltip:true,tooltipPosition:t.uiLanguageDirection==="rtl"?"se":"sw",icon:Dw});n.toolbarView.items.bindTo(this.groupedItems).using(function(t){return t;});return n;}},{key:"_updateFocusCycleableItems",value:function _updateFocusCycleableItems(){var _this122=this;this.viewFocusables.clear();this.ungroupedItems.map(function(t){_this122.viewFocusables.add(t);});if(this.groupedItems.length){this.viewFocusables.add(this.groupedItemsDropdown);}}}]);return Dv;}();var Sv=n(162);var Pv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Pv.insert="head";Pv.singleton=true;var Tv=Nh()(Sv.Z,Pv);var Bv=Sv.Z.locals||{};var Iv=/*#__PURE__*/function(_Fw11){_inherits(Iv,_Fw11);var _super61=_createSuper(Iv);function Iv(){var _this123;_classCallCheck(this,Iv);_this123=_super61.call(this);_this123.items=_this123.createCollection();_this123.focusTracker=new kg();_this123.keystrokes=new bg();_this123._focusCycler=new q_({focusables:_this123.items,focusTracker:_this123.focusTracker,keystrokeHandler:_this123.keystrokes,actions:{focusPrevious:"arrowup",focusNext:"arrowdown"}});_this123.setTemplate({tag:"ul",attributes:{class:["ck","ck-reset","ck-list"]},children:_this123.items});return _this123;}_createClass(Iv,[{key:"render",value:function render(){var _this124=this;_get(_getPrototypeOf(Iv.prototype),"render",this).call(this);var _iterator306=_createForOfIteratorHelper(this.items),_step306;try{for(_iterator306.s();!(_step306=_iterator306.n()).done;){var _t228=_step306.value;this.focusTracker.add(_t228.element);}}catch(err){_iterator306.e(err);}finally{_iterator306.f();}this.items.on("add",function(t,e){_this124.focusTracker.add(e.element);});this.items.on("remove",function(t,e){_this124.focusTracker.remove(e.element);});this.keystrokes.listenTo(this.element);}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(Iv.prototype),"destroy",this).call(this);this.focusTracker.destroy();this.keystrokes.destroy();}},{key:"focus",value:function focus(){this._focusCycler.focusFirst();}},{key:"focusLast",value:function focusLast(){this._focusCycler.focusLast();}}]);return Iv;}(Fw);var Rv=/*#__PURE__*/function(_Fw12){_inherits(Rv,_Fw12);var _super62=_createSuper(Rv);function Rv(t){var _this125;_classCallCheck(this,Rv);_this125=_super62.call(this,t);_this125.children=_this125.createCollection();_this125.setTemplate({tag:"li",attributes:{class:["ck","ck-list__item"]},children:_this125.children});return _this125;}_createClass(Rv,[{key:"focus",value:function focus(){this.children.first.focus();}}]);return Rv;}(Fw);var Ov=/*#__PURE__*/function(_Fw13){_inherits(Ov,_Fw13);var _super63=_createSuper(Ov);function Ov(t){var _this126;_classCallCheck(this,Ov);_this126=_super63.call(this,t);_this126.setTemplate({tag:"li",attributes:{class:["ck","ck-list__separator"]}});return _this126;}return _createClass(Ov);}(Fw);var zv=n(75);var Mv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Mv.insert="head";Mv.singleton=true;var Nv=Nh()(zv.Z,Mv);var Fv=zv.Z.locals||{};var Vv=n(875);var Lv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Lv.insert="head";Lv.singleton=true;var Hv=Nh()(Vv.Z,Lv);var jv=Vv.Z.locals||{};function qv(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Y_;var n=new e(t);var o=new ov(t);var i=new pv(t,n,o);n.bind("isEnabled").to(i);if(n instanceof Y_){n.bind("isOn").to(i,"isOpen");}else{n.arrowView.bind("isOn").to(i,"isOpen");}Gv(i);return i;}function Wv(t,e){var n=t.locale;var o=n.t;var i=t.toolbarView=new yv(n);i.set("ariaLabel",o("Dropdown toolbar"));t.extendTemplate({attributes:{class:["ck-toolbar-dropdown"]}});e.map(function(t){return i.items.add(t);});t.panelView.children.add(i);i.items.delegate("execute").to(t);}function Kv(t,e){var n=t.locale;var o=t.listView=new Iv(n);o.items.bindTo(e).using(function(_ref37){var t=_ref37.type,e=_ref37.model;if(t==="separator"){return new Ov(n);}else if(t==="button"||t==="switchbutton"){var _i107;var _o123=new Rv(n);var _i106;if(t==="button"){_i106=new B_(n);}else{_i106=new M_(n);}(_i107=_i106).bind.apply(_i107,_toConsumableArray(Object.keys(e))).to(e);_i106.delegate("execute").to(_o123);_o123.children.add(_i106);return _o123;}});t.panelView.children.add(o);o.items.delegate("execute").to(t);}function Gv(t){$v(t);Uv(t);Jv(t);}function $v(t){t.on("render",function(){Pw({emitter:t,activator:function activator(){return t.isOpen;},callback:function callback(){t.isOpen=false;},contextElements:[t.element]});});}function Uv(t){t.on("execute",function(e){if(e.source instanceof M_){return;}t.isOpen=false;});}function Jv(t){t.keystrokes.set("arrowdown",function(e,n){if(t.isOpen){t.panelView.focus();n();}});t.keystrokes.set("arrowup",function(e,n){if(t.isOpen){t.panelView.focusLast();n();}});}var Zv=n(547);var Yv={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Yv.insert="head";Yv.singleton=true;var Qv=Nh()(Zv.Z,Yv);var Xv=Zv.Z.locals||{};var tA=/*#__PURE__*/function(_Fw14){_inherits(tA,_Fw14);var _super64=_createSuper(tA);function tA(t){var _this127;_classCallCheck(this,tA);_this127=_super64.call(this,t);_this127.body=new m_(t);return _this127;}_createClass(tA,[{key:"render",value:function render(){_get(_getPrototypeOf(tA.prototype),"render",this).call(this);this.body.attachToDom();}},{key:"destroy",value:function destroy(){this.body.detachFromDom();return _get(_getPrototypeOf(tA.prototype),"destroy",this).call(this);}}]);return tA;}(Fw);var eA=n(751);var nA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};nA.insert="head";nA.singleton=true;var oA=Nh()(eA.Z,nA);var iA=eA.Z.locals||{};var rA=/*#__PURE__*/function(_Fw15){_inherits(rA,_Fw15);var _super65=_createSuper(rA);function rA(t){var _this128;_classCallCheck(this,rA);_this128=_super65.call(this,t);_this128.set("text");_this128.set("for");_this128.id="ck-editor__label_".concat(s());var e=_this128.bindTemplate;_this128.setTemplate({tag:"label",attributes:{class:["ck","ck-label"],id:_this128.id,for:e.to("for")},children:[{text:e.to("text")}]});return _this128;}return _createClass(rA);}(Fw);var sA=/*#__PURE__*/function(_ref38){_inherits(sA,_ref38);var _super66=_createSuper(sA);function sA(t){var _this129;_classCallCheck(this,sA);_this129=_super66.call(this,t);_this129.top=_this129.createCollection();_this129.main=_this129.createCollection();_this129._voiceLabelView=_this129._createVoiceLabel();_this129.setTemplate({tag:"div",attributes:{class:["ck","ck-reset","ck-editor","ck-rounded-corners"],role:"application",dir:t.uiLanguageDirection,lang:t.uiLanguage,"aria-labelledby":_this129._voiceLabelView.id},children:[_this129._voiceLabelView,{tag:"div",attributes:{class:["ck","ck-editor__top","ck-reset_all"],role:"presentation"},children:_this129.top},{tag:"div",attributes:{class:["ck","ck-editor__main"],role:"presentation"},children:_this129.main}]});return _this129;}_createClass(sA,[{key:"_createVoiceLabel",value:function _createVoiceLabel(){var t=this.t;var e=new LabelView();e.text=t("Rich Text Editor");e.extendTemplate({attributes:{class:"ck-voice-label"}});return e;}}]);return sA;}(null&&EditorUIView);var aA=/*#__PURE__*/function(_Fw16){_inherits(aA,_Fw16);var _super67=_createSuper(aA);function aA(t,e,n){var _this130;_classCallCheck(this,aA);_this130=_super67.call(this,t);_this130.setTemplate({tag:"div",attributes:{class:["ck","ck-content","ck-editor__editable","ck-rounded-corners"],lang:t.contentLanguage,dir:t.contentLanguageDirection}});_this130.name=null;_this130.set("isFocused",false);_this130._editableElement=n;_this130._hasExternalElement=!!_this130._editableElement;_this130._editingView=e;return _this130;}_createClass(aA,[{key:"render",value:function render(){var _this131=this;_get(_getPrototypeOf(aA.prototype),"render",this).call(this);if(this._hasExternalElement){this.template.apply(this.element=this._editableElement);}else{this._editableElement=this.element;}this.on("change:isFocused",function(){return _this131._updateIsFocusedClasses();});this._updateIsFocusedClasses();}},{key:"destroy",value:function destroy(){if(this._hasExternalElement){this.template.revert(this._editableElement);}_get(_getPrototypeOf(aA.prototype),"destroy",this).call(this);}},{key:"_updateIsFocusedClasses",value:function _updateIsFocusedClasses(){var t=this._editingView;if(t.isRenderingInProgress){n(this);}else{e(this);}function e(e){t.change(function(n){var o=t.document.getRoot(e.name);n.addClass(e.isFocused?"ck-focused":"ck-blurred",o);n.removeClass(e.isFocused?"ck-blurred":"ck-focused",o);});}function n(o){t.once("change:isRenderingInProgress",function(t,i,r){if(!r){e(o);}else{n(o);}});}}}]);return aA;}(Fw);var cA=/*#__PURE__*/function(_aA){_inherits(cA,_aA);var _super68=_createSuper(cA);function cA(t,e,n){var _this132;_classCallCheck(this,cA);_this132=_super68.call(this,t,e,n);_this132.extendTemplate({attributes:{role:"textbox",class:"ck-editor__editable_inline"}});return _this132;}_createClass(cA,[{key:"render",value:function render(){var _this133=this;_get(_getPrototypeOf(cA.prototype),"render",this).call(this);var t=this._editingView;var e=this.t;t.change(function(n){var o=t.document.getRoot(_this133.name);n.setAttribute("aria-label",e("Rich Text Editor, %0",_this133.name),o);});}}]);return cA;}(aA);var lA=n(523);var dA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};dA.insert="head";dA.singleton=true;var hA=Nh()(lA.Z,dA);var uA=lA.Z.locals||{};var fA=/*#__PURE__*/function(_ref39){_inherits(fA,_ref39);var _super69=_createSuper(fA);function fA(t){var _this134;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,fA);_this134=_super69.call(this,t);var n=_this134.bindTemplate;_this134.set("label",e.label||"");_this134.set("class",e.class||null);_this134.children=_this134.createCollection();_this134.setTemplate({tag:"div",attributes:{class:["ck","ck-form__header",n.to("class")]},children:_this134.children});var o=new View(t);o.setTemplate({tag:"span",attributes:{class:["ck","ck-form__header__label"]},children:[{text:n.to("label")}]});_this134.children.add(o);return _this134;}return _createClass(fA);}(null&&View);var gA=n(985);var pA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};pA.insert="head";pA.singleton=true;var mA=Nh()(gA.Z,pA);var kA=gA.Z.locals||{};var bA=/*#__PURE__*/function(_Fw17){_inherits(bA,_Fw17);var _super70=_createSuper(bA);function bA(t){var _this135;_classCallCheck(this,bA);_this135=_super70.call(this,t);_this135.set("value");_this135.set("id");_this135.set("placeholder");_this135.set("isReadOnly",false);_this135.set("hasError",false);_this135.set("ariaDescribedById");_this135.focusTracker=new kg();_this135.bind("isFocused").to(_this135.focusTracker);_this135.set("isEmpty",true);_this135.set("inputMode","text");var e=_this135.bindTemplate;_this135.setTemplate({tag:"input",attributes:{class:["ck","ck-input",e.if("isFocused","ck-input_focused"),e.if("isEmpty","ck-input-text_empty"),e.if("hasError","ck-error")],id:e.to("id"),placeholder:e.to("placeholder"),readonly:e.to("isReadOnly"),inputmode:e.to("inputMode"),"aria-invalid":e.if("hasError",true),"aria-describedby":e.to("ariaDescribedById")},on:{input:e.to(function(){var _this136;for(var _len20=arguments.length,t=new Array(_len20),_key20=0;_key20<_len20;_key20++){t[_key20]=arguments[_key20];}(_this136=_this135).fire.apply(_this136,["input"].concat(t));_this135._updateIsEmpty();}),change:e.to(_this135._updateIsEmpty.bind(_assertThisInitialized(_this135)))}});return _this135;}_createClass(bA,[{key:"render",value:function render(){var _this137=this;_get(_getPrototypeOf(bA.prototype),"render",this).call(this);this.focusTracker.add(this.element);this._setDomElementValue(this.value);this._updateIsEmpty();this.on("change:value",function(t,e,n){_this137._setDomElementValue(n);_this137._updateIsEmpty();});}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(bA.prototype),"destroy",this).call(this);this.focusTracker.destroy();}},{key:"select",value:function select(){this.element.select();}},{key:"focus",value:function focus(){this.element.focus();}},{key:"_updateIsEmpty",value:function _updateIsEmpty(){this.isEmpty=wA(this.element);}},{key:"_setDomElementValue",value:function _setDomElementValue(t){this.element.value=!t&&t!==0?"":t;}}]);return bA;}(Fw);function wA(t){return!t.value;}var _A=/*#__PURE__*/function(_bA){_inherits(_A,_bA);var _super71=_createSuper(_A);function _A(t){var _this138;_classCallCheck(this,_A);_this138=_super71.call(this,t);_this138.extendTemplate({attributes:{type:"text",class:["ck-input-text"]}});return _this138;}return _createClass(_A);}(bA);var vA=/*#__PURE__*/function(_ref40){_inherits(vA,_ref40);var _super72=_createSuper(vA);function vA(t){var _this139;var _ref41=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},e=_ref41.min,n=_ref41.max,o=_ref41.step;_classCallCheck(this,vA);_this139=_super72.call(this,t);var i=_this139.bindTemplate;_this139.set("min",e);_this139.set("max",n);_this139.set("step",o);_this139.extendTemplate({attributes:{type:"number",class:["ck-input-number"],min:i.to("min"),max:i.to("max"),step:i.to("step")}});return _this139;}return _createClass(vA);}(null&&InputView);var AA=/*#__PURE__*/function(_ref42){_inherits(AA,_ref42);var _super73=_createSuper(AA);function AA(t){var _this140;_classCallCheck(this,AA);_this140=_super73.call(this,t);var e=_this140.bindTemplate;_this140.setTemplate({tag:"iframe",attributes:{class:["ck","ck-reset_all"],sandbox:"allow-same-origin allow-scripts"},on:{load:e.to("loaded")}});return _this140;}_createClass(AA,[{key:"render",value:function render(){var _this141=this;return new Promise(function(t){_this141.on("loaded",t);_get(_getPrototypeOf(AA.prototype),"render",_this141).call(_this141);});}}]);return AA;}(null&&View);var CA=n(111);var yA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};yA.insert="head";yA.singleton=true;var xA=Nh()(CA.Z,yA);var EA=CA.Z.locals||{};var DA=/*#__PURE__*/function(_Fw18){_inherits(DA,_Fw18);var _super74=_createSuper(DA);function DA(t,e){var _this142;_classCallCheck(this,DA);_this142=_super74.call(this,t);var n="ck-labeled-field-view-".concat(s());var o="ck-labeled-field-view-status-".concat(s());_this142.fieldView=e(_assertThisInitialized(_this142),n,o);_this142.set("label");_this142.set("isEnabled",true);_this142.set("isEmpty",true);_this142.set("isFocused",false);_this142.set("errorText",null);_this142.set("infoText",null);_this142.set("class");_this142.set("placeholder");_this142.labelView=_this142._createLabelView(n);_this142.statusView=_this142._createStatusView(o);_this142.bind("_statusText").to(_assertThisInitialized(_this142),"errorText",_assertThisInitialized(_this142),"infoText",function(t,e){return t||e;});var i=_this142.bindTemplate;_this142.setTemplate({tag:"div",attributes:{class:["ck","ck-labeled-field-view",i.to("class"),i.if("isEnabled","ck-disabled",function(t){return!t;}),i.if("isEmpty","ck-labeled-field-view_empty"),i.if("isFocused","ck-labeled-field-view_focused"),i.if("placeholder","ck-labeled-field-view_placeholder"),i.if("errorText","ck-error")]},children:[{tag:"div",attributes:{class:["ck","ck-labeled-field-view__input-wrapper"]},children:[_this142.fieldView,_this142.labelView]},_this142.statusView]});return _this142;}_createClass(DA,[{key:"_createLabelView",value:function _createLabelView(t){var e=new rA(this.locale);e.for=t;e.bind("text").to(this,"label");return e;}},{key:"_createStatusView",value:function _createStatusView(t){var e=new Fw(this.locale);var n=this.bindTemplate;e.setTemplate({tag:"div",attributes:{class:["ck","ck-labeled-field-view__status",n.if("errorText","ck-labeled-field-view__status_error"),n.if("_statusText","ck-hidden",function(t){return!t;})],id:t,role:n.if("errorText","alert")},children:[{text:n.to("_statusText")}]});return e;}},{key:"focus",value:function focus(){this.fieldView.focus();}}]);return DA;}(Fw);function SA(t,e,n){var o=new _A(t.locale);o.set({id:e,ariaDescribedById:n});o.bind("isReadOnly").to(t,"isEnabled",function(t){return!t;});o.bind("hasError").to(t,"errorText",function(t){return!!t;});o.on("input",function(){t.errorText=null;});t.bind("isEmpty","isFocused","placeholder").to(o);return o;}function PA(t,e,n){var o=new InputNumberView(t.locale);o.set({id:e,ariaDescribedById:n,inputMode:"numeric"});o.bind("isReadOnly").to(t,"isEnabled",function(t){return!t;});o.bind("hasError").to(t,"errorText",function(t){return!!t;});o.on("input",function(){t.errorText=null;});t.bind("isEmpty","isFocused","placeholder").to(o);return o;}function TA(t,e,n){var o=createDropdown(t.locale);o.set({id:e,ariaDescribedById:n});o.bind("isEnabled").to(t);return o;}var BA=/*#__PURE__*/function(_ref43){_inherits(BA,_ref43);var _super75=_createSuper(BA);function BA(){_classCallCheck(this,BA);return _super75.apply(this,arguments);}_createClass(BA,[{key:"init",value:function init(){this.on("show:warning",function(t,e){window.alert(e.message);},{priority:"lowest"});}},{key:"showSuccess",value:function showSuccess(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this._showNotification({message:t,type:"success",namespace:e.namespace,title:e.title});}},{key:"showInfo",value:function showInfo(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this._showNotification({message:t,type:"info",namespace:e.namespace,title:e.title});}},{key:"showWarning",value:function showWarning(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this._showNotification({message:t,type:"warning",namespace:e.namespace,title:e.title});}},{key:"_showNotification",value:function _showNotification(t){var e="show:".concat(t.type)+(t.namespace?":".concat(t.namespace):"");this.fire(e,{message:t.message,type:t.type,title:t.title||""});}}],[{key:"pluginName",get:function get(){return"Notification";}}]);return BA;}(null&&ContextPlugin);var IA=/*#__PURE__*/_createClass(function IA(t,e){_classCallCheck(this,IA);if(e){Un(this,e);}if(t){this.set(t);}});fo(IA,eo);function RA(t){return function(e){return e+t;};}var OA=n(245);var zA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};zA.insert="head";zA.singleton=true;var MA=Nh()(OA.Z,zA);var NA=OA.Z.locals||{};var FA=RA("px");var VA=Zh.document.body;var LA=/*#__PURE__*/function(_Fw19){_inherits(LA,_Fw19);var _super76=_createSuper(LA);function LA(t){var _this143;_classCallCheck(this,LA);_this143=_super76.call(this,t);var e=_this143.bindTemplate;_this143.set("top",0);_this143.set("left",0);_this143.set("position","arrow_nw");_this143.set("isVisible",false);_this143.set("withArrow",true);_this143.set("class");_this143.content=_this143.createCollection();_this143.setTemplate({tag:"div",attributes:{class:["ck","ck-balloon-panel",e.to("position",function(t){return"ck-balloon-panel_".concat(t);}),e.if("isVisible","ck-balloon-panel_visible"),e.if("withArrow","ck-balloon-panel_with-arrow"),e.to("class")],style:{top:e.to("top",FA),left:e.to("left",FA)}},children:_this143.content});return _this143;}_createClass(LA,[{key:"show",value:function show(){this.isVisible=true;}},{key:"hide",value:function hide(){this.isVisible=false;}},{key:"attachTo",value:function attachTo(t){this.show();var e=LA.defaultPositions;var n=Object.assign({},{element:this.element,positions:[e.southArrowNorth,e.southArrowNorthMiddleWest,e.southArrowNorthMiddleEast,e.southArrowNorthWest,e.southArrowNorthEast,e.northArrowSouth,e.northArrowSouthMiddleWest,e.northArrowSouthMiddleEast,e.northArrowSouthWest,e.northArrowSouthEast,e.viewportStickyNorth],limiter:VA,fitInViewport:true},t);var o=LA._getOptimalPosition(n);var i=parseInt(o.left);var r=parseInt(o.top);var s=o.name,_o$config=o.config,a=_o$config===void 0?{}:_o$config;var _a$withArrow=a.withArrow,c=_a$withArrow===void 0?true:_a$withArrow;Object.assign(this,{top:r,left:i,position:s,withArrow:c});}},{key:"pin",value:function pin(t){var _this144=this;this.unpin();this._pinWhenIsVisibleCallback=function(){if(_this144.isVisible){_this144._startPinning(t);}else{_this144._stopPinning();}};this._startPinning(t);this.listenTo(this,"change:isVisible",this._pinWhenIsVisibleCallback);}},{key:"unpin",value:function unpin(){if(this._pinWhenIsVisibleCallback){this._stopPinning();this.stopListening(this,"change:isVisible",this._pinWhenIsVisibleCallback);this._pinWhenIsVisibleCallback=null;this.hide();}}},{key:"_startPinning",value:function _startPinning(t){var _this145=this;this.attachTo(t);var e=HA(t.target);var n=t.limiter?HA(t.limiter):VA;this.listenTo(Zh.document,"scroll",function(o,i){var r=i.target;var s=e&&r.contains(e);var a=n&&r.contains(n);if(s||a||!e||!n){_this145.attachTo(t);}},{useCapture:true});this.listenTo(Zh.window,"resize",function(){_this145.attachTo(t);});}},{key:"_stopPinning",value:function _stopPinning(){this.stopListening(Zh.document,"scroll");this.stopListening(Zh.window,"resize");}}]);return LA;}(Fw);function HA(t){if(Wa(t)){return t;}if(Uf(t)){return t.commonAncestorContainer;}if(typeof t=="function"){return HA(t());}return null;}LA.arrowHorizontalOffset=25;LA.arrowVerticalOffset=10;LA.stickyVerticalOffset=20;LA._getOptimalPosition=lv;LA.defaultPositions=jA();function jA(){var _ref44=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref44$horizontalOffs=_ref44.horizontalOffset,t=_ref44$horizontalOffs===void 0?LA.arrowHorizontalOffset:_ref44$horizontalOffs,_ref44$verticalOffset=_ref44.verticalOffset,e=_ref44$verticalOffset===void 0?LA.arrowVerticalOffset:_ref44$verticalOffset,_ref44$stickyVertical=_ref44.stickyVerticalOffset,n=_ref44$stickyVertical===void 0?LA.stickyVerticalOffset:_ref44$stickyVertical,o=_ref44.config;return{northWestArrowSouthWest:function northWestArrowSouthWest(e,n){return _objectSpread({top:i(e,n),left:e.left-t,name:"arrow_sw"},o&&{config:o});},northWestArrowSouthMiddleWest:function northWestArrowSouthMiddleWest(e,n){return _objectSpread({top:i(e,n),left:e.left-n.width*.25-t,name:"arrow_smw"},o&&{config:o});},northWestArrowSouth:function northWestArrowSouth(t,e){return _objectSpread({top:i(t,e),left:t.left-e.width/2,name:"arrow_s"},o&&{config:o});},northWestArrowSouthMiddleEast:function northWestArrowSouthMiddleEast(e,n){return _objectSpread({top:i(e,n),left:e.left-n.width*.75+t,name:"arrow_sme"},o&&{config:o});},northWestArrowSouthEast:function northWestArrowSouthEast(e,n){return _objectSpread({top:i(e,n),left:e.left-n.width+t,name:"arrow_se"},o&&{config:o});},northArrowSouthWest:function northArrowSouthWest(e,n){return _objectSpread({top:i(e,n),left:e.left+e.width/2-t,name:"arrow_sw"},o&&{config:o});},northArrowSouthMiddleWest:function northArrowSouthMiddleWest(e,n){return _objectSpread({top:i(e,n),left:e.left+e.width/2-n.width*.25-t,name:"arrow_smw"},o&&{config:o});},northArrowSouth:function northArrowSouth(t,e){return _objectSpread({top:i(t,e),left:t.left+t.width/2-e.width/2,name:"arrow_s"},o&&{config:o});},northArrowSouthMiddleEast:function northArrowSouthMiddleEast(e,n){return _objectSpread({top:i(e,n),left:e.left+e.width/2-n.width*.75+t,name:"arrow_sme"},o&&{config:o});},northArrowSouthEast:function northArrowSouthEast(e,n){return _objectSpread({top:i(e,n),left:e.left+e.width/2-n.width+t,name:"arrow_se"},o&&{config:o});},northEastArrowSouthWest:function northEastArrowSouthWest(e,n){return _objectSpread({top:i(e,n),left:e.right-t,name:"arrow_sw"},o&&{config:o});},northEastArrowSouthMiddleWest:function northEastArrowSouthMiddleWest(e,n){return _objectSpread({top:i(e,n),left:e.right-n.width*.25-t,name:"arrow_smw"},o&&{config:o});},northEastArrowSouth:function northEastArrowSouth(t,e){return _objectSpread({top:i(t,e),left:t.right-e.width/2,name:"arrow_s"},o&&{config:o});},northEastArrowSouthMiddleEast:function northEastArrowSouthMiddleEast(e,n){return _objectSpread({top:i(e,n),left:e.right-n.width*.75+t,name:"arrow_sme"},o&&{config:o});},northEastArrowSouthEast:function northEastArrowSouthEast(e,n){return _objectSpread({top:i(e,n),left:e.right-n.width+t,name:"arrow_se"},o&&{config:o});},southWestArrowNorthWest:function southWestArrowNorthWest(e,n){return _objectSpread({top:r(e,n),left:e.left-t,name:"arrow_nw"},o&&{config:o});},southWestArrowNorthMiddleWest:function southWestArrowNorthMiddleWest(e,n){return _objectSpread({top:r(e,n),left:e.left-n.width*.25-t,name:"arrow_nmw"},o&&{config:o});},southWestArrowNorth:function southWestArrowNorth(t,e){return _objectSpread({top:r(t,e),left:t.left-e.width/2,name:"arrow_n"},o&&{config:o});},southWestArrowNorthMiddleEast:function southWestArrowNorthMiddleEast(e,n){return _objectSpread({top:r(e,n),left:e.left-n.width*.75+t,name:"arrow_nme"},o&&{config:o});},southWestArrowNorthEast:function southWestArrowNorthEast(e,n){return _objectSpread({top:r(e,n),left:e.left-n.width+t,name:"arrow_ne"},o&&{config:o});},southArrowNorthWest:function southArrowNorthWest(e,n){return _objectSpread({top:r(e,n),left:e.left+e.width/2-t,name:"arrow_nw"},o&&{config:o});},southArrowNorthMiddleWest:function southArrowNorthMiddleWest(e,n){return _objectSpread({top:r(e,n),left:e.left+e.width/2-n.width*.25-t,name:"arrow_nmw"},o&&{config:o});},southArrowNorth:function southArrowNorth(t,e){return _objectSpread({top:r(t,e),left:t.left+t.width/2-e.width/2,name:"arrow_n"},o&&{config:o});},southArrowNorthMiddleEast:function southArrowNorthMiddleEast(e,n){return _objectSpread({top:r(e,n),left:e.left+e.width/2-n.width*.75+t,name:"arrow_nme"},o&&{config:o});},southArrowNorthEast:function southArrowNorthEast(e,n){return _objectSpread({top:r(e,n),left:e.left+e.width/2-n.width+t,name:"arrow_ne"},o&&{config:o});},southEastArrowNorthWest:function southEastArrowNorthWest(e,n){return _objectSpread({top:r(e,n),left:e.right-t,name:"arrow_nw"},o&&{config:o});},southEastArrowNorthMiddleWest:function southEastArrowNorthMiddleWest(e,n){return _objectSpread({top:r(e,n),left:e.right-n.width*.25-t,name:"arrow_nmw"},o&&{config:o});},southEastArrowNorth:function southEastArrowNorth(t,e){return _objectSpread({top:r(t,e),left:t.right-e.width/2,name:"arrow_n"},o&&{config:o});},southEastArrowNorthMiddleEast:function southEastArrowNorthMiddleEast(e,n){return _objectSpread({top:r(e,n),left:e.right-n.width*.75+t,name:"arrow_nme"},o&&{config:o});},southEastArrowNorthEast:function southEastArrowNorthEast(e,n){return _objectSpread({top:r(e,n),left:e.right-n.width+t,name:"arrow_ne"},o&&{config:o});},viewportStickyNorth:function viewportStickyNorth(t,e,i){if(!t.getIntersection(i)){return null;}return{top:i.top+n,left:t.left+t.width/2-e.width/2,name:"arrowless",config:_objectSpread({withArrow:false},o)};}};function i(t,n){return t.top-n.height-e;}function r(t){return t.bottom+e;}}var qA='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M11.463 5.187a.888.888 0 1 1 1.254 1.255L9.16 10l3.557 3.557a.888.888 0 1 1-1.254 1.255L7.26 10.61a.888.888 0 0 1 .16-1.382l4.043-4.042z"/></svg>';var WA='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M8.537 14.813a.888.888 0 1 1-1.254-1.255L10.84 10 7.283 6.442a.888.888 0 1 1 1.254-1.255L12.74 9.39a.888.888 0 0 1-.16 1.382l-4.043 4.042z"/></svg>';var KA=n(757);var GA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};GA.insert="head";GA.singleton=true;var $A=Nh()(KA.Z,GA);var UA=KA.Z.locals||{};var JA=n(553);var ZA={injectType:"singletonStyleTag",attributes:{"data-cke":true}};ZA.insert="head";ZA.singleton=true;var YA=Nh()(JA.Z,ZA);var QA=JA.Z.locals||{};var XA=RA("px");var tC=/*#__PURE__*/function(_go){_inherits(tC,_go);var _super77=_createSuper(tC);function tC(t){var _this146;_classCallCheck(this,tC);_this146=_super77.call(this,t);_this146.positionLimiter=function(){var t=_this146.editor.editing.view;var e=t.document;var n=e.selection.editableElement;if(n){return t.domConverter.mapViewToDom(n.root);}return null;};_this146.set("visibleView",null);_this146.view=new LA(t.locale);t.ui.view.body.add(_this146.view);t.ui.focusTracker.add(_this146.view.element);_this146._viewToStack=new Map();_this146._idToStack=new Map();_this146.set("_numberOfStacks",0);_this146.set("_singleViewMode",false);_this146._rotatorView=_this146._createRotatorView();_this146._fakePanelsView=_this146._createFakePanelsView();return _this146;}_createClass(tC,[{key:"destroy",value:function destroy(){_get(_getPrototypeOf(tC.prototype),"destroy",this).call(this);this.view.destroy();this._rotatorView.destroy();this._fakePanelsView.destroy();}},{key:"hasView",value:function hasView(t){return Array.from(this._viewToStack.keys()).includes(t);}},{key:"add",value:function add(t){if(this.hasView(t.view)){throw new h("contextualballoon-add-view-exist",[this,t]);}var e=t.stackId||"main";if(!this._idToStack.has(e)){this._idToStack.set(e,new Map([[t.view,t]]));this._viewToStack.set(t.view,this._idToStack.get(e));this._numberOfStacks=this._idToStack.size;if(!this._visibleStack||t.singleViewMode){this.showStack(e);}return;}var n=this._idToStack.get(e);if(t.singleViewMode){this.showStack(e);}n.set(t.view,t);this._viewToStack.set(t.view,n);if(n===this._visibleStack){this._showView(t);}}},{key:"remove",value:function remove(t){if(!this.hasView(t)){throw new h("contextualballoon-remove-view-not-exist",[this,t]);}var e=this._viewToStack.get(t);if(this._singleViewMode&&this.visibleView===t){this._singleViewMode=false;}if(this.visibleView===t){if(e.size===1){if(this._idToStack.size>1){this._showNextStack();}else{this.view.hide();this.visibleView=null;this._rotatorView.hideView();}}else{this._showView(Array.from(e.values())[e.size-2]);}}if(e.size===1){this._idToStack.delete(this._getStackId(e));this._numberOfStacks=this._idToStack.size;}else{e.delete(t);}this._viewToStack.delete(t);}},{key:"updatePosition",value:function updatePosition(t){if(t){this._visibleStack.get(this.visibleView).position=t;}this.view.pin(this._getBalloonPosition());this._fakePanelsView.updatePosition();}},{key:"showStack",value:function showStack(t){this.visibleStack=t;var e=this._idToStack.get(t);if(!e){throw new h("contextualballoon-showstack-stack-not-exist",this);}if(this._visibleStack===e){return;}this._showView(Array.from(e.values()).pop());}},{key:"_visibleStack",get:function get(){return this._viewToStack.get(this.visibleView);}},{key:"_getStackId",value:function _getStackId(t){var e=Array.from(this._idToStack.entries()).find(function(e){return e[1]===t;});return e[0];}},{key:"_showNextStack",value:function _showNextStack(){var t=Array.from(this._idToStack.values());var e=t.indexOf(this._visibleStack)+1;if(!t[e]){e=0;}this.showStack(this._getStackId(t[e]));}},{key:"_showPrevStack",value:function _showPrevStack(){var t=Array.from(this._idToStack.values());var e=t.indexOf(this._visibleStack)-1;if(!t[e]){e=t.length-1;}this.showStack(this._getStackId(t[e]));}},{key:"_createRotatorView",value:function _createRotatorView(){var _this147=this;var t=new eC(this.editor.locale);var e=this.editor.locale.t;this.view.content.add(t);t.bind("isNavigationVisible").to(this,"_numberOfStacks",this,"_singleViewMode",function(t,e){return!e&&t>1;});t.on("change:isNavigationVisible",function(){return _this147.updatePosition();},{priority:"low"});t.bind("counter").to(this,"visibleView",this,"_numberOfStacks",function(t,n){if(n<2){return"";}var o=Array.from(_this147._idToStack.values()).indexOf(_this147._visibleStack)+1;return e("%0 of %1",[o,n]);});t.buttonNextView.on("execute",function(){if(t.focusTracker.isFocused){_this147.editor.editing.view.focus();}_this147._showNextStack();});t.buttonPrevView.on("execute",function(){if(t.focusTracker.isFocused){_this147.editor.editing.view.focus();}_this147._showPrevStack();});return t;}},{key:"_createFakePanelsView",value:function _createFakePanelsView(){var t=new nC(this.editor.locale,this.view);t.bind("numberOfPanels").to(this,"_numberOfStacks",this,"_singleViewMode",function(t,e){var n=!e&&t>=2;return n?Math.min(t-1,2):0;});t.listenTo(this.view,"change:top",function(){return t.updatePosition();});t.listenTo(this.view,"change:left",function(){return t.updatePosition();});this.editor.ui.view.body.add(t);return t;}},{key:"_showView",value:function _showView(_ref45){var t=_ref45.view,_ref45$balloonClassNa=_ref45.balloonClassName,e=_ref45$balloonClassNa===void 0?"":_ref45$balloonClassNa,_ref45$withArrow=_ref45.withArrow,n=_ref45$withArrow===void 0?true:_ref45$withArrow,_ref45$singleViewMode=_ref45.singleViewMode,o=_ref45$singleViewMode===void 0?false:_ref45$singleViewMode;this.view.class=e;this.view.withArrow=n;this._rotatorView.showView(t);this.visibleView=t;this.view.pin(this._getBalloonPosition());this._fakePanelsView.updatePosition();if(o){this._singleViewMode=true;}}},{key:"_getBalloonPosition",value:function _getBalloonPosition(){var t=Array.from(this._visibleStack.values()).pop().position;if(t){if(!t.limiter){t=Object.assign({},t,{limiter:this.positionLimiter});}t=Object.assign({},t,{viewportOffsetConfig:this.editor.ui.viewportOffset});}return t;}}],[{key:"pluginName",get:function get(){return"ContextualBalloon";}}]);return tC;}(go);var eC=/*#__PURE__*/function(_Fw20){_inherits(eC,_Fw20);var _super78=_createSuper(eC);function eC(t){var _this148;_classCallCheck(this,eC);_this148=_super78.call(this,t);var e=t.t;var n=_this148.bindTemplate;_this148.set("isNavigationVisible",true);_this148.focusTracker=new kg();_this148.buttonPrevView=_this148._createButtonView(e("Previous"),qA);_this148.buttonNextView=_this148._createButtonView(e("Next"),WA);_this148.content=_this148.createCollection();_this148.setTemplate({tag:"div",attributes:{class:["ck","ck-balloon-rotator"],"z-index":"-1"},children:[{tag:"div",attributes:{class:["ck-balloon-rotator__navigation",n.to("isNavigationVisible",function(t){return t?"":"ck-hidden";})]},children:[_this148.buttonPrevView,{tag:"span",attributes:{class:["ck-balloon-rotator__counter"]},children:[{text:n.to("counter")}]},_this148.buttonNextView]},{tag:"div",attributes:{class:"ck-balloon-rotator__content"},children:_this148.content}]});return _this148;}_createClass(eC,[{key:"render",value:function render(){_get(_getPrototypeOf(eC.prototype),"render",this).call(this);this.focusTracker.add(this.element);}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(eC.prototype),"destroy",this).call(this);this.focusTracker.destroy();}},{key:"showView",value:function showView(t){this.hideView();this.content.add(t);}},{key:"hideView",value:function hideView(){this.content.clear();}},{key:"_createButtonView",value:function _createButtonView(t,e){var n=new B_(this.locale);n.set({label:t,icon:e,tooltip:true});return n;}}]);return eC;}(Fw);var nC=/*#__PURE__*/function(_Fw21){_inherits(nC,_Fw21);var _super79=_createSuper(nC);function nC(t,e){var _this149;_classCallCheck(this,nC);_this149=_super79.call(this,t);var n=_this149.bindTemplate;_this149.set("top",0);_this149.set("left",0);_this149.set("height",0);_this149.set("width",0);_this149.set("numberOfPanels",0);_this149.content=_this149.createCollection();_this149._balloonPanelView=e;_this149.setTemplate({tag:"div",attributes:{class:["ck-fake-panel",n.to("numberOfPanels",function(t){return t?"":"ck-hidden";})],style:{top:n.to("top",XA),left:n.to("left",XA),width:n.to("width",XA),height:n.to("height",XA)}},children:_this149.content});_this149.on("change:numberOfPanels",function(t,e,n,o){if(n>o){_this149._addPanels(n-o);}else{_this149._removePanels(o-n);}_this149.updatePosition();});return _this149;}_createClass(nC,[{key:"_addPanels",value:function _addPanels(t){while(t--){var _t229=new Fw();_t229.setTemplate({tag:"div"});this.content.add(_t229);this.registerChild(_t229);}}},{key:"_removePanels",value:function _removePanels(t){while(t--){var _t230=this.content.last;this.content.remove(_t230);this.deregisterChild(_t230);_t230.destroy();}}},{key:"updatePosition",value:function updatePosition(){if(this.numberOfPanels){var _this$_balloonPanelVi=this._balloonPanelView,_t231=_this$_balloonPanelVi.top,_e216=_this$_balloonPanelVi.left;var _Yf=new Yf(this._balloonPanelView.element),_n194=_Yf.width,_o124=_Yf.height;Object.assign(this,{top:_t231,left:_e216,width:_n194,height:_o124});}}}]);return nC;}(Fw);var oC=n(609);var iC={injectType:"singletonStyleTag",attributes:{"data-cke":true}};iC.insert="head";iC.singleton=true;var rC=Nh()(oC.Z,iC);var sC=oC.Z.locals||{};var aC=RA("px");var cC=/*#__PURE__*/function(_ref46){_inherits(cC,_ref46);var _super80=_createSuper(cC);function cC(t){var _this150;_classCallCheck(this,cC);_this150=_super80.call(this,t);var e=_this150.bindTemplate;_this150.set("isActive",false);_this150.set("isSticky",false);_this150.set("limiterElement",null);_this150.set("limiterBottomOffset",50);_this150.set("viewportTopOffset",0);_this150.set("_marginLeft",null);_this150.set("_isStickyToTheLimiter",false);_this150.set("_hasViewportTopOffset",false);_this150.content=_this150.createCollection();_this150._contentPanelPlaceholder=new Template({tag:"div",attributes:{class:["ck","ck-sticky-panel__placeholder"],style:{display:e.to("isSticky",function(t){return t?"block":"none";}),height:e.to("isSticky",function(t){return t?aC(_this150._panelRect.height):null;})}}}).render();_this150._contentPanel=new Template({tag:"div",attributes:{class:["ck","ck-sticky-panel__content",e.if("isSticky","ck-sticky-panel__content_sticky"),e.if("_isStickyToTheLimiter","ck-sticky-panel__content_sticky_bottom-limit")],style:{width:e.to("isSticky",function(t){return t?aC(_this150._contentPanelPlaceholder.getBoundingClientRect().width):null;}),top:e.to("_hasViewportTopOffset",function(t){return t?aC(_this150.viewportTopOffset):null;}),bottom:e.to("_isStickyToTheLimiter",function(t){return t?aC(_this150.limiterBottomOffset):null;}),marginLeft:e.to("_marginLeft")}},children:_this150.content}).render();_this150.setTemplate({tag:"div",attributes:{class:["ck","ck-sticky-panel"]},children:[_this150._contentPanelPlaceholder,_this150._contentPanel]});return _this150;}_createClass(cC,[{key:"render",value:function render(){var _this151=this;_get(_getPrototypeOf(cC.prototype),"render",this).call(this);this._checkIfShouldBeSticky();this.listenTo(global.window,"scroll",function(){_this151._checkIfShouldBeSticky();});this.listenTo(this,"change:isActive",function(){_this151._checkIfShouldBeSticky();});}},{key:"_checkIfShouldBeSticky",value:function _checkIfShouldBeSticky(){var t=this._panelRect=this._contentPanel.getBoundingClientRect();var e;if(!this.limiterElement){this.isSticky=false;}else{e=this._limiterRect=this.limiterElement.getBoundingClientRect();this.isSticky=this.isActive&&e.top<this.viewportTopOffset&&this._panelRect.height+this.limiterBottomOffset<e.height;}if(this.isSticky){this._isStickyToTheLimiter=e.bottom<t.height+this.limiterBottomOffset+this.viewportTopOffset;this._hasViewportTopOffset=!this._isStickyToTheLimiter&&!!this.viewportTopOffset;this._marginLeft=this._isStickyToTheLimiter?null:aC(-global.window.scrollX);}else{this._isStickyToTheLimiter=false;this._hasViewportTopOffset=false;this._marginLeft=null;}}}]);return cC;}(null&&View);function lC(_ref47){var t=_ref47.origin,e=_ref47.originKeystrokeHandler,n=_ref47.originFocusTracker,o=_ref47.toolbar,i=_ref47.beforeFocus,r=_ref47.afterBlur;n.add(o.element);e.set("Alt+F10",function(t,e){if(n.isFocused&&!o.focusTracker.isFocused){if(i){i();}o.focus();e();}});o.keystrokes.set("Esc",function(e,n){if(o.focusTracker.isFocused){t.focus();if(r){r();}n();}});}var dC=RA("px");var hC=/*#__PURE__*/function(_go2){_inherits(hC,_go2);var _super81=_createSuper(hC);function hC(t){var _this152;_classCallCheck(this,hC);_this152=_super81.call(this,t);_this152._balloonConfig=wv(t.config.get("balloonToolbar"));_this152.toolbarView=_this152._createToolbarView();_this152.focusTracker=new kg();t.ui.once("ready",function(){_this152.focusTracker.add(t.ui.getEditableElement());_this152.focusTracker.add(_this152.toolbarView.element);});_this152._resizeObserver=null;_this152._balloon=t.plugins.get(tC);_this152._fireSelectionChangeDebounced=Hf(function(){return _this152.fire("_selectionChangeDebounced");},200);_this152.decorate("show");return _this152;}_createClass(hC,[{key:"init",value:function init(){var _this153=this;var t=this.editor;var e=t.model.document.selection;this.listenTo(this.focusTracker,"change:isFocused",function(t,e,n){var o=_this153._balloon.visibleView===_this153.toolbarView;if(!n&&o){_this153.hide();}else if(n){_this153.show();}});this.listenTo(e,"change:range",function(t,n){if(n.directChange||e.isCollapsed){_this153.hide();}_this153._fireSelectionChangeDebounced();});this.listenTo(this,"_selectionChangeDebounced",function(){if(_this153.editor.editing.view.document.isFocused){_this153.show();}});if(!this._balloonConfig.shouldNotGroupWhenFull){this.listenTo(t,"ready",function(){var e=t.ui.view.editable.element;_this153._resizeObserver=new eg(e,function(){_this153.toolbarView.maxWidth=dC(new Yf(e).width*.9);});});}this.listenTo(this.toolbarView,"groupedItemsUpdate",function(){_this153._updatePosition();});}},{key:"afterInit",value:function afterInit(){var t=this.editor.ui.componentFactory;this.toolbarView.fillFromConfig(this._balloonConfig,t);}},{key:"_createToolbarView",value:function _createToolbarView(){var t=!this._balloonConfig.shouldNotGroupWhenFull;var e=new yv(this.editor.locale,{shouldGroupWhenFull:t,isFloating:true});e.render();return e;}},{key:"show",value:function show(){var _this154=this;var t=this.editor;var e=t.model.document.selection;var n=t.model.schema;if(this._balloon.hasView(this.toolbarView)){return;}if(e.isCollapsed){return;}if(uC(e,n)){return;}if(Array.from(this.toolbarView.items).every(function(t){return t.isEnabled!==undefined&&!t.isEnabled;})){return;}this.listenTo(this.editor.ui,"update",function(){_this154._updatePosition();});this._balloon.add({view:this.toolbarView,position:this._getBalloonPositionData(),balloonClassName:"ck-toolbar-container"});}},{key:"hide",value:function hide(){if(this._balloon.hasView(this.toolbarView)){this.stopListening(this.editor.ui,"update");this._balloon.remove(this.toolbarView);}}},{key:"_getBalloonPositionData",value:function _getBalloonPositionData(){var t=this.editor;var e=t.editing.view;var n=e.document;var o=n.selection;var i=n.selection.isBackward;return{target:function target(){var t=i?o.getFirstRange():o.getLastRange();var n=Yf.getDomRangeRects(e.domConverter.viewRangeToDom(t));if(i){return n[0];}else{if(n.length>1&&n[n.length-1].width===0){n.pop();}return n[n.length-1];}},positions:this._getBalloonPositions(i)};}},{key:"_updatePosition",value:function _updatePosition(){this._balloon.updatePosition(this._getBalloonPositionData());}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(hC.prototype),"destroy",this).call(this);this.stopListening();this._fireSelectionChangeDebounced.cancel();this.toolbarView.destroy();this.focusTracker.destroy();if(this._resizeObserver){this._resizeObserver.destroy();}}},{key:"_getBalloonPositions",value:function _getBalloonPositions(t){var e=Ed.isSafari&&Ed.isiOS;var n=e?jA({verticalOffset:Math.max(LA.arrowVerticalOffset,Math.round(20/Zh.window.visualViewport.scale))}):LA.defaultPositions;return t?[n.northWestArrowSouth,n.northWestArrowSouthWest,n.northWestArrowSouthEast,n.northWestArrowSouthMiddleEast,n.northWestArrowSouthMiddleWest,n.southWestArrowNorth,n.southWestArrowNorthWest,n.southWestArrowNorthEast,n.southWestArrowNorthMiddleWest,n.southWestArrowNorthMiddleEast]:[n.southEastArrowNorth,n.southEastArrowNorthEast,n.southEastArrowNorthWest,n.southEastArrowNorthMiddleEast,n.southEastArrowNorthMiddleWest,n.northEastArrowSouth,n.northEastArrowSouthEast,n.northEastArrowSouthWest,n.northEastArrowSouthMiddleEast,n.northEastArrowSouthMiddleWest];}}],[{key:"pluginName",get:function get(){return"BalloonToolbar";}},{key:"requires",get:function get(){return[tC];}}]);return hC;}(go);function uC(t,e){if(t.rangeCount===1){return false;}return _toConsumableArray(t.getRanges()).every(function(t){var n=t.getContainedElement();return n&&e.isSelectable(n);});}var fC=n(706);var gC={injectType:"singletonStyleTag",attributes:{"data-cke":true}};gC.insert="head";gC.singleton=true;var pC=Nh()(fC.Z,gC);var mC=fC.Z.locals||{};var kC=RA("px");var bC=/*#__PURE__*/function(_ref48){_inherits(bC,_ref48);var _super82=_createSuper(bC);function bC(t){var _this155;_classCallCheck(this,bC);_this155=_super82.call(this,t);var e=_this155.bindTemplate;_this155.isVisible=false;_this155.isToggleable=true;_this155.set("top",0);_this155.set("left",0);_this155.extendTemplate({attributes:{class:"ck-block-toolbar-button",style:{top:e.to("top",function(t){return kC(t);}),left:e.to("left",function(t){return kC(t);})}}});return _this155;}return _createClass(bC);}(null&&ButtonView);var wC=RA("px");var _C=/*#__PURE__*/function(_ref49){_inherits(_C,_ref49);var _super83=_createSuper(_C);function _C(t){var _this156;_classCallCheck(this,_C);_this156=_super83.call(this,t);_this156._blockToolbarConfig=normalizeToolbarConfig(_this156.editor.config.get("blockToolbar"));_this156.toolbarView=_this156._createToolbarView();_this156.panelView=_this156._createPanelView();_this156.buttonView=_this156._createButtonView();_this156._resizeObserver=null;clickOutsideHandler({emitter:_this156.panelView,contextElements:[_this156.panelView.element,_this156.buttonView.element],activator:function activator(){return _this156.panelView.isVisible;},callback:function callback(){return _this156._hidePanel();}});return _this156;}_createClass(_C,[{key:"init",value:function init(){var _this157=this;var t=this.editor;this.listenTo(t.model.document.selection,"change:range",function(t,e){if(e.directChange){_this157._hidePanel();}});this.listenTo(t.ui,"update",function(){return _this157._updateButton();});this.listenTo(t,"change:isReadOnly",function(){return _this157._updateButton();},{priority:"low"});this.listenTo(t.ui.focusTracker,"change:isFocused",function(){return _this157._updateButton();});this.listenTo(this.buttonView,"change:isVisible",function(t,e,n){if(n){_this157.buttonView.listenTo(window,"resize",function(){return _this157._updateButton();});}else{_this157.buttonView.stopListening(window,"resize");_this157._hidePanel();}});}},{key:"afterInit",value:function afterInit(){var _this158=this;var t=this.editor.ui.componentFactory;var e=this._blockToolbarConfig;this.toolbarView.fillFromConfig(e,t);var _iterator307=_createForOfIteratorHelper(this.toolbarView.items),_step307;try{for(_iterator307.s();!(_step307=_iterator307.n()).done;){var _t232=_step307.value;_t232.on("execute",function(){return _this158._hidePanel(true);},{priority:"high"});}}catch(err){_iterator307.e(err);}finally{_iterator307.f();}if(!e.shouldNotGroupWhenFull){this.listenTo(this.editor,"ready",function(){var t=_this158.editor.ui.view.editable.element;_this158._resizeObserver=new ResizeObserver(t,function(){_this158.toolbarView.maxWidth=_this158._getToolbarMaxWidth();});});}}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(_C.prototype),"destroy",this).call(this);this.panelView.destroy();this.buttonView.destroy();this.toolbarView.destroy();if(this._resizeObserver){this._resizeObserver.destroy();}}},{key:"_createToolbarView",value:function _createToolbarView(){var _this159=this;var t=!this._blockToolbarConfig.shouldNotGroupWhenFull;var e=new ToolbarView(this.editor.locale,{shouldGroupWhenFull:t,isFloating:true});e.focusTracker.on("change:isFocused",function(t,e,n){if(!n){_this159._hidePanel();}});return e;}},{key:"_createPanelView",value:function _createPanelView(){var _this160=this;var t=this.editor;var e=new BalloonPanelView(t.locale);e.content.add(this.toolbarView);e.class="ck-toolbar-container";t.ui.view.body.add(e);t.ui.focusTracker.add(e.element);this.toolbarView.keystrokes.set("Esc",function(t,e){_this160._hidePanel(true);e();});return e;}},{key:"_createButtonView",value:function _createButtonView(){var _this161=this;var t=this.editor;var e=t.t;var n=new BlockButtonView(t.locale);n.set({label:e("Edit block"),icon:pilcrow,withText:false});n.bind("isOn").to(this.panelView,"isVisible");n.bind("tooltip").to(this.panelView,"isVisible",function(t){return!t;});this.listenTo(n,"execute",function(){if(!_this161.panelView.isVisible){_this161._showPanel();}else{_this161._hidePanel(true);}});t.ui.view.body.add(n);t.ui.focusTracker.add(n.element);return n;}},{key:"_updateButton",value:function _updateButton(){var t=this.editor;var e=t.model;var n=t.editing.view;if(!t.ui.focusTracker.isFocused){this._hideButton();return;}if(t.isReadOnly){this._hideButton();return;}var o=Array.from(e.document.selection.getSelectedBlocks())[0];if(!o||Array.from(this.toolbarView.items).every(function(t){return!t.isEnabled;})){this._hideButton();return;}var i=n.domConverter.mapViewToDom(t.editing.mapper.toViewElement(o));this.buttonView.isVisible=true;this._attachButtonToElement(i);if(this.panelView.isVisible){this._showPanel();}}},{key:"_hideButton",value:function _hideButton(){this.buttonView.isVisible=false;}},{key:"_showPanel",value:function _showPanel(){var t=this.panelView.isVisible;this.panelView.show();this.toolbarView.maxWidth=this._getToolbarMaxWidth();this.panelView.pin({target:this.buttonView.element,limiter:this.editor.ui.getEditableElement()});if(!t){this.toolbarView.items.get(0).focus();}}},{key:"_hidePanel",value:function _hidePanel(t){this.panelView.isVisible=false;if(t){this.editor.editing.view.focus();}}},{key:"_attachButtonToElement",value:function _attachButtonToElement(t){var _this162=this;var e=window.getComputedStyle(t);var n=new Rect(this.editor.ui.getEditableElement());var o=parseInt(e.paddingTop,10);var i=parseInt(e.lineHeight,10)||parseInt(e.fontSize,10)*1.2;var r=getOptimalPosition({element:this.buttonView.element,target:t,positions:[function(t,e){var r;if(_this162.editor.locale.uiLanguageDirection==="ltr"){r=n.left-e.width;}else{r=n.right;}return{top:t.top+o+(i-e.height)/2,left:r};}]});this.buttonView.top=r.top;this.buttonView.left=r.left;}},{key:"_getToolbarMaxWidth",value:function _getToolbarMaxWidth(){var t=this.editor.ui.view.editable.element;var e=new Rect(t);var n=new Rect(this.buttonView.element);var o=this.editor.locale.uiLanguageDirection==="rtl";var i=o?n.left-e.right+n.width:e.left-n.left;return wC(e.width+i);}}],[{key:"pluginName",get:function get(){return"BlockToolbar";}}]);return _C;}(null&&Plugin);var vC=n(894);var AC={injectType:"singletonStyleTag",attributes:{"data-cke":true}};AC.insert="head";AC.singleton=true;var CC=Nh()(vC.Z,AC);var yC=vC.Z.locals||{};var xC=new WeakMap();function EC(t){var e=t.view,n=t.element,o=t.text,_t$isDirectHost=t.isDirectHost,i=_t$isDirectHost===void 0?true:_t$isDirectHost,_t$keepOnFocus=t.keepOnFocus,r=_t$keepOnFocus===void 0?false:_t$keepOnFocus;var s=e.document;if(!xC.has(s)){xC.set(s,new Map());s.registerPostFixer(function(t){return BC(s,t);});}xC.get(s).set(n,{text:o,isDirectHost:i,keepOnFocus:r,hostElement:i?n:null});e.change(function(t){return BC(s,t);});}function DC(t,e){var n=e.document;t.change(function(t){if(!xC.has(n)){return;}var o=xC.get(n);var i=o.get(e);t.removeAttribute("data-placeholder",i.hostElement);PC(t,i.hostElement);o.delete(e);});}function SC(t,e){if(!e.hasClass("ck-placeholder")){t.addClass("ck-placeholder",e);return true;}return false;}function PC(t,e){if(e.hasClass("ck-placeholder")){t.removeClass("ck-placeholder",e);return true;}return false;}function TC(t,e){if(!t.isAttached()){return false;}var n=Array.from(t.getChildren()).some(function(t){return!t.is("uiElement");});if(n){return false;}if(e){return true;}var o=t.document;if(!o.isFocused){return true;}var i=o.selection;var r=i.anchor;return r&&r.parent!==t;}function BC(t,e){var n=xC.get(t);var o=[];var i=false;var _iterator308=_createForOfIteratorHelper(n),_step308;try{for(_iterator308.s();!(_step308=_iterator308.n()).done;){var _step308$value=_slicedToArray(_step308.value,2),_t233=_step308$value[0],_r47=_step308$value[1];if(_r47.isDirectHost){o.push(_t233);if(IC(e,_t233,_r47)){i=true;}}}}catch(err){_iterator308.e(err);}finally{_iterator308.f();}var _iterator309=_createForOfIteratorHelper(n),_step309;try{for(_iterator309.s();!(_step309=_iterator309.n()).done;){var _step309$value=_slicedToArray(_step309.value,2),_t234=_step309$value[0],_r48=_step309$value[1];if(_r48.isDirectHost){continue;}var _n195=RC(_t234);if(!_n195){continue;}if(o.includes(_n195)){continue;}_r48.hostElement=_n195;if(IC(e,_t234,_r48)){i=true;}}}catch(err){_iterator309.e(err);}finally{_iterator309.f();}return i;}function IC(t,e,n){var o=n.text,i=n.isDirectHost,r=n.hostElement;var s=false;if(r.getAttribute("data-placeholder")!==o){t.setAttribute("data-placeholder",o,r);s=true;}var a=i||e.childCount==1;if(a&&TC(r,n.keepOnFocus)){if(SC(t,r)){s=true;}}else if(PC(t,r)){s=true;}return s;}function RC(t){if(t.childCount){var _e217=t.getChild(0);if(_e217.is("element")&&!_e217.is("uiElement")&&!_e217.is("attributeElement")){return _e217;}}return null;}var OC=new Map();function zC(t,e,n){var o=OC.get(t);if(!o){o=new Map();OC.set(t,o);}o.set(e,n);}function MC(t,e){var n=OC.get(t);if(n&&n.has(e)){return n.get(e);}return NC;}function NC(t){return[t];}function FC(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var o=MC(t.constructor,e.constructor);try{t=t.clone();return o(t,e,n);}catch(t){throw t;}}function VC(t,e,n){t=t.slice();e=e.slice();var o=new LC(n.document,n.useRelations,n.forceWeakRemove);o.setOriginalOperations(t);o.setOriginalOperations(e);var i=o.originalOperations;if(t.length==0||e.length==0){return{operationsA:t,operationsB:e,originalOperations:i};}var r=new WeakMap();var _iterator310=_createForOfIteratorHelper(t),_step310;try{for(_iterator310.s();!(_step310=_iterator310.n()).done;){var _e219=_step310.value;r.set(_e219,0);}}catch(err){_iterator310.e(err);}finally{_iterator310.f();}var s={nextBaseVersionA:t[t.length-1].baseVersion+1,nextBaseVersionB:e[e.length-1].baseVersion+1,originalOperationsACount:t.length,originalOperationsBCount:e.length};var a=0;while(a<t.length){var _t235,_e218;var _n196=t[a];var _i108=r.get(_n196);if(_i108==e.length){a++;continue;}var _s23=e[_i108];var _c7=FC(_n196,_s23,o.getContext(_n196,_s23,true));var _l3=FC(_s23,_n196,o.getContext(_s23,_n196,false));o.updateRelation(_n196,_s23);o.setOriginalOperations(_c7,_n196);o.setOriginalOperations(_l3,_s23);var _iterator311=_createForOfIteratorHelper(_c7),_step311;try{for(_iterator311.s();!(_step311=_iterator311.n()).done;){var _t236=_step311.value;r.set(_t236,_i108+_l3.length);}}catch(err){_iterator311.e(err);}finally{_iterator311.f();}(_t235=t).splice.apply(_t235,[a,1].concat(_toConsumableArray(_c7)));(_e218=e).splice.apply(_e218,[_i108,1].concat(_toConsumableArray(_l3)));}if(n.padWithNoOps){var _n197=t.length-s.originalOperationsACount;var _o125=e.length-s.originalOperationsBCount;jC(t,_o125-_n197);jC(e,_n197-_o125);}HC(t,s.nextBaseVersionB);HC(e,s.nextBaseVersionA);return{operationsA:t,operationsB:e,originalOperations:i};}var LC=/*#__PURE__*/function(){function LC(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;_classCallCheck(this,LC);this.originalOperations=new Map();this._history=t.history;this._useRelations=e;this._forceWeakRemove=!!n;this._relations=new Map();}_createClass(LC,[{key:"setOriginalOperations",value:function setOriginalOperations(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var n=e?this.originalOperations.get(e):null;var _iterator312=_createForOfIteratorHelper(t),_step312;try{for(_iterator312.s();!(_step312=_iterator312.n()).done;){var _e220=_step312.value;this.originalOperations.set(_e220,n||_e220);}}catch(err){_iterator312.e(err);}finally{_iterator312.f();}}},{key:"updateRelation",value:function updateRelation(t,e){switch(t.constructor){case kk:{switch(e.constructor){case Ak:{if(t.targetPosition.isEqual(e.sourcePosition)||e.movedRange.containsPosition(t.targetPosition)){this._setRelation(t,e,"insertAtSource");}else if(t.targetPosition.isEqual(e.deletionPosition)){this._setRelation(t,e,"insertBetween");}else if(t.targetPosition.isAfter(e.sourcePosition)){this._setRelation(t,e,"moveTargetAfter");}break;}case kk:{if(t.targetPosition.isEqual(e.sourcePosition)||t.targetPosition.isBefore(e.sourcePosition)){this._setRelation(t,e,"insertBefore");}else{this._setRelation(t,e,"insertAfter");}break;}}break;}case Ck:{switch(e.constructor){case Ak:{if(t.splitPosition.isBefore(e.sourcePosition)){this._setRelation(t,e,"splitBefore");}break;}case kk:{if(t.splitPosition.isEqual(e.sourcePosition)||t.splitPosition.isBefore(e.sourcePosition)){this._setRelation(t,e,"splitBefore");}else{var _n198=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);if(t.splitPosition.hasSameParentAs(e.sourcePosition)&&_n198.containsPosition(t.splitPosition)){var _o126=_n198.end.offset-t.splitPosition.offset;var _i109=t.splitPosition.offset-_n198.start.offset;this._setRelation(t,e,{howMany:_o126,offset:_i109});}}}}break;}case Ak:{switch(e.constructor){case Ak:{if(!t.targetPosition.isEqual(e.sourcePosition)){this._setRelation(t,e,"mergeTargetNotMoved");}if(t.sourcePosition.isEqual(e.targetPosition)){this._setRelation(t,e,"mergeSourceNotMoved");}if(t.sourcePosition.isEqual(e.sourcePosition)){this._setRelation(t,e,"mergeSameElement");}break;}case Ck:{if(t.sourcePosition.isEqual(e.splitPosition)){this._setRelation(t,e,"splitAtSource");}}}break;}case wk:{var _n199=t.newRange;if(!_n199){return;}switch(e.constructor){case kk:{var _o127=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);var _i110=_o127.containsPosition(_n199.start)||_o127.start.isEqual(_n199.start);var _r49=_o127.containsPosition(_n199.end)||_o127.end.isEqual(_n199.end);if((_i110||_r49)&&!_o127.containsRange(_n199)){this._setRelation(t,e,{side:_i110?"left":"right",path:_i110?_n199.start.path.slice():_n199.end.path.slice()});}break;}case Ak:{var _o128=_n199.start.isEqual(e.targetPosition);var _i111=_n199.start.isEqual(e.deletionPosition);var _r50=_n199.end.isEqual(e.deletionPosition);var _s24=_n199.end.isEqual(e.sourcePosition);if(_o128||_i111||_r50||_s24){this._setRelation(t,e,{wasInLeftElement:_o128,wasStartBeforeMergedElement:_i111,wasEndBeforeMergedElement:_r50,wasInRightElement:_s24});}break;}}break;}}}},{key:"getContext",value:function getContext(t,e,n){return{aIsStrong:n,aWasUndone:this._wasUndone(t),bWasUndone:this._wasUndone(e),abRelation:this._useRelations?this._getRelation(t,e):null,baRelation:this._useRelations?this._getRelation(e,t):null,forceWeakRemove:this._forceWeakRemove};}},{key:"_wasUndone",value:function _wasUndone(t){var e=this.originalOperations.get(t);return e.wasUndone||this._history.isUndoneOperation(e);}},{key:"_getRelation",value:function _getRelation(t,e){var n=this.originalOperations.get(e);var o=this._history.getUndoneOperation(n);if(!o){return null;}var i=this.originalOperations.get(t);var r=this._relations.get(i);if(r){return r.get(o)||null;}return null;}},{key:"_setRelation",value:function _setRelation(t,e,n){var o=this.originalOperations.get(t);var i=this.originalOperations.get(e);var r=this._relations.get(o);if(!r){r=new Map();this._relations.set(o,r);}r.set(i,n);}}]);return LC;}();function HC(t,e){var _iterator313=_createForOfIteratorHelper(t),_step313;try{for(_iterator313.s();!(_step313=_iterator313.n()).done;){var _n200=_step313.value;_n200.baseVersion=e++;}}catch(err){_iterator313.e(err);}finally{_iterator313.f();}}function jC(t,e){for(var _n201=0;_n201<e;_n201++){t.push(new Jk(0));}}zC(pk,pk,function(t,e,n){if(t.key===e.key&&t.range.start.hasSameParentAs(e.range.start)){var _o129=t.range.getDifference(e.range).map(function(e){return new pk(e,t.key,t.oldValue,t.newValue,0);});var _i112=t.range.getIntersection(e.range);if(_i112){if(n.aIsStrong){_o129.push(new pk(_i112,e.key,e.newValue,t.newValue,0));}}if(_o129.length==0){return[new Jk(0)];}return _o129;}else{return[t];}});zC(pk,bk,function(t,e){if(t.range.start.hasSameParentAs(e.position)&&t.range.containsPosition(e.position)){var _n202=t.range._getTransformedByInsertion(e.position,e.howMany,!e.shouldReceiveAttributes);var _o130=_n202.map(function(e){return new pk(e,t.key,t.oldValue,t.newValue,t.baseVersion);});if(e.shouldReceiveAttributes){var _n203=qC(e,t.key,t.oldValue);if(_n203){_o130.unshift(_n203);}}return _o130;}t.range=t.range._getTransformedByInsertion(e.position,e.howMany,false)[0];return[t];});function qC(t,e,n){var o=t.nodes;var i=o.getNode(0).getAttribute(e);if(i==n){return null;}var r=new Og(t.position,t.position.getShiftedBy(t.howMany));return new pk(r,e,i,n,0);}zC(pk,Ak,function(t,e){var n=[];if(t.range.start.hasSameParentAs(e.deletionPosition)){if(t.range.containsPosition(e.deletionPosition)||t.range.start.isEqual(e.deletionPosition)){n.push(Og._createFromPositionAndShift(e.graveyardPosition,1));}}var o=t.range._getTransformedByMergeOperation(e);if(!o.isCollapsed){n.push(o);}return n.map(function(e){return new pk(e,t.key,t.oldValue,t.newValue,t.baseVersion);});});zC(pk,kk,function(t,e){var n=WC(t.range,e);return n.map(function(e){return new pk(e,t.key,t.oldValue,t.newValue,t.baseVersion);});});function WC(t,e){var n=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);var o=null;var i=[];if(n.containsRange(t,true)){o=t;}else if(t.start.hasSameParentAs(n.start)){i=t.getDifference(n);o=t.getIntersection(n);}else{i=[t];}var r=[];var _iterator314=_createForOfIteratorHelper(i),_step314;try{for(_iterator314.s();!(_step314=_iterator314.n()).done;){var _t237=_step314.value;_t237=_t237._getTransformedByDeletion(e.sourcePosition,e.howMany);var _n204=e.getMovedRangeStart();var _o131=_t237.start.hasSameParentAs(_n204);_t237=_t237._getTransformedByInsertion(_n204,e.howMany,_o131);r.push.apply(r,_toConsumableArray(_t237));}}catch(err){_iterator314.e(err);}finally{_iterator314.f();}if(o){r.push(o._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany,false)[0]);}return r;}zC(pk,Ck,function(t,e){if(t.range.end.isEqual(e.insertionPosition)){if(!e.graveyardPosition){t.range.end.offset++;}return[t];}if(t.range.start.hasSameParentAs(e.splitPosition)&&t.range.containsPosition(e.splitPosition)){var _n205=t.clone();_n205.range=new Og(e.moveTargetPosition.clone(),t.range.end._getCombined(e.splitPosition,e.moveTargetPosition));t.range.end=e.splitPosition.clone();t.range.end.stickiness="toPrevious";return[t,_n205];}t.range=t.range._getTransformedBySplitOperation(e);return[t];});zC(bk,pk,function(t,e){var n=[t];if(t.shouldReceiveAttributes&&t.position.hasSameParentAs(e.range.start)&&e.range.containsPosition(t.position)){var _o132=qC(t,e.key,e.newValue);if(_o132){n.push(_o132);}}return n;});zC(bk,bk,function(t,e,n){if(t.position.isEqual(e.position)&&n.aIsStrong){return[t];}t.position=t.position._getTransformedByInsertOperation(e);return[t];});zC(bk,kk,function(t,e){t.position=t.position._getTransformedByMoveOperation(e);return[t];});zC(bk,Ck,function(t,e){t.position=t.position._getTransformedBySplitOperation(e);return[t];});zC(bk,Ak,function(t,e){t.position=t.position._getTransformedByMergeOperation(e);return[t];});zC(wk,bk,function(t,e){if(t.oldRange){t.oldRange=t.oldRange._getTransformedByInsertOperation(e)[0];}if(t.newRange){t.newRange=t.newRange._getTransformedByInsertOperation(e)[0];}return[t];});zC(wk,wk,function(t,e,n){if(t.name==e.name){if(n.aIsStrong){t.oldRange=e.newRange?e.newRange.clone():null;}else{return[new Jk(0)];}}return[t];});zC(wk,Ak,function(t,e){if(t.oldRange){t.oldRange=t.oldRange._getTransformedByMergeOperation(e);}if(t.newRange){t.newRange=t.newRange._getTransformedByMergeOperation(e);}return[t];});zC(wk,kk,function(t,e,n){if(t.oldRange){t.oldRange=Og._createFromRanges(t.oldRange._getTransformedByMoveOperation(e));}if(t.newRange){if(n.abRelation){var _o133=Og._createFromRanges(t.newRange._getTransformedByMoveOperation(e));if(n.abRelation.side=="left"&&e.targetPosition.isEqual(t.newRange.start)){t.newRange.start.path=n.abRelation.path;t.newRange.end=_o133.end;return[t];}else if(n.abRelation.side=="right"&&e.targetPosition.isEqual(t.newRange.end)){t.newRange.start=_o133.start;t.newRange.end.path=n.abRelation.path;return[t];}}t.newRange=Og._createFromRanges(t.newRange._getTransformedByMoveOperation(e));}return[t];});zC(wk,Ck,function(t,e,n){if(t.oldRange){t.oldRange=t.oldRange._getTransformedBySplitOperation(e);}if(t.newRange){if(n.abRelation){var _o134=t.newRange._getTransformedBySplitOperation(e);if(t.newRange.start.isEqual(e.splitPosition)&&n.abRelation.wasStartBeforeMergedElement){t.newRange.start=Tg._createAt(e.insertionPosition);}else if(t.newRange.start.isEqual(e.splitPosition)&&!n.abRelation.wasInLeftElement){t.newRange.start=Tg._createAt(e.moveTargetPosition);}if(t.newRange.end.isEqual(e.splitPosition)&&n.abRelation.wasInRightElement){t.newRange.end=Tg._createAt(e.moveTargetPosition);}else if(t.newRange.end.isEqual(e.splitPosition)&&n.abRelation.wasEndBeforeMergedElement){t.newRange.end=Tg._createAt(e.insertionPosition);}else{t.newRange.end=_o134.end;}return[t];}t.newRange=t.newRange._getTransformedBySplitOperation(e);}return[t];});zC(Ak,bk,function(t,e){if(t.sourcePosition.hasSameParentAs(e.position)){t.howMany+=e.howMany;}t.sourcePosition=t.sourcePosition._getTransformedByInsertOperation(e);t.targetPosition=t.targetPosition._getTransformedByInsertOperation(e);return[t];});zC(Ak,Ak,function(t,e,n){if(t.sourcePosition.isEqual(e.sourcePosition)&&t.targetPosition.isEqual(e.targetPosition)){if(!n.bWasUndone){return[new Jk(0)];}else{var _n206=e.graveyardPosition.path.slice();_n206.push(0);t.sourcePosition=new Tg(e.graveyardPosition.root,_n206);t.howMany=0;return[t];}}if(t.sourcePosition.isEqual(e.sourcePosition)&&!t.targetPosition.isEqual(e.targetPosition)&&!n.bWasUndone&&n.abRelation!="splitAtSource"){var _o135=t.targetPosition.root.rootName=="$graveyard";var _i113=e.targetPosition.root.rootName=="$graveyard";var _r51=_o135&&!_i113;var _s25=_i113&&!_o135;var _a15=_s25||!_r51&&n.aIsStrong;if(_a15){var _n207=e.targetPosition._getTransformedByMergeOperation(e);var _o136=t.targetPosition._getTransformedByMergeOperation(e);return[new kk(_n207,t.howMany,_o136,0)];}else{return[new Jk(0)];}}if(t.sourcePosition.hasSameParentAs(e.targetPosition)){t.howMany+=e.howMany;}t.sourcePosition=t.sourcePosition._getTransformedByMergeOperation(e);t.targetPosition=t.targetPosition._getTransformedByMergeOperation(e);if(!t.graveyardPosition.isEqual(e.graveyardPosition)||!n.aIsStrong){t.graveyardPosition=t.graveyardPosition._getTransformedByMergeOperation(e);}return[t];});zC(Ak,kk,function(t,e,n){var o=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);if(e.type=="remove"&&!n.bWasUndone&&!n.forceWeakRemove){if(t.deletionPosition.hasSameParentAs(e.sourcePosition)&&o.containsPosition(t.sourcePosition)){return[new Jk(0)];}}if(t.sourcePosition.hasSameParentAs(e.targetPosition)){t.howMany+=e.howMany;}if(t.sourcePosition.hasSameParentAs(e.sourcePosition)){t.howMany-=e.howMany;}t.sourcePosition=t.sourcePosition._getTransformedByMoveOperation(e);t.targetPosition=t.targetPosition._getTransformedByMoveOperation(e);if(!t.graveyardPosition.isEqual(e.targetPosition)){t.graveyardPosition=t.graveyardPosition._getTransformedByMoveOperation(e);}return[t];});zC(Ak,Ck,function(t,e,n){if(e.graveyardPosition){t.graveyardPosition=t.graveyardPosition._getTransformedByDeletion(e.graveyardPosition,1);if(t.deletionPosition.isEqual(e.graveyardPosition)){t.howMany=e.howMany;}}if(t.targetPosition.isEqual(e.splitPosition)){var _o137=e.howMany!=0;var _i114=e.graveyardPosition&&t.deletionPosition.isEqual(e.graveyardPosition);if(_o137||_i114||n.abRelation=="mergeTargetNotMoved"){t.sourcePosition=t.sourcePosition._getTransformedBySplitOperation(e);return[t];}}if(t.sourcePosition.isEqual(e.splitPosition)){if(n.abRelation=="mergeSourceNotMoved"){t.howMany=0;t.targetPosition=t.targetPosition._getTransformedBySplitOperation(e);return[t];}if(n.abRelation=="mergeSameElement"||t.sourcePosition.offset>0){t.sourcePosition=e.moveTargetPosition.clone();t.targetPosition=t.targetPosition._getTransformedBySplitOperation(e);return[t];}}if(t.sourcePosition.hasSameParentAs(e.splitPosition)){t.howMany=e.splitPosition.offset;}t.sourcePosition=t.sourcePosition._getTransformedBySplitOperation(e);t.targetPosition=t.targetPosition._getTransformedBySplitOperation(e);return[t];});zC(kk,bk,function(t,e){var n=Og._createFromPositionAndShift(t.sourcePosition,t.howMany);var o=n._getTransformedByInsertOperation(e,false)[0];t.sourcePosition=o.start;t.howMany=o.end.offset-o.start.offset;if(!t.targetPosition.isEqual(e.position)){t.targetPosition=t.targetPosition._getTransformedByInsertOperation(e);}return[t];});zC(kk,kk,function(t,e,n){var o=Og._createFromPositionAndShift(t.sourcePosition,t.howMany);var i=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);var r=n.aIsStrong;var s=!n.aIsStrong;if(n.abRelation=="insertBefore"||n.baRelation=="insertAfter"){s=true;}else if(n.abRelation=="insertAfter"||n.baRelation=="insertBefore"){s=false;}var a;if(t.targetPosition.isEqual(e.targetPosition)&&s){a=t.targetPosition._getTransformedByDeletion(e.sourcePosition,e.howMany);}else{a=t.targetPosition._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany);}if(KC(t,e)&&KC(e,t)){return[e.getReversed()];}var c=o.containsPosition(e.targetPosition);if(c&&o.containsRange(i,true)){o.start=o.start._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany);o.end=o.end._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany);return GC([o],a);}var l=i.containsPosition(t.targetPosition);if(l&&i.containsRange(o,true)){o.start=o.start._getCombined(e.sourcePosition,e.getMovedRangeStart());o.end=o.end._getCombined(e.sourcePosition,e.getMovedRangeStart());return GC([o],a);}var d=lc(t.sourcePosition.getParentPath(),e.sourcePosition.getParentPath());if(d=="prefix"||d=="extension"){o.start=o.start._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany);o.end=o.end._getTransformedByMove(e.sourcePosition,e.targetPosition,e.howMany);return GC([o],a);}if(t.type=="remove"&&e.type!="remove"&&!n.aWasUndone&&!n.forceWeakRemove){r=true;}else if(t.type!="remove"&&e.type=="remove"&&!n.bWasUndone&&!n.forceWeakRemove){r=false;}var h=[];var u=o.getDifference(i);var _iterator315=_createForOfIteratorHelper(u),_step315;try{for(_iterator315.s();!(_step315=_iterator315.n()).done;){var _t238=_step315.value;_t238.start=_t238.start._getTransformedByDeletion(e.sourcePosition,e.howMany);_t238.end=_t238.end._getTransformedByDeletion(e.sourcePosition,e.howMany);var _n208=lc(_t238.start.getParentPath(),e.getMovedRangeStart().getParentPath())=="same";var _o138=_t238._getTransformedByInsertion(e.getMovedRangeStart(),e.howMany,_n208);h.push.apply(h,_toConsumableArray(_o138));}}catch(err){_iterator315.e(err);}finally{_iterator315.f();}var f=o.getIntersection(i);if(f!==null&&r){f.start=f.start._getCombined(e.sourcePosition,e.getMovedRangeStart());f.end=f.end._getCombined(e.sourcePosition,e.getMovedRangeStart());if(h.length===0){h.push(f);}else if(h.length==1){if(i.start.isBefore(o.start)||i.start.isEqual(o.start)){h.unshift(f);}else{h.push(f);}}else{h.splice(1,0,f);}}if(h.length===0){return[new Jk(t.baseVersion)];}return GC(h,a);});zC(kk,Ck,function(t,e,n){var o=t.targetPosition.clone();if(!t.targetPosition.isEqual(e.insertionPosition)||!e.graveyardPosition||n.abRelation=="moveTargetAfter"){o=t.targetPosition._getTransformedBySplitOperation(e);}var i=Og._createFromPositionAndShift(t.sourcePosition,t.howMany);if(i.end.isEqual(e.insertionPosition)){if(!e.graveyardPosition){t.howMany++;}t.targetPosition=o;return[t];}if(i.start.hasSameParentAs(e.splitPosition)&&i.containsPosition(e.splitPosition)){var _t239=new Og(e.splitPosition,i.end);_t239=_t239._getTransformedBySplitOperation(e);var _n209=[new Og(i.start,e.splitPosition),_t239];return GC(_n209,o);}if(t.targetPosition.isEqual(e.splitPosition)&&n.abRelation=="insertAtSource"){o=e.moveTargetPosition;}if(t.targetPosition.isEqual(e.insertionPosition)&&n.abRelation=="insertBetween"){o=t.targetPosition;}var r=i._getTransformedBySplitOperation(e);var s=[r];if(e.graveyardPosition){var _o139=i.start.isEqual(e.graveyardPosition)||i.containsPosition(e.graveyardPosition);if(t.howMany>1&&_o139&&!n.aWasUndone){s.push(Og._createFromPositionAndShift(e.insertionPosition,1));}}return GC(s,o);});zC(kk,Ak,function(t,e,n){var o=Og._createFromPositionAndShift(t.sourcePosition,t.howMany);if(e.deletionPosition.hasSameParentAs(t.sourcePosition)&&o.containsPosition(e.sourcePosition)){if(t.type=="remove"&&!n.forceWeakRemove){if(!n.aWasUndone){var _n210=[];var _o140=e.graveyardPosition.clone();var _i115=e.targetPosition._getTransformedByMergeOperation(e);if(t.howMany>1){_n210.push(new kk(t.sourcePosition,t.howMany-1,t.targetPosition,0));_o140=_o140._getTransformedByMove(t.sourcePosition,t.targetPosition,t.howMany-1);_i115=_i115._getTransformedByMove(t.sourcePosition,t.targetPosition,t.howMany-1);}var _r52=e.deletionPosition._getCombined(t.sourcePosition,t.targetPosition);var _s26=new kk(_o140,1,_r52,0);var _a16=_s26.getMovedRangeStart().path.slice();_a16.push(0);var _c8=new Tg(_s26.targetPosition.root,_a16);_i115=_i115._getTransformedByMove(_o140,_r52,1);var _l4=new kk(_i115,e.howMany,_c8,0);_n210.push(_s26);_n210.push(_l4);return _n210;}}else{if(t.howMany==1){if(!n.bWasUndone){return[new Jk(0)];}else{t.sourcePosition=e.graveyardPosition.clone();t.targetPosition=t.targetPosition._getTransformedByMergeOperation(e);return[t];}}}}var i=Og._createFromPositionAndShift(t.sourcePosition,t.howMany);var r=i._getTransformedByMergeOperation(e);t.sourcePosition=r.start;t.howMany=r.end.offset-r.start.offset;t.targetPosition=t.targetPosition._getTransformedByMergeOperation(e);return[t];});zC(_k,bk,function(t,e){t.position=t.position._getTransformedByInsertOperation(e);return[t];});zC(_k,Ak,function(t,e){if(t.position.isEqual(e.deletionPosition)){t.position=e.graveyardPosition.clone();t.position.stickiness="toNext";return[t];}t.position=t.position._getTransformedByMergeOperation(e);return[t];});zC(_k,kk,function(t,e){t.position=t.position._getTransformedByMoveOperation(e);return[t];});zC(_k,_k,function(t,e,n){if(t.position.isEqual(e.position)){if(n.aIsStrong){t.oldName=e.newName;}else{return[new Jk(0)];}}return[t];});zC(_k,Ck,function(t,e){var n=t.position.path;var o=e.splitPosition.getParentPath();if(lc(n,o)=="same"&&!e.graveyardPosition){var _e221=new _k(t.position.getShiftedBy(1),t.oldName,t.newName,0);return[t,_e221];}t.position=t.position._getTransformedBySplitOperation(e);return[t];});zC(vk,vk,function(t,e,n){if(t.root===e.root&&t.key===e.key){if(!n.aIsStrong||t.newValue===e.newValue){return[new Jk(0)];}else{t.oldValue=e.newValue;}}return[t];});zC(Ck,bk,function(t,e){if(t.splitPosition.hasSameParentAs(e.position)&&t.splitPosition.offset<e.position.offset){t.howMany+=e.howMany;}t.splitPosition=t.splitPosition._getTransformedByInsertOperation(e);t.insertionPosition=t.insertionPosition._getTransformedByInsertOperation(e);return[t];});zC(Ck,Ak,function(t,e,n){if(!t.graveyardPosition&&!n.bWasUndone&&t.splitPosition.hasSameParentAs(e.sourcePosition)){var _n211=e.graveyardPosition.path.slice();_n211.push(0);var _o141=new Tg(e.graveyardPosition.root,_n211);var _i116=Ck.getInsertionPosition(new Tg(e.graveyardPosition.root,_n211));var _r53=new Ck(_o141,0,_i116,null,0);t.splitPosition=t.splitPosition._getTransformedByMergeOperation(e);t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);t.graveyardPosition=_r53.insertionPosition.clone();t.graveyardPosition.stickiness="toNext";return[_r53,t];}if(t.splitPosition.hasSameParentAs(e.deletionPosition)&&!t.splitPosition.isAfter(e.deletionPosition)){t.howMany--;}if(t.splitPosition.hasSameParentAs(e.targetPosition)){t.howMany+=e.howMany;}t.splitPosition=t.splitPosition._getTransformedByMergeOperation(e);t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);if(t.graveyardPosition){t.graveyardPosition=t.graveyardPosition._getTransformedByMergeOperation(e);}return[t];});zC(Ck,kk,function(t,e,n){var o=Og._createFromPositionAndShift(e.sourcePosition,e.howMany);if(t.graveyardPosition){var _i117=o.start.isEqual(t.graveyardPosition)||o.containsPosition(t.graveyardPosition);if(!n.bWasUndone&&_i117){var _n212=t.splitPosition._getTransformedByMoveOperation(e);var _o142=t.graveyardPosition._getTransformedByMoveOperation(e);var _i118=_o142.path.slice();_i118.push(0);var _r54=new Tg(_o142.root,_i118);var _s27=new kk(_n212,t.howMany,_r54,0);return[_s27];}t.graveyardPosition=t.graveyardPosition._getTransformedByMoveOperation(e);}var i=t.splitPosition.isEqual(e.targetPosition);if(i&&(n.baRelation=="insertAtSource"||n.abRelation=="splitBefore")){t.howMany+=e.howMany;t.splitPosition=t.splitPosition._getTransformedByDeletion(e.sourcePosition,e.howMany);t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);return[t];}if(i&&n.abRelation&&n.abRelation.howMany){var _n$abRelation=n.abRelation,_e222=_n$abRelation.howMany,_o143=_n$abRelation.offset;t.howMany+=_e222;t.splitPosition=t.splitPosition.getShiftedBy(_o143);return[t];}if(t.splitPosition.hasSameParentAs(e.sourcePosition)&&o.containsPosition(t.splitPosition)){var _n213=e.howMany-(t.splitPosition.offset-e.sourcePosition.offset);t.howMany-=_n213;if(t.splitPosition.hasSameParentAs(e.targetPosition)&&t.splitPosition.offset<e.targetPosition.offset){t.howMany+=e.howMany;}t.splitPosition=e.sourcePosition.clone();t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);return[t];}if(!e.sourcePosition.isEqual(e.targetPosition)){if(t.splitPosition.hasSameParentAs(e.sourcePosition)&&t.splitPosition.offset<=e.sourcePosition.offset){t.howMany-=e.howMany;}if(t.splitPosition.hasSameParentAs(e.targetPosition)&&t.splitPosition.offset<e.targetPosition.offset){t.howMany+=e.howMany;}}t.splitPosition.stickiness="toNone";t.splitPosition=t.splitPosition._getTransformedByMoveOperation(e);t.splitPosition.stickiness="toNext";if(t.graveyardPosition){t.insertionPosition=t.insertionPosition._getTransformedByMoveOperation(e);}else{t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);}return[t];});zC(Ck,Ck,function(t,e,n){if(t.splitPosition.isEqual(e.splitPosition)){if(!t.graveyardPosition&&!e.graveyardPosition){return[new Jk(0)];}if(t.graveyardPosition&&e.graveyardPosition&&t.graveyardPosition.isEqual(e.graveyardPosition)){return[new Jk(0)];}if(n.abRelation=="splitBefore"){t.howMany=0;t.graveyardPosition=t.graveyardPosition._getTransformedBySplitOperation(e);return[t];}}if(t.graveyardPosition&&e.graveyardPosition&&t.graveyardPosition.isEqual(e.graveyardPosition)){var _o144=t.splitPosition.root.rootName=="$graveyard";var _i119=e.splitPosition.root.rootName=="$graveyard";var _r55=_o144&&!_i119;var _s28=_i119&&!_o144;var _a17=_s28||!_r55&&n.aIsStrong;if(_a17){var _n214=[];if(e.howMany){_n214.push(new kk(e.moveTargetPosition,e.howMany,e.splitPosition,0));}if(t.howMany){_n214.push(new kk(t.splitPosition,t.howMany,t.moveTargetPosition,0));}return _n214;}else{return[new Jk(0)];}}if(t.graveyardPosition){t.graveyardPosition=t.graveyardPosition._getTransformedBySplitOperation(e);}if(t.splitPosition.isEqual(e.insertionPosition)&&n.abRelation=="splitBefore"){t.howMany++;return[t];}if(e.splitPosition.isEqual(t.insertionPosition)&&n.baRelation=="splitBefore"){var _n215=e.insertionPosition.path.slice();_n215.push(0);var _o145=new Tg(e.insertionPosition.root,_n215);var _i120=new kk(t.insertionPosition,1,_o145,0);return[t,_i120];}if(t.splitPosition.hasSameParentAs(e.splitPosition)&&t.splitPosition.offset<e.splitPosition.offset){t.howMany-=e.howMany;}t.splitPosition=t.splitPosition._getTransformedBySplitOperation(e);t.insertionPosition=Ck.getInsertionPosition(t.splitPosition);return[t];});function KC(t,e){return t.targetPosition._getTransformedByDeletion(e.sourcePosition,e.howMany)===null;}function GC(t,e){var n=[];for(var _o146=0;_o146<t.length;_o146++){var _i121=t[_o146];var _r56=new kk(_i121.start,_i121.end.offset-_i121.start.offset,e,0);n.push(_r56);for(var _e223=_o146+1;_e223<t.length;_e223++){t[_e223]=t[_e223]._getTransformedByMove(_r56.sourcePosition,_r56.targetPosition,_r56.howMany)[0];}e=e._getTransformedByMove(_r56.sourcePosition,_r56.targetPosition,_r56.howMany);}return n;}var $C=/*#__PURE__*/function(_ref50){_inherits($C,_ref50);var _super84=_createSuper($C);function $C(t){var _this163;_classCallCheck(this,$C);_this163=_super84.call(this,t);_this163.domEventType="click";return _this163;}_createClass($C,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t);}}]);return $C;}(null&&DomEventObserver);var UC=/*#__PURE__*/function(_f6){_inherits(UC,_f6);var _super85=_createSuper(UC);function UC(t){var _this164;_classCallCheck(this,UC);_this164=_super85.call(this,t);_this164.domEventType=["mousedown","mouseup","mouseover","mouseout"];return _this164;}_createClass(UC,[{key:"onDomEvent",value:function onDomEvent(t){this.fire(t.type,t);}}]);return UC;}(_f);var JC=/*#__PURE__*/function(){function JC(t){_classCallCheck(this,JC);this.document=t;}_createClass(JC,[{key:"createDocumentFragment",value:function createDocumentFragment(t){return new th(this.document,t);}},{key:"createElement",value:function createElement(t,e,n){return new Gl(this.document,t,e,n);}},{key:"createText",value:function createText(t){return new gc(this.document,t);}},{key:"clone",value:function clone(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return t._clone(e);}},{key:"appendChild",value:function appendChild(t,e){return e._appendChild(t);}},{key:"insertChild",value:function insertChild(t,e,n){return n._insertChild(t,e);}},{key:"removeChildren",value:function removeChildren(t,e,n){return n._removeChildren(t,e);}},{key:"remove",value:function remove(t){var e=t.parent;if(e){return this.removeChildren(e.getChildIndex(t),1,e);}return[];}},{key:"replace",value:function replace(t,e){var n=t.parent;if(n){var _o147=n.getChildIndex(t);this.removeChildren(_o147,1,n);this.insertChild(_o147,e,n);return true;}return false;}},{key:"unwrapElement",value:function unwrapElement(t){var e=t.parent;if(e){var _n216=e.getChildIndex(t);this.remove(t);this.insertChild(_n216,t.getChildren(),e);}}},{key:"rename",value:function rename(t,e){var n=new Gl(this.document,t,e.getAttributes(),e.getChildren());return this.replace(e,n)?n:null;}},{key:"setAttribute",value:function setAttribute(t,e,n){n._setAttribute(t,e);}},{key:"removeAttribute",value:function removeAttribute(t,e){e._removeAttribute(t);}},{key:"addClass",value:function addClass(t,e){e._addClass(t);}},{key:"removeClass",value:function removeClass(t,e){e._removeClass(t);}},{key:"setStyle",value:function setStyle(t,e,n){if(To(t)&&n===undefined){n=e;}n._setStyle(t,e);}},{key:"removeStyle",value:function removeStyle(t,e){e._removeStyle(t);}},{key:"setCustomProperty",value:function setCustomProperty(t,e,n){n._setCustomProperty(t,e);}},{key:"removeCustomProperty",value:function removeCustomProperty(t,e){return e._removeCustomProperty(t);}},{key:"createPositionAt",value:function createPositionAt(t,e){return nd._createAt(t,e);}},{key:"createPositionAfter",value:function createPositionAfter(t){return nd._createAfter(t);}},{key:"createPositionBefore",value:function createPositionBefore(t){return nd._createBefore(t);}},{key:"createRange",value:function createRange(t,e){return new od(t,e);}},{key:"createRangeOn",value:function createRangeOn(t){return od._createOn(t);}},{key:"createRangeIn",value:function createRangeIn(t){return od._createIn(t);}},{key:"createSelection",value:function createSelection(t,e,n){return new sd(t,e,n);}}]);return JC;}();var ZC=/^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/i;var YC=/^rgb\([ ]?([0-9]{1,3}[ %]?,[ ]?){2,3}[0-9]{1,3}[ %]?\)$/i;var QC=/^rgba\([ ]?([0-9]{1,3}[ %]?,[ ]?){3}(1|[0-9]+%|[0]?\.?[0-9]+)\)$/i;var XC=/^hsl\([ ]?([0-9]{1,3}[ %]?[,]?[ ]*){3}(1|[0-9]+%|[0]?\.?[0-9]+)?\)$/i;var ty=/^hsla\([ ]?([0-9]{1,3}[ %]?,[ ]?){2,3}(1|[0-9]+%|[0]?\.?[0-9]+)\)$/i;var ey=new Set(["black","silver","gray","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","orange","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","activeborder","activecaption","appworkspace","background","buttonface","buttonhighlight","buttonshadow","buttontext","captiontext","graytext","highlight","highlighttext","inactiveborder","inactivecaption","inactivecaptiontext","infobackground","infotext","menu","menutext","scrollbar","threeddarkshadow","threedface","threedhighlight","threedlightshadow","threedshadow","window","windowframe","windowtext","rebeccapurple","currentcolor","transparent"]);function ny(t){if(t.startsWith("#")){return ZC.test(t);}if(t.startsWith("rgb")){return YC.test(t)||QC.test(t);}if(t.startsWith("hsl")){return XC.test(t)||ty.test(t);}return ey.has(t.toLowerCase());}var oy=null&&["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"];function iy(t){return oy.includes(t);}var ry=/^([+-]?[0-9]*([.][0-9]+)?(px|cm|mm|in|pc|pt|ch|em|ex|rem|vh|vw|vmin|vmax)|0)$/;function sy(t){return ry.test(t);}var ay=/^[+-]?[0-9]*([.][0-9]+)?%$/;function cy(t){return ay.test(t);}var ly=null&&["repeat-x","repeat-y","repeat","space","round","no-repeat"];function dy(t){return ly.includes(t);}var hy=null&&["center","top","bottom","left","right"];function uy(t){return hy.includes(t);}var fy=null&&["fixed","scroll","local"];function gy(t){return fy.includes(t);}var py=/^url\(/;function my(t){return py.test(t);}function ky(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"";if(t===""){return{top:undefined,right:undefined,bottom:undefined,left:undefined};}var e=vy(t);var n=e[0];var o=e[2]||n;var i=e[1]||n;var r=e[3]||i;return{top:n,bottom:o,right:i,left:r};}function by(t){return function(e){var n=e.top,o=e.right,i=e.bottom,r=e.left;var s=[];if(![n,o,r,i].every(function(t){return!!t;})){if(n){s.push([t+"-top",n]);}if(o){s.push([t+"-right",o]);}if(i){s.push([t+"-bottom",i]);}if(r){s.push([t+"-left",r]);}}else{s.push([t,wy(e)]);}return s;};}function wy(_ref51){var t=_ref51.top,e=_ref51.right,n=_ref51.bottom,o=_ref51.left;var i=[];if(o!==e){i.push(t,e,n,o);}else if(n!==t){i.push(t,e,n);}else if(e!==t){i.push(t,e);}else{i.push(t);}return i.join(" ");}function _y(t){return function(e){return{path:t,value:ky(e)};};}function vy(t){return t.replace(/, /g,",").split(" ").map(function(t){return t.replace(/,/g,", ");});}function Ay(t){t.setNormalizer("background",Cy);t.setNormalizer("background-color",function(t){return{path:"background.color",value:t};});t.setReducer("background",function(t){var e=[];e.push(["background-color",t.color]);return e;});t.setStyleRelation("background",["background-color"]);}function Cy(t){var e={};var n=getShorthandValues(t);var _iterator316=_createForOfIteratorHelper(n),_step316;try{for(_iterator316.s();!(_step316=_iterator316.n()).done;){var _t240=_step316.value;if(isRepeat(_t240)){e.repeat=e.repeat||[];e.repeat.push(_t240);}else if(isPosition(_t240)){e.position=e.position||[];e.position.push(_t240);}else if(isAttachment(_t240)){e.attachment=_t240;}else if(isColor(_t240)){e.color=_t240;}else if(isURL(_t240)){e.image=_t240;}}}catch(err){_iterator316.e(err);}finally{_iterator316.f();}return{path:"background",value:e};}function yy(t){t.setNormalizer("border",xy);t.setNormalizer("border-top",Ey("top"));t.setNormalizer("border-right",Ey("right"));t.setNormalizer("border-bottom",Ey("bottom"));t.setNormalizer("border-left",Ey("left"));t.setNormalizer("border-color",Dy("color"));t.setNormalizer("border-width",Dy("width"));t.setNormalizer("border-style",Dy("style"));t.setNormalizer("border-top-color",Py("color","top"));t.setNormalizer("border-top-style",Py("style","top"));t.setNormalizer("border-top-width",Py("width","top"));t.setNormalizer("border-right-color",Py("color","right"));t.setNormalizer("border-right-style",Py("style","right"));t.setNormalizer("border-right-width",Py("width","right"));t.setNormalizer("border-bottom-color",Py("color","bottom"));t.setNormalizer("border-bottom-style",Py("style","bottom"));t.setNormalizer("border-bottom-width",Py("width","bottom"));t.setNormalizer("border-left-color",Py("color","left"));t.setNormalizer("border-left-style",Py("style","left"));t.setNormalizer("border-left-width",Py("width","left"));t.setExtractor("border-top",Ty("top"));t.setExtractor("border-right",Ty("right"));t.setExtractor("border-bottom",Ty("bottom"));t.setExtractor("border-left",Ty("left"));t.setExtractor("border-top-color","border.color.top");t.setExtractor("border-right-color","border.color.right");t.setExtractor("border-bottom-color","border.color.bottom");t.setExtractor("border-left-color","border.color.left");t.setExtractor("border-top-width","border.width.top");t.setExtractor("border-right-width","border.width.right");t.setExtractor("border-bottom-width","border.width.bottom");t.setExtractor("border-left-width","border.width.left");t.setExtractor("border-top-style","border.style.top");t.setExtractor("border-right-style","border.style.right");t.setExtractor("border-bottom-style","border.style.bottom");t.setExtractor("border-left-style","border.style.left");t.setReducer("border-color",getBoxSidesValueReducer("border-color"));t.setReducer("border-style",getBoxSidesValueReducer("border-style"));t.setReducer("border-width",getBoxSidesValueReducer("border-width"));t.setReducer("border-top",Oy("top"));t.setReducer("border-right",Oy("right"));t.setReducer("border-bottom",Oy("bottom"));t.setReducer("border-left",Oy("left"));t.setReducer("border",Ry());t.setStyleRelation("border",["border-color","border-style","border-width","border-top","border-right","border-bottom","border-left","border-top-color","border-right-color","border-bottom-color","border-left-color","border-top-style","border-right-style","border-bottom-style","border-left-style","border-top-width","border-right-width","border-bottom-width","border-left-width"]);t.setStyleRelation("border-color",["border-top-color","border-right-color","border-bottom-color","border-left-color"]);t.setStyleRelation("border-style",["border-top-style","border-right-style","border-bottom-style","border-left-style"]);t.setStyleRelation("border-width",["border-top-width","border-right-width","border-bottom-width","border-left-width"]);t.setStyleRelation("border-top",["border-top-color","border-top-style","border-top-width"]);t.setStyleRelation("border-right",["border-right-color","border-right-style","border-right-width"]);t.setStyleRelation("border-bottom",["border-bottom-color","border-bottom-style","border-bottom-width"]);t.setStyleRelation("border-left",["border-left-color","border-left-style","border-left-width"]);}function xy(t){var _Iy=Iy(t),e=_Iy.color,n=_Iy.style,o=_Iy.width;return{path:"border",value:{color:getBoxSidesValues(e),style:getBoxSidesValues(n),width:getBoxSidesValues(o)}};}function Ey(t){return function(e){var _Iy2=Iy(e),n=_Iy2.color,o=_Iy2.style,i=_Iy2.width;var r={};if(n!==undefined){r.color=_defineProperty({},t,n);}if(o!==undefined){r.style=_defineProperty({},t,o);}if(i!==undefined){r.width=_defineProperty({},t,i);}return{path:"border",value:r};};}function Dy(t){return function(e){return{path:"border",value:Sy(e,t)};};}function Sy(t,e){return _defineProperty({},e,getBoxSidesValues(t));}function Py(t,e){return function(n){return{path:"border",value:_defineProperty({},t,_defineProperty({},e,n))};};}function Ty(t){return function(e,n){if(n.border){return By(n.border,t);}};}function By(t,e){var n={};if(t.width&&t.width[e]){n.width=t.width[e];}if(t.style&&t.style[e]){n.style=t.style[e];}if(t.color&&t.color[e]){n.color=t.color[e];}return n;}function Iy(t){var e={};var n=getShorthandValues(t);var _iterator317=_createForOfIteratorHelper(n),_step317;try{for(_iterator317.s();!(_step317=_iterator317.n()).done;){var _t242=_step317.value;if(isLength(_t242)||/thin|medium|thick/.test(_t242)){e.width=_t242;}else if(isLineStyle(_t242)){e.style=_t242;}else{e.color=_t242;}}}catch(err){_iterator317.e(err);}finally{_iterator317.f();}return e;}function Ry(){return function(e){var n=By(e,"top");var o=By(e,"right");var i=By(e,"bottom");var r=By(e,"left");var s=[n,o,i,r];var a={width:t(s,"width"),style:t(s,"style"),color:t(s,"color")};var c=zy(a,"all");if(c.length){return c;}var l=Object.entries(a).reduce(function(t,_ref53){var _ref54=_slicedToArray(_ref53,2),e=_ref54[0],n=_ref54[1];if(n){t.push(["border-".concat(e),n]);s.forEach(function(t){return t[e]=null;});}return t;},[]);return[].concat(_toConsumableArray(l),_toConsumableArray(zy(n,"top")),_toConsumableArray(zy(o,"right")),_toConsumableArray(zy(i,"bottom")),_toConsumableArray(zy(r,"left")));};function t(t,e){return t.map(function(t){return t[e];}).reduce(function(t,e){return t==e?t:null;});}}function Oy(t){return function(e){return zy(e,t);};}function zy(t,e){var n=[];if(t&&t.width){n.push("width");}if(t&&t.style){n.push("style");}if(t&&t.color){n.push("color");}if(n.length==3){var _o148=n.map(function(e){return t[e];}).join(" ");return[e=="all"?["border",_o148]:["border-".concat(e),_o148]];}if(e=="all"){return[];}return n.map(function(n){return["border-".concat(e,"-").concat(n),t[n]];});}function My(t){t.setNormalizer("margin",getPositionShorthandNormalizer("margin"));t.setNormalizer("margin-top",function(t){return{path:"margin.top",value:t};});t.setNormalizer("margin-right",function(t){return{path:"margin.right",value:t};});t.setNormalizer("margin-bottom",function(t){return{path:"margin.bottom",value:t};});t.setNormalizer("margin-left",function(t){return{path:"margin.left",value:t};});t.setReducer("margin",getBoxSidesValueReducer("margin"));t.setStyleRelation("margin",["margin-top","margin-right","margin-bottom","margin-left"]);}function Ny(t){t.setNormalizer("padding",getPositionShorthandNormalizer("padding"));t.setNormalizer("padding-top",function(t){return{path:"padding.top",value:t};});t.setNormalizer("padding-right",function(t){return{path:"padding.right",value:t};});t.setNormalizer("padding-bottom",function(t){return{path:"padding.bottom",value:t};});t.setNormalizer("padding-left",function(t){return{path:"padding.left",value:t};});t.setReducer("padding",getBoxSidesValueReducer("padding"));t.setStyleRelation("padding",["padding-top","padding-right","padding-bottom","padding-left"]);}var Fy=/*#__PURE__*/function(_Kb){_inherits(Fy,_Kb);var _super86=_createSuper(Fy);function Fy(t,e){var _this165;_classCallCheck(this,Fy);_this165=_super86.call(this,t);_this165.view=e;return _this165;}_createClass(Fy,[{key:"element",get:function get(){return this.view.editable.element;}},{key:"init",value:function init(){var t=this.editor;var e=this.view;var n=t.plugins.get("BalloonToolbar");var o=t.editing.view;var i=e.editable;var r=o.document.getRoot();i.name=r.rootName;e.render();var s=i.element;this.setEditableElement(i.name,s);this.focusTracker.add(s);i.bind("isFocused").to(this.focusTracker);o.attachDomRoot(s);lC({origin:o,originFocusTracker:this.focusTracker,originKeystrokeHandler:t.keystrokes,toolbar:n.toolbarView,beforeFocus:function beforeFocus(){n.show();},afterBlur:function afterBlur(){n.hide();}});this._initPlaceholder();this.fire("ready");}},{key:"destroy",value:function destroy(){var t=this.view;var e=this.editor.editing.view;e.detachDomRoot(t.editable.name);t.destroy();_get(_getPrototypeOf(Fy.prototype),"destroy",this).call(this);}},{key:"_initPlaceholder",value:function _initPlaceholder(){var t=this.editor;var e=t.editing.view;var n=e.document.getRoot();var o=t.sourceElement;var i=t.config.get("placeholder")||o&&o.tagName.toLowerCase()==="textarea"&&o.getAttribute("placeholder");if(i){EC({view:e,element:n,text:i,isDirectHost:false,keepOnFocus:true});}}}]);return Fy;}(Kb);var Vy=/*#__PURE__*/function(_tA){_inherits(Vy,_tA);var _super87=_createSuper(Vy);function Vy(t,e,n){var _this166;_classCallCheck(this,Vy);_this166=_super87.call(this,t);_this166.editable=new cA(t,e,n);return _this166;}_createClass(Vy,[{key:"render",value:function render(){_get(_getPrototypeOf(Vy.prototype),"render",this).call(this);this.registerChild(this.editable);}}]);return Vy;}(tA);var Ly=/*#__PURE__*/function(_jb){_inherits(Ly,_jb);var _super88=_createSuper(Ly);function Ly(t){var _this167;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Ly);if(!Wa(t)&&e.initialData!==undefined){throw new h("editor-create-initial-data",null);}_this167=_super88.call(this,e);if(_this167.config.get("initialData")===undefined){_this167.config.set("initialData",Hy(t));}if(Wa(t)){_this167.sourceElement=t;Yb(_assertThisInitialized(_this167));}var n=_this167.config.get("plugins");n.push(hC);_this167.config.set("plugins",n);_this167.config.define("balloonToolbar",_this167.config.get("toolbar"));_this167.model.document.createRoot();var o=new Vy(_this167.locale,_this167.editing.view,_this167.sourceElement);_this167.ui=new Fy(_assertThisInitialized(_this167),o);Gb(_assertThisInitialized(_this167));return _this167;}_createClass(Ly,[{key:"destroy",value:function destroy(){var _this168=this;var t=this.getData();this.ui.destroy();return _get(_getPrototypeOf(Ly.prototype),"destroy",this).call(this).then(function(){if(_this168.sourceElement){og(_this168.sourceElement,t);}});}}],[{key:"create",value:function create(t){var _this169=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return new Promise(function(n){if(Wa(t)&&t.tagName==="TEXTAREA"){throw new h("editor-wrong-element",null);}var o=new _this169(t,e);n(o.initPlugins().then(function(){return o.ui.init();}).then(function(){return o.data.init(o.config.get("initialData"));}).then(function(){return o.fire("ready");}).then(function(){return o;}));});}}]);return Ly;}(jb);fo(Ly,Ub);fo(Ly,Zb);function Hy(t){return Wa(t)?$f(t):t;}var jy=/*#__PURE__*/function(_mo){_inherits(jy,_mo);var _super89=_createSuper(jy);function jy(t,e){var _this170;_classCallCheck(this,jy);_this170=_super89.call(this,t);_this170.attributeKey=e;return _this170;}_createClass(jy,[{key:"refresh",value:function refresh(){var t=this.editor.model;var e=t.document;this.value=this._getValueFromFirstAllowedNode();this.isEnabled=t.schema.checkAttributeInSelection(e.selection,this.attributeKey);}},{key:"execute",value:function execute(){var _this171=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;var o=n.selection;var i=t.forceValue===undefined?!this.value:t.forceValue;e.change(function(t){if(o.isCollapsed){if(i){t.setSelectionAttribute(_this171.attributeKey,true);}else{t.removeSelectionAttribute(_this171.attributeKey);}}else{var _n217=e.schema.getValidRanges(o.getRanges(),_this171.attributeKey);var _iterator318=_createForOfIteratorHelper(_n217),_step318;try{for(_iterator318.s();!(_step318=_iterator318.n()).done;){var _e224=_step318.value;if(i){t.setAttribute(_this171.attributeKey,i,_e224);}else{t.removeAttribute(_this171.attributeKey,_e224);}}}catch(err){_iterator318.e(err);}finally{_iterator318.f();}}});}},{key:"_getValueFromFirstAllowedNode",value:function _getValueFromFirstAllowedNode(){var t=this.editor.model;var e=t.schema;var n=t.document.selection;if(n.isCollapsed){return n.hasAttribute(this.attributeKey);}var _iterator319=_createForOfIteratorHelper(n.getRanges()),_step319;try{for(_iterator319.s();!(_step319=_iterator319.n()).done;){var _t243=_step319.value;var _iterator320=_createForOfIteratorHelper(_t243.getItems()),_step320;try{for(_iterator320.s();!(_step320=_iterator320.n()).done;){var _n218=_step320.value;if(e.checkAttribute(_n218,this.attributeKey)){return _n218.hasAttribute(this.attributeKey);}}}catch(err){_iterator320.e(err);}finally{_iterator320.f();}}}catch(err){_iterator319.e(err);}finally{_iterator319.f();}return false;}}]);return jy;}(mo);var qy="bold";var Wy=/*#__PURE__*/function(_go3){_inherits(Wy,_go3);var _super90=_createSuper(Wy);function Wy(){_classCallCheck(this,Wy);return _super90.apply(this,arguments);}_createClass(Wy,[{key:"init",value:function init(){var t=this.editor;t.model.schema.extend("$text",{allowAttributes:qy});t.model.schema.setAttributeProperties(qy,{isFormatting:true,copyOnEnter:true});t.conversion.attributeToElement({model:qy,view:"strong",upcastAlso:["b",function(t){var e=t.getStyle("font-weight");if(!e){return null;}if(e=="bold"||Number(e)>=600){return{name:true,styles:["font-weight"]};}}]});t.commands.add(qy,new jy(t,qy));t.keystrokes.set("CTRL+B",qy);}}],[{key:"pluginName",get:function get(){return"BoldEditing";}}]);return Wy;}(go);var Ky='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z"/></svg>';var Gy="bold";var $y=/*#__PURE__*/function(_go4){_inherits($y,_go4);var _super91=_createSuper($y);function $y(){_classCallCheck(this,$y);return _super91.apply(this,arguments);}_createClass($y,[{key:"init",value:function init(){var _this172=this;var t=this.editor;var e=t.t;t.ui.componentFactory.add(Gy,function(n){var o=t.commands.get(Gy);var i=new B_(n);i.set({label:e("Bold"),icon:Ky,keystroke:"CTRL+B",tooltip:true,isToggleable:true});i.bind("isOn","isEnabled").to(o,"value","isEnabled");_this172.listenTo(i,"execute",function(){t.execute(Gy);t.editing.view.focus();});return i;});}}],[{key:"pluginName",get:function get(){return"BoldUI";}}]);return $y;}(go);var Uy=/*#__PURE__*/function(_go5){_inherits(Uy,_go5);var _super92=_createSuper(Uy);function Uy(){_classCallCheck(this,Uy);return _super92.apply(this,arguments);}_createClass(Uy,null,[{key:"requires",get:function get(){return[Wy,$y];}},{key:"pluginName",get:function get(){return"Bold";}}]);return Uy;}(go);var Jy=/*#__PURE__*/function(){function Jy(t){_classCallCheck(this,Jy);this.files=Zy(t);this._native=t;}_createClass(Jy,[{key:"types",get:function get(){return this._native.types;}},{key:"getData",value:function getData(t){return this._native.getData(t);}},{key:"setData",value:function setData(t,e){this._native.setData(t,e);}},{key:"effectAllowed",get:function get(){return this._native.effectAllowed;},set:function set(t){this._native.effectAllowed=t;}},{key:"dropEffect",get:function get(){return this._native.dropEffect;},set:function set(t){this._native.dropEffect=t;}},{key:"isCanceled",get:function get(){return this._native.dropEffect=="none"||!!this._native.mozUserCancelled;}}]);return Jy;}();function Zy(t){var e=Array.from(t.files||[]);var n=Array.from(t.items||[]);if(e.length){return e;}return n.filter(function(t){return t.kind==="file";}).map(function(t){return t.getAsFile();});}var Yy=/*#__PURE__*/function(_f7){_inherits(Yy,_f7);var _super93=_createSuper(Yy);function Yy(t){var _this173;_classCallCheck(this,Yy);_this173=_super93.call(this,t);var e=_this173.document;_this173.domEventType=["paste","copy","cut","drop","dragover","dragstart","dragend","dragenter","dragleave"];_this173.listenTo(e,"paste",n("clipboardInput"),{priority:"low"});_this173.listenTo(e,"drop",n("clipboardInput"),{priority:"low"});_this173.listenTo(e,"dragover",n("dragging"),{priority:"low"});function n(t){return function(n,o){o.preventDefault();var r=o.dropRange?[o.dropRange]:null;var s=new i(e,t);e.fire(s,{dataTransfer:o.dataTransfer,method:n.name,targetRanges:r,target:o.target});if(s.stop.called){o.stopPropagation();}};}return _this173;}_createClass(Yy,[{key:"onDomEvent",value:function onDomEvent(t){var e={dataTransfer:new Jy(t.clipboardData?t.clipboardData:t.dataTransfer)};if(t.type=="drop"||t.type=="dragover"){e.dropRange=Qy(this.view,t);}this.fire(t.type,t,e);}}]);return Yy;}(_f);function Qy(t,e){var n=e.target.ownerDocument;var o=e.clientX;var i=e.clientY;var r;if(n.caretRangeFromPoint&&n.caretRangeFromPoint(o,i)){r=n.caretRangeFromPoint(o,i);}else if(e.rangeParent){r=n.createRange();r.setStart(e.rangeParent,e.rangeOffset);r.collapse(true);}if(r){return t.domConverter.domRangeToView(r);}return null;}function Xy(t){t=t.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\r?\n\r?\n/g,"</p><p>").replace(/\r?\n/g,"<br>").replace(/^\s/,"&nbsp;").replace(/\s$/,"&nbsp;").replace(/\s\s/g," &nbsp;");if(t.includes("</p><p>")||t.includes("<br>")){t="<p>".concat(t,"</p>");}return t;}function tx(t){return t.replace(/<span(?: class="Apple-converted-space"|)>(\s+)<\/span>/g,function(t,e){if(e.length==1){return" ";}return e;}).replace(/<!--[\s\S]*?-->/g,"");}var ex=["figcaption","li"];function nx(t){var e="";if(t.is("$text")||t.is("$textProxy")){e=t.data;}else if(t.is("element","img")&&t.hasAttribute("alt")){e=t.getAttribute("alt");}else if(t.is("element","br")){e="\n";}else{var _n219=null;var _iterator321=_createForOfIteratorHelper(t.getChildren()),_step321;try{for(_iterator321.s();!(_step321=_iterator321.n()).done;){var _o149=_step321.value;var _t244=nx(_o149);if(_n219&&(_n219.is("containerElement")||_o149.is("containerElement"))){if(ex.includes(_n219.name)||ex.includes(_o149.name)){e+="\n";}else{e+="\n\n";}}e+=_t244;_n219=_o149;}}catch(err){_iterator321.e(err);}finally{_iterator321.f();}}return e;}var ox=/*#__PURE__*/function(_go6){_inherits(ox,_go6);var _super94=_createSuper(ox);function ox(){_classCallCheck(this,ox);return _super94.apply(this,arguments);}_createClass(ox,[{key:"init",value:function init(){var t=this.editor;var e=t.editing.view;e.addObserver(Yy);this._setupPasteDrop();this._setupCopyCut();}},{key:"_setupPasteDrop",value:function _setupPasteDrop(){var _this174=this;var t=this.editor;var e=t.model;var n=t.editing.view;var o=n.document;this.listenTo(o,"clipboardInput",function(e){if(t.isReadOnly){e.stop();}},{priority:"highest"});this.listenTo(o,"clipboardInput",function(t,e){var o=e.dataTransfer;var r=e.content||"";if(!r){if(o.getData("text/html")){r=tx(o.getData("text/html"));}else if(o.getData("text/plain")){r=Xy(o.getData("text/plain"));}r=_this174.editor.data.htmlProcessor.toView(r);}var s=new i(_this174,"inputTransformation");_this174.fire(s,{content:r,dataTransfer:o,targetRanges:e.targetRanges,method:e.method});if(s.stop.called){t.stop();}n.scrollToTheSelection();},{priority:"low"});this.listenTo(this,"inputTransformation",function(t,n){if(n.content.isEmpty){return;}var o=_this174.editor.data;var i=o.toModel(n.content,"$clipboardHolder");if(i.childCount==0){return;}t.stop();e.change(function(){_this174.fire("contentInsertion",{content:i,method:n.method,dataTransfer:n.dataTransfer,targetRanges:n.targetRanges});});},{priority:"low"});this.listenTo(this,"contentInsertion",function(t,n){n.resultRange=e.insertContent(n.content);},{priority:"low"});}},{key:"_setupCopyCut",value:function _setupCopyCut(){var _this175=this;var t=this.editor;var e=t.model.document;var n=t.editing.view;var o=n.document;function i(n,i){var r=i.dataTransfer;i.preventDefault();var s=t.data.toView(t.model.getSelectedContent(e.selection));o.fire("clipboardOutput",{dataTransfer:r,content:s,method:n.name});}this.listenTo(o,"copy",i,{priority:"low"});this.listenTo(o,"cut",function(e,n){if(t.isReadOnly){n.preventDefault();}else{i(e,n);}},{priority:"low"});this.listenTo(o,"clipboardOutput",function(n,o){if(!o.content.isEmpty){o.dataTransfer.setData("text/html",_this175.editor.data.htmlProcessor.toData(o.content));o.dataTransfer.setData("text/plain",nx(o.content));}if(o.method=="cut"){t.model.deleteContent(e.selection);}},{priority:"low"});}}],[{key:"pluginName",get:function get(){return"ClipboardPipeline";}}]);return ox;}(go);function ix(t,e){var _iterator322,_step322,_n220;return regeneratorRuntime.wrap(function ix$(_context37){while(1){switch(_context37.prev=_context37.next){case 0:_iterator322=_createForOfIteratorHelper(e);_context37.prev=1;_iterator322.s();case 3:if((_step322=_iterator322.n()).done){_context37.next=10;break;}_n220=_step322.value;if(!(_n220&&t.getAttributeProperties(_n220[0]).copyOnEnter)){_context37.next=8;break;}_context37.next=8;return _n220;case 8:_context37.next=3;break;case 10:_context37.next=15;break;case 12:_context37.prev=12;_context37.t0=_context37["catch"](1);_iterator322.e(_context37.t0);case 15:_context37.prev=15;_iterator322.f();return _context37.finish(15);case 18:case"end":return _context37.stop();}}},_marked6,null,[[1,12,15,18]]);}var rx=/*#__PURE__*/function(_mo2){_inherits(rx,_mo2);var _super95=_createSuper(rx);function rx(){_classCallCheck(this,rx);return _super95.apply(this,arguments);}_createClass(rx,[{key:"execute",value:function execute(){var _this176=this;var t=this.editor.model;var e=t.document;t.change(function(n){sx(_this176.editor.model,n,e.selection,t.schema);_this176.fire("afterExecute",{writer:n});});}}]);return rx;}(mo);function sx(t,e,n,o){var i=n.isCollapsed;var r=n.getFirstRange();var s=r.start.parent;var a=r.end.parent;if(o.isLimit(s)||o.isLimit(a)){if(!i&&s==a){t.deleteContent(n);}return;}if(i){var _t245=ix(e.model.schema,n.getAttributes());ax(e,r.start);e.setSelectionAttribute(_t245);}else{var _o150=!(r.start.isAtStart&&r.end.isAtEnd);var _i122=s==a;t.deleteContent(n,{leaveUnmerged:_o150});if(_o150){if(_i122){ax(e,n.focus);}else{e.setSelection(a,0);}}}}function ax(t,e){t.split(e);t.setSelection(e.parent.nextSibling,0);}var cx=/*#__PURE__*/function(_ku7){_inherits(cx,_ku7);var _super96=_createSuper(cx);function cx(t){var _this177;_classCallCheck(this,cx);_this177=_super96.call(this,t);var e=_this177.document;e.on("keydown",function(t,n){if(_this177.isEnabled&&n.keyCode==Nd.enter){var _o151=new cd(e,"enter",e.selection.getFirstRange());e.fire(_o151,new wf(e,n.domEvent,{isSoft:n.shiftKey}));if(_o151.stop.called){t.stop();}}});return _this177;}_createClass(cx,[{key:"observe",value:function observe(){}}]);return cx;}(ku);var lx=/*#__PURE__*/function(_go7){_inherits(lx,_go7);var _super97=_createSuper(lx);function lx(){_classCallCheck(this,lx);return _super97.apply(this,arguments);}_createClass(lx,[{key:"init",value:function init(){var t=this.editor;var e=t.editing.view;var n=e.document;e.addObserver(cx);t.commands.add("enter",new rx(t));this.listenTo(n,"enter",function(n,o){o.preventDefault();if(o.isSoft){return;}t.execute("enter");e.scrollToTheSelection();},{priority:"low"});}}],[{key:"pluginName",get:function get(){return"Enter";}}]);return lx;}(go);var dx=/*#__PURE__*/function(){function dx(t){var _this178=this;var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;_classCallCheck(this,dx);this.model=t;this.size=0;this.limit=e;this.isLocked=false;this._changeCallback=function(t,e){if(e.isLocal&&e.isUndoable&&e!==_this178._batch){_this178._reset(true);}};this._selectionChangeCallback=function(){_this178._reset();};this.model.document.on("change",this._changeCallback);this.model.document.selection.on("change:range",this._selectionChangeCallback);this.model.document.selection.on("change:attribute",this._selectionChangeCallback);}_createClass(dx,[{key:"batch",get:function get(){if(!this._batch){this._batch=this.model.createBatch({isTyping:true});}return this._batch;}},{key:"input",value:function input(t){this.size+=t;if(this.size>=this.limit){this._reset(true);}}},{key:"lock",value:function lock(){this.isLocked=true;}},{key:"unlock",value:function unlock(){this.isLocked=false;}},{key:"destroy",value:function destroy(){this.model.document.off("change",this._changeCallback);this.model.document.selection.off("change:range",this._selectionChangeCallback);this.model.document.selection.off("change:attribute",this._selectionChangeCallback);}},{key:"_reset",value:function _reset(t){if(!this.isLocked||t){this._batch=null;this.size=0;}}}]);return dx;}();var hx=/*#__PURE__*/function(_mo3){_inherits(hx,_mo3);var _super98=_createSuper(hx);function hx(t,e){var _this179;_classCallCheck(this,hx);_this179=_super98.call(this,t);_this179.direction=e;_this179._buffer=new dx(t.model,t.config.get("typing.undoStep"));return _this179;}_createClass(hx,[{key:"buffer",get:function get(){return this._buffer;}},{key:"execute",value:function execute(){var _this180=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;e.enqueueChange(this._buffer.batch,function(o){_this180._buffer.lock();var i=o.createSelection(t.selection||n.selection);var r=t.sequence||1;var s=i.isCollapsed;if(i.isCollapsed){e.modifySelection(i,{direction:_this180.direction,unit:t.unit,treatEmojiAsSingleUnit:true});}if(_this180._shouldEntireContentBeReplacedWithParagraph(r)){_this180._replaceEntireContentWithParagraph(o);return;}if(_this180._shouldReplaceFirstBlockWithParagraph(i,r)){_this180.editor.execute("paragraph",{selection:i});return;}if(i.isCollapsed){return;}var a=0;i.getFirstRange().getMinimalFlatRanges().forEach(function(t){a+=rd(t.getWalker({singleCharacters:true,ignoreElementEnd:true,shallow:true}));});e.deleteContent(i,{doNotResetEntireContent:s,direction:_this180.direction});_this180._buffer.input(a);o.setSelection(i);_this180._buffer.unlock();});}},{key:"_shouldEntireContentBeReplacedWithParagraph",value:function _shouldEntireContentBeReplacedWithParagraph(t){if(t>1){return false;}var e=this.editor.model;var n=e.document;var o=n.selection;var i=e.schema.getLimitElement(o);var r=o.isCollapsed&&o.containsEntireContent(i);if(!r){return false;}if(!e.schema.checkChild(i,"paragraph")){return false;}var s=i.getChild(0);if(s&&s.name==="paragraph"){return false;}return true;}},{key:"_replaceEntireContentWithParagraph",value:function _replaceEntireContentWithParagraph(t){var e=this.editor.model;var n=e.document;var o=n.selection;var i=e.schema.getLimitElement(o);var r=t.createElement("paragraph");t.remove(t.createRangeIn(i));t.insert(r,i);t.setSelection(r,0);}},{key:"_shouldReplaceFirstBlockWithParagraph",value:function _shouldReplaceFirstBlockWithParagraph(t,e){var n=this.editor.model;if(e>1||this.direction!="backward"){return false;}if(!t.isCollapsed){return false;}var o=t.getFirstPosition();var i=n.schema.getLimitElement(o);var r=i.getChild(0);if(o.parent!=r){return false;}if(!t.containsEntireContent(r)){return false;}if(!n.schema.checkChild(i,"paragraph")){return false;}if(r.name=="paragraph"){return false;}return true;}}]);return hx;}(mo);function ux(t,e){var n=[];var o=0;var i;t.forEach(function(t){if(t=="equal"){r();o++;}else if(t=="insert"){if(s("insert")){i.values.push(e[o]);}else{r();i={type:"insert",index:o,values:[e[o]]};}o++;}else{if(s("delete")){i.howMany++;}else{r();i={type:"delete",index:o,howMany:1};}}});r();return n;function r(){if(i){n.push(i);i=null;}}function s(t){return i&&i.type==t;}}function fx(t){if(t.length==0){return false;}var _iterator323=_createForOfIteratorHelper(t),_step323;try{for(_iterator323.s();!(_step323=_iterator323.n()).done;){var _e225=_step323.value;if(_e225.type==="children"&&!gx(_e225)){return true;}}}catch(err){_iterator323.e(err);}finally{_iterator323.f();}return false;}function gx(t){if(t.newChildren.length-t.oldChildren.length!=1){return;}var e=Bh(t.oldChildren,t.newChildren,px);var n=ux(e,t.newChildren);if(n.length>1){return;}var o=n[0];if(!(!!o.values[0]&&o.values[0].is("$text"))){return;}return o;}function px(t,e){if(!!t&&t.is("$text")&&!!e&&e.is("$text")){return t.data===e.data;}else{return t===e;}}function mx(t,e){var n=e.selection;var o=t.shiftKey&&t.keyCode===Nd["delete"];var i=!n.isCollapsed;return o&&i;}var kx=/*#__PURE__*/function(_ku8){_inherits(kx,_ku8);var _super99=_createSuper(kx);function kx(t){var _this181;_classCallCheck(this,kx);_this181=_super99.call(this,t);var e=t.document;var n=0;e.on("keyup",function(t,e){if(e.keyCode==Nd["delete"]||e.keyCode==Nd.backspace){n=0;}});e.on("keydown",function(t,i){if(Ed.isWindows&&mx(i,e)){return;}var r={};if(i.keyCode==Nd["delete"]){r.direction="forward";r.unit="character";}else if(i.keyCode==Nd.backspace){r.direction="backward";r.unit="codePoint";}else{return;}var s=Ed.isMac?i.altKey:i.ctrlKey;r.unit=s?"word":r.unit;r.sequence=++n;o(t,i.domEvent,r);});if(Ed.isAndroid){e.on("beforeinput",function(e,n){if(n.domEvent.inputType!="deleteContentBackward"){return;}var i={unit:"codepoint",direction:"backward",sequence:1};var r=n.domTarget.ownerDocument.defaultView.getSelection();if(r.anchorNode==r.focusNode&&r.anchorOffset+1!=r.focusOffset){i.selectionToRemove=t.domConverter.domSelectionToView(r);}o(e,n.domEvent,i);});}function o(t,n,o){var i=new cd(e,"delete",e.selection.getFirstRange());e.fire(i,new wf(e,n,o));if(i.stop.called){t.stop();}}return _this181;}_createClass(kx,[{key:"observe",value:function observe(){}}]);return kx;}(ku);var bx=/*#__PURE__*/function(_go8){_inherits(bx,_go8);var _super100=_createSuper(bx);function bx(){_classCallCheck(this,bx);return _super100.apply(this,arguments);}_createClass(bx,[{key:"init",value:function init(){var _this182=this;var t=this.editor;var e=t.editing.view;var n=e.document;var o=t.model.document;e.addObserver(kx);this._undoOnBackspace=false;var i=new hx(t,"forward");t.commands.add("deleteForward",i);t.commands.add("forwardDelete",i);t.commands.add("delete",new hx(t,"backward"));this.listenTo(n,"delete",function(n,o){var i={unit:o.unit,sequence:o.sequence};if(o.selectionToRemove){var _e226=t.model.createSelection();var _n221=[];var _iterator324=_createForOfIteratorHelper(o.selectionToRemove.getRanges()),_step324;try{for(_iterator324.s();!(_step324=_iterator324.n()).done;){var _e227=_step324.value;_n221.push(t.editing.mapper.toModelRange(_e227));}}catch(err){_iterator324.e(err);}finally{_iterator324.f();}_e226.setTo(_n221);i.selection=_e226;}t.execute(o.direction=="forward"?"deleteForward":"delete",i);o.preventDefault();e.scrollToTheSelection();},{priority:"low"});if(Ed.isAndroid){var _t246=null;this.listenTo(n,"delete",function(e,n){var o=n.domTarget.ownerDocument.defaultView.getSelection();_t246={anchorNode:o.anchorNode,anchorOffset:o.anchorOffset,focusNode:o.focusNode,focusOffset:o.focusOffset};},{priority:"lowest"});this.listenTo(n,"keyup",function(e,n){if(_t246){var _e228=n.domTarget.ownerDocument.defaultView.getSelection();_e228.collapse(_t246.anchorNode,_t246.anchorOffset);_e228.extend(_t246.focusNode,_t246.focusOffset);_t246=null;}});}if(this.editor.plugins.has("UndoEditing")){this.listenTo(n,"delete",function(e,n){if(_this182._undoOnBackspace&&n.direction=="backward"&&n.sequence==1&&n.unit=="codePoint"){_this182._undoOnBackspace=false;t.execute("undo");n.preventDefault();e.stop();}},{context:"$capture"});this.listenTo(o,"change",function(){_this182._undoOnBackspace=false;});}}},{key:"requestUndoOnBackspace",value:function requestUndoOnBackspace(){if(this.editor.plugins.has("UndoEditing")){this._undoOnBackspace=true;}}}],[{key:"pluginName",get:function get(){return"Delete";}}]);return bx;}(go);var wx=/*#__PURE__*/function(){function wx(){_classCallCheck(this,wx);this._stack=[];}_createClass(wx,[{key:"add",value:function add(t,e){var n=this._stack;var o=n[0];this._insertDescriptor(t);var i=n[0];if(o!==i&&!_x(o,i)){this.fire("change:top",{oldDescriptor:o,newDescriptor:i,writer:e});}}},{key:"remove",value:function remove(t,e){var n=this._stack;var o=n[0];this._removeDescriptor(t);var i=n[0];if(o!==i&&!_x(o,i)){this.fire("change:top",{oldDescriptor:o,newDescriptor:i,writer:e});}}},{key:"_insertDescriptor",value:function _insertDescriptor(t){var e=this._stack;var n=e.findIndex(function(e){return e.id===t.id;});if(_x(t,e[n])){return;}if(n>-1){e.splice(n,1);}var o=0;while(e[o]&&vx(e[o],t)){o++;}e.splice(o,0,t);}},{key:"_removeDescriptor",value:function _removeDescriptor(t){var e=this._stack;var n=e.findIndex(function(e){return e.id===t;});if(n>-1){e.splice(n,1);}}}]);return wx;}();fo(wx,C);function _x(t,e){return t&&e&&t.priority==e.priority&&Ax(t.classes)==Ax(e.classes);}function vx(t,e){if(t.priority>e.priority){return true;}else if(t.priority<e.priority){return false;}return Ax(t.classes)>Ax(e.classes);}function Ax(t){return Array.isArray(t)?t.sort().join(","):t;}var Cx='<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M4 0v1H1v3H0V.5A.5.5 0 0 1 .5 0H4zm8 0h3.5a.5.5 0 0 1 .5.5V4h-1V1h-3V0zM4 16H.5a.5.5 0 0 1-.5-.5V12h1v3h3v1zm8 0v-1h3v-3h1v3.5a.5.5 0 0 1-.5.5H12z"/><path fill-opacity=".256" d="M1 1h14v14H1z"/><g class="ck-icon__selected-indicator"><path d="M7 0h2v1H7V0zM0 7h1v2H0V7zm15 0h1v2h-1V7zm-8 8h2v1H7v-1z"/><path fill-opacity=".254" d="M1 1h14v14H1z"/></g></svg>';var yx="ck-widget";var xx="ck-widget_selected";function Ex(t){if(!t.is("element")){return false;}return!!t.getCustomProperty("widget");}function Dx(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!t.is("containerElement")){throw new h("widget-to-widget-wrong-element-type",null,{element:t});}e.setAttribute("contenteditable","false",t);e.addClass(yx,t);e.setCustomProperty("widget",true,t);t.getFillerOffset=Mx;if(n.label){Bx(t,n.label,e);}if(n.hasSelectionHandle){Nx(t,e);}Tx(t,e);return t;}function Sx(t,e,n){if(e.classes){n.addClass(Ya(e.classes),t);}if(e.attributes){for(var _o152 in e.attributes){n.setAttribute(_o152,e.attributes[_o152],t);}}}function Px(t,e,n){if(e.classes){n.removeClass(Ya(e.classes),t);}if(e.attributes){for(var _o153 in e.attributes){n.removeAttribute(_o153,t);}}}function Tx(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Sx;var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Px;var i=new wx();i.on("change:top",function(e,i){if(i.oldDescriptor){o(t,i.oldDescriptor,i.writer);}if(i.newDescriptor){n(t,i.newDescriptor,i.writer);}});e.setCustomProperty("addHighlight",function(t,e,n){return i.add(e,n);},t);e.setCustomProperty("removeHighlight",function(t,e,n){return i.remove(e,n);},t);}function Bx(t,e,n){n.setCustomProperty("widgetLabel",e,t);}function Ix(t){var e=t.getCustomProperty("widgetLabel");if(!e){return"";}return typeof e=="function"?e():e;}function Rx(t,e){e.addClass(["ck-editor__editable","ck-editor__nested-editable"],t);e.setAttribute("contenteditable",t.isReadOnly?"false":"true",t);t.on("change:isReadOnly",function(n,o,i){e.setAttribute("contenteditable",i?"false":"true",t);});t.on("change:isFocused",function(n,o,i){if(i){e.addClass("ck-editor__nested-editable_focused",t);}else{e.removeClass("ck-editor__nested-editable_focused",t);}});Tx(t,e);return t;}function Ox(t,e){var n=t.getSelectedElement();if(n){var _o154=qx(t);if(_o154){return e.createRange(e.createPositionAt(n,_o154));}}return ob(t,e);}function zx(t,e){return function(n,o){var i=o.mapper,r=o.viewPosition;var s=i.findMappedViewAncestor(r);if(!e(s)){return;}var a=i.toModelElement(s);o.modelPosition=t.createPositionAt(a,r.isAtStart?"before":"after");};}function Mx(){return null;}function Nx(t,e){var n=e.createUIElement("div",{class:"ck ck-widget__selection-handle"},function(t){var e=this.toDomElement(t);var n=new v_();n.set("content",Cx);n.render();e.appendChild(n.element);return e;});e.insert(e.createPositionAt(t,0),n);e.addClass(["ck-widget_with-selection-handle"],t);}var Fx="widget-type-around";function Vx(t,e,n){return t&&Ex(t)&&!n.isInline(e);}function Lx(t){return t.closest(".ck-widget__type-around__button");}function Hx(t){return t.classList.contains("ck-widget__type-around__button_before")?"before":"after";}function jx(t,e){var n=t.closest(".ck-widget");return e.mapDomToView(n);}function qx(t){return t.getAttribute(Fx);}function Wx(t){var e=null;var n=t.model;var o=t.editing.view;var i=t.commands.get("input");if(Ed.isAndroid){o.document.on("beforeinput",function(t,e){return r(e);},{priority:"lowest"});}else{o.document.on("keydown",function(t,e){return r(e);},{priority:"lowest"});}o.document.on("compositionstart",s,{priority:"lowest"});o.document.on("compositionend",function(){e=n.createSelection(n.document.selection);},{priority:"lowest"});function r(t){if(Ed.isWindows&&mx(t,o.document)){return;}var r=n.document;var s=o.document.isComposing;var c=e&&e.isEqual(r.selection);e=null;if(!i.isEnabled){return;}if(Gx(t)||r.selection.isCollapsed){return;}if(s&&t.keyCode===229){return;}if(!s&&t.keyCode===229&&c){return;}a();}function s(){var t=n.document;var e=t.selection.rangeCount===1?t.selection.getFirstRange().isFlat:true;if(t.selection.isCollapsed||e){return;}a();}function a(){var t=i.buffer;t.lock();var e=t.batch;n.enqueueChange(e,function(){n.deleteContent(n.document.selection);});t.unlock();}}var Kx=[Vd("arrowUp"),Vd("arrowRight"),Vd("arrowDown"),Vd("arrowLeft"),9,16,17,18,19,20,27,33,34,35,36,45,91,93,144,145,173,174,175,176,177,178,179,255];for(var _t247=112;_t247<=135;_t247++){Kx.push(_t247);}function Gx(t){if(t.ctrlKey||t.metaKey){return true;}return Kx.includes(t.keyCode);}var $x='<svg viewBox="0 0 10 8" xmlns="http://www.w3.org/2000/svg"><path d="M9.055.263v3.972h-6.77M1 4.216l2-2.038m-2 2 2 2.038"/></svg>';var Ux=n(137);var Jx={injectType:"singletonStyleTag",attributes:{"data-cke":true}};Jx.insert="head";Jx.singleton=true;var Zx=Nh()(Ux.Z,Jx);var Yx=Ux.Z.locals||{};var Qx=["before","after"];var Xx=new DOMParser().parseFromString($x,"image/svg+xml").firstChild;var tE="ck-widget__type-around_disabled";var eE=/*#__PURE__*/function(_go9){_inherits(eE,_go9);var _super101=_createSuper(eE);function eE(t){var _this183;_classCallCheck(this,eE);_this183=_super101.call(this,t);_this183._currentFakeCaretModelElement=null;return _this183;}_createClass(eE,[{key:"init",value:function init(){var t=this.editor;var e=t.editing.view;this.on("change:isEnabled",function(n,o,i){e.change(function(t){var _iterator325=_createForOfIteratorHelper(e.document.roots),_step325;try{for(_iterator325.s();!(_step325=_iterator325.n()).done;){var _n222=_step325.value;if(i){t.removeClass(tE,_n222);}else{t.addClass(tE,_n222);}}}catch(err){_iterator325.e(err);}finally{_iterator325.f();}});if(!i){t.model.change(function(t){t.removeSelectionAttribute(Fx);});}});this._enableTypeAroundUIInjection();this._enableInsertingParagraphsOnButtonClick();this._enableInsertingParagraphsOnEnterKeypress();this._enableInsertingParagraphsOnTypingKeystroke();this._enableTypeAroundFakeCaretActivationUsingKeyboardArrows();this._enableDeleteIntegration();this._enableInsertContentIntegration();this._enableInsertObjectIntegration();this._enableDeleteContentIntegration();}},{key:"destroy",value:function destroy(){this._currentFakeCaretModelElement=null;}},{key:"_insertParagraph",value:function _insertParagraph(t,e){var n=this.editor;var o=n.editing.view;var i=n.model.schema.getAttributesWithProperty(t,"copyOnReplace",true);n.execute("insertParagraph",{position:n.model.createPositionAt(t,e),attributes:i});o.focus();o.scrollToTheSelection();}},{key:"_listenToIfEnabled",value:function _listenToIfEnabled(t,e,n,o){var _this184=this;this.listenTo(t,e,function(){if(_this184.isEnabled){n.apply(void 0,arguments);}},o);}},{key:"_insertParagraphAccordingToFakeCaretPosition",value:function _insertParagraphAccordingToFakeCaretPosition(){var t=this.editor;var e=t.model;var n=e.document.selection;var o=qx(n);if(!o){return false;}var i=n.getSelectedElement();this._insertParagraph(i,o);return true;}},{key:"_enableTypeAroundUIInjection",value:function _enableTypeAroundUIInjection(){var t=this.editor;var e=t.model.schema;var n=t.locale.t;var o={before:n("Insert paragraph before block"),after:n("Insert paragraph after block")};t.editing.downcastDispatcher.on("insert",function(t,n,i){var r=i.mapper.toViewElement(n.item);if(Vx(r,n.item,e)){nE(i.writer,o,r);}},{priority:"low"});}},{key:"_enableTypeAroundFakeCaretActivationUsingKeyboardArrows",value:function _enableTypeAroundFakeCaretActivationUsingKeyboardArrows(){var _this185=this;var t=this.editor;var e=t.model;var n=e.document.selection;var o=e.schema;var i=t.editing.view;this._listenToIfEnabled(i.document,"arrowKey",function(t,e){_this185._handleArrowKeyPress(t,e);},{context:[Ex,"$text"],priority:"high"});this._listenToIfEnabled(n,"change:range",function(e,n){if(!n.directChange){return;}t.model.change(function(t){t.removeSelectionAttribute(Fx);});});this._listenToIfEnabled(e.document,"change:data",function(){var e=n.getSelectedElement();if(e){var _n223=t.editing.mapper.toViewElement(e);if(Vx(_n223,e,o)){return;}}t.model.change(function(t){t.removeSelectionAttribute(Fx);});});this._listenToIfEnabled(t.editing.downcastDispatcher,"selection",function(t,e,n){var i=n.writer;if(_this185._currentFakeCaretModelElement){var _t248=n.mapper.toViewElement(_this185._currentFakeCaretModelElement);if(_t248){i.removeClass(Qx.map(r),_t248);_this185._currentFakeCaretModelElement=null;}}var s=e.selection.getSelectedElement();if(!s){return;}var a=n.mapper.toViewElement(s);if(!Vx(a,s,o)){return;}var c=qx(e.selection);if(!c){return;}i.addClass(r(c),a);_this185._currentFakeCaretModelElement=s;});this._listenToIfEnabled(t.ui.focusTracker,"change:isFocused",function(e,n,o){if(!o){t.model.change(function(t){t.removeSelectionAttribute(Fx);});}});function r(t){return"ck-widget_type-around_show-fake-caret_".concat(t);}}},{key:"_handleArrowKeyPress",value:function _handleArrowKeyPress(t,e){var n=this.editor;var o=n.model;var i=o.document.selection;var r=o.schema;var s=n.editing.view;var a=e.keyCode;var c=Kd(a,n.locale.contentLanguageDirection);var l=s.document.selection.getSelectedElement();var d=n.editing.mapper.toModelElement(l);var h;if(Vx(l,d,r)){h=this._handleArrowKeyPressOnSelectedWidget(c);}else if(i.isCollapsed){h=this._handleArrowKeyPressWhenSelectionNextToAWidget(c);}else if(!e.shiftKey){h=this._handleArrowKeyPressWhenNonCollapsedSelection(c);}if(h){e.preventDefault();t.stop();}}},{key:"_handleArrowKeyPressOnSelectedWidget",value:function _handleArrowKeyPressOnSelectedWidget(t){var e=this.editor;var n=e.model;var o=n.document.selection;var i=qx(o);return n.change(function(e){if(i){var _n224=i===(t?"after":"before");if(!_n224){e.removeSelectionAttribute(Fx);return true;}}else{e.setSelectionAttribute(Fx,t?"after":"before");return true;}return false;});}},{key:"_handleArrowKeyPressWhenSelectionNextToAWidget",value:function _handleArrowKeyPressWhenSelectionNextToAWidget(t){var e=this.editor;var n=e.model;var o=n.schema;var i=e.plugins.get("Widget");var r=i._getObjectElementNextToSelection(t);var s=e.editing.mapper.toViewElement(r);if(Vx(s,r,o)){n.change(function(e){i._setSelectionOverElement(r);e.setSelectionAttribute(Fx,t?"before":"after");});return true;}return false;}},{key:"_handleArrowKeyPressWhenNonCollapsedSelection",value:function _handleArrowKeyPressWhenNonCollapsedSelection(t){var e=this.editor;var n=e.model;var o=n.schema;var i=e.editing.mapper;var r=n.document.selection;var s=t?r.getLastPosition().nodeBefore:r.getFirstPosition().nodeAfter;var a=i.toViewElement(s);if(Vx(a,s,o)){n.change(function(e){e.setSelection(s,"on");e.setSelectionAttribute(Fx,t?"after":"before");});return true;}return false;}},{key:"_enableInsertingParagraphsOnButtonClick",value:function _enableInsertingParagraphsOnButtonClick(){var _this186=this;var t=this.editor;var e=t.editing.view;this._listenToIfEnabled(e.document,"mousedown",function(n,o){var i=Lx(o.domTarget);if(!i){return;}var r=Hx(i);var s=jx(i,e.domConverter);var a=t.editing.mapper.toModelElement(s);_this186._insertParagraph(a,r);o.preventDefault();n.stop();});}},{key:"_enableInsertingParagraphsOnEnterKeypress",value:function _enableInsertingParagraphsOnEnterKeypress(){var _this187=this;var t=this.editor;var e=t.model.document.selection;var n=t.editing.view;this._listenToIfEnabled(n.document,"enter",function(n,o){if(n.eventPhase!="atTarget"){return;}var i=e.getSelectedElement();var r=t.editing.mapper.toViewElement(i);var s=t.model.schema;var a;if(_this187._insertParagraphAccordingToFakeCaretPosition()){a=true;}else if(Vx(r,i,s)){_this187._insertParagraph(i,o.isSoft?"before":"after");a=true;}if(a){o.preventDefault();n.stop();}},{context:Ex});}},{key:"_enableInsertingParagraphsOnTypingKeystroke",value:function _enableInsertingParagraphsOnTypingKeystroke(){var _this188=this;var t=this.editor;var e=t.editing.view;var n=[Nd.enter,Nd["delete"],Nd.backspace];this._listenToIfEnabled(e.document,"keydown",function(t,e){if(!n.includes(e.keyCode)&&!Gx(e)){_this188._insertParagraphAccordingToFakeCaretPosition();}},{priority:"high"});}},{key:"_enableDeleteIntegration",value:function _enableDeleteIntegration(){var t=this.editor;var e=t.editing.view;var n=t.model;var o=n.schema;this._listenToIfEnabled(e.document,"delete",function(e,i){if(e.eventPhase!="atTarget"){return;}var r=qx(n.document.selection);if(!r){return;}var s=i.direction;var a=n.document.selection.getSelectedElement();var c=r==="before";var l=s=="forward";var d=c===l;if(d){t.execute("delete",{selection:n.createSelection(a,"on")});}else{var _e229=o.getNearestSelectionRange(n.createPositionAt(a,r),s);if(_e229){if(!_e229.isCollapsed){n.change(function(n){n.setSelection(_e229);t.execute(l?"deleteForward":"delete");});}else{var _i123=n.createSelection(_e229.start);n.modifySelection(_i123,{direction:s});if(!_i123.focus.isEqual(_e229.start)){n.change(function(n){n.setSelection(_e229);t.execute(l?"deleteForward":"delete");});}else{var _t249=rE(o,_e229.start.parent);n.deleteContent(n.createSelection(_t249,"on"),{doNotAutoparagraph:true});}}}}i.preventDefault();e.stop();},{context:Ex});}},{key:"_enableInsertContentIntegration",value:function _enableInsertContentIntegration(){var t=this.editor;var e=this.editor.model;var n=e.document.selection;this._listenToIfEnabled(t.model,"insertContent",function(t,_ref55){var _ref56=_slicedToArray(_ref55,2),o=_ref56[0],i=_ref56[1];if(i&&!i.is("documentSelection")){return;}var r=qx(n);if(!r){return;}t.stop();return e.change(function(t){var i=n.getSelectedElement();var s=e.createPositionAt(i,r);var a=t.createSelection(s);var c=e.insertContent(o,a);t.setSelection(a);return c;});},{priority:"high"});}},{key:"_enableInsertObjectIntegration",value:function _enableInsertObjectIntegration(){var t=this.editor;var e=this.editor.model;var n=e.document.selection;this._listenToIfEnabled(t.model,"insertObject",function(t,e){var _e230=_slicedToArray(e,4),o=_e230[1],_e230$=_e230[3],i=_e230$===void 0?{}:_e230$;if(o&&!o.is("documentSelection")){return;}var r=qx(n);if(!r){return;}i.findOptimalPosition=r;e[3]=i;},{priority:"high"});}},{key:"_enableDeleteContentIntegration",value:function _enableDeleteContentIntegration(){var t=this.editor;var e=this.editor.model;var n=e.document.selection;this._listenToIfEnabled(t.model,"deleteContent",function(t,_ref57){var _ref58=_slicedToArray(_ref57,1),e=_ref58[0];if(e&&!e.is("documentSelection")){return;}var o=qx(n);if(o){t.stop();}},{priority:"high"});}}],[{key:"pluginName",get:function get(){return"WidgetTypeAround";}},{key:"requires",get:function get(){return[lx,bx];}}]);return eE;}(go);function nE(t,e,n){var o=t.createUIElement("div",{class:"ck ck-reset_all ck-widget__type-around"},function(t){var n=this.toDomElement(t);oE(n,e);iE(n);return n;});t.insert(t.createPositionAt(n,"end"),o);}function oE(t,e){var _iterator326=_createForOfIteratorHelper(Qx),_step326;try{for(_iterator326.s();!(_step326=_iterator326.n()).done;){var _n225=_step326.value;var _o155=new Lw({tag:"div",attributes:{class:["ck","ck-widget__type-around__button","ck-widget__type-around__button_".concat(_n225)],title:e[_n225]},children:[t.ownerDocument.importNode(Xx,true)]});t.appendChild(_o155.render());}}catch(err){_iterator326.e(err);}finally{_iterator326.f();}}function iE(t){var e=new Lw({tag:"div",attributes:{class:["ck","ck-widget__type-around__fake-caret"]}});t.appendChild(e.render());}function rE(t,e){var n=e;var _iterator327=_createForOfIteratorHelper(e.getAncestors({parentFirst:true})),_step327;try{for(_iterator327.s();!(_step327=_iterator327.n()).done;){var _o156=_step327.value;if(_o156.childCount>1||t.isLimit(_o156)){break;}n=_o156;}}catch(err){_iterator327.e(err);}finally{_iterator327.f();}return n;}function sE(t){var e=t.model;return function(n,o){var i=o.keyCode==Nd.arrowup;var r=o.keyCode==Nd.arrowdown;var s=o.shiftKey;var a=e.document.selection;if(!i&&!r){return;}var c=r;if(s&&hE(a,c)){return;}var l=aE(t,a,c);if(!l){return;}if(l.isCollapsed){if(a.isCollapsed){return;}else if(s){return;}}if(l.isCollapsed||dE(t,l,c)){e.change(function(t){var n=c?l.end:l.start;if(s){var _o157=e.createSelection(a.anchor);_o157.setFocus(n);t.setSelection(_o157);}else{t.setSelection(n);}});n.stop();o.preventDefault();o.stopPropagation();}};}function aE(t,e,n){var o=t.model;if(n){var _t250=e.isCollapsed?e.focus:e.getLastPosition();var _n226=cE(o,_t250,"forward");if(!_n226){return null;}var _i124=o.createRange(_t250,_n226);var _r57=lE(o.schema,_i124,"backward");if(_r57){return o.createRange(_t250,_r57);}return null;}else{var _t251=e.isCollapsed?e.focus:e.getFirstPosition();var _n227=cE(o,_t251,"backward");if(!_n227){return null;}var _i125=o.createRange(_n227,_t251);var _r58=lE(o.schema,_i125,"forward");if(_r58){return o.createRange(_r58,_t251);}return null;}}function cE(t,e,n){var o=t.schema;var i=t.createRangeIn(e.root);var r=n=="forward"?"elementStart":"elementEnd";var _iterator328=_createForOfIteratorHelper(i.getWalker({startPosition:e,direction:n})),_step328;try{for(_iterator328.s();!(_step328=_iterator328.n()).done;){var _step328$value=_step328.value,_t252=_step328$value.previousPosition,_s29=_step328$value.item,_a18=_step328$value.type;if(o.isLimit(_s29)&&!o.isInline(_s29)){return _t252;}if(_a18==r&&o.isBlock(_s29)){return null;}}}catch(err){_iterator328.e(err);}finally{_iterator328.f();}return null;}function lE(t,e,n){var o=n=="backward"?e.end:e.start;if(t.checkChild(o,"$text")){return o;}var _iterator329=_createForOfIteratorHelper(e.getWalker({direction:n})),_step329;try{for(_iterator329.s();!(_step329=_iterator329.n()).done;){var _o158=_step329.value.nextPosition;if(t.checkChild(_o158,"$text")){return _o158;}}}catch(err){_iterator329.e(err);}finally{_iterator329.f();}return null;}function dE(t,e,n){var o=t.model;var i=t.view.domConverter;if(n){var _t253=o.createSelection(e.start);o.modifySelection(_t253);if(!_t253.focus.isAtEnd&&!e.start.isEqual(_t253.focus)){e=o.createRange(_t253.focus,e.end);}}var r=t.mapper.toViewRange(e);var s=i.viewRangeToDom(r);var a=Yf.getDomRangeRects(s);var c;var _iterator330=_createForOfIteratorHelper(a),_step330;try{for(_iterator330.s();!(_step330=_iterator330.n()).done;){var _t254=_step330.value;if(c===undefined){c=Math.round(_t254.bottom);continue;}if(Math.round(_t254.top)>=c){return false;}c=Math.max(c,Math.round(_t254.bottom));}}catch(err){_iterator330.e(err);}finally{_iterator330.f();}return true;}function hE(t,e){return!t.isCollapsed&&t.isBackward==e;}var uE=n(507);var fE={injectType:"singletonStyleTag",attributes:{"data-cke":true}};fE.insert="head";fE.singleton=true;var gE=Nh()(uE.Z,fE);var pE=uE.Z.locals||{};var mE=/*#__PURE__*/function(_go10){_inherits(mE,_go10);var _super102=_createSuper(mE);function mE(){_classCallCheck(this,mE);return _super102.apply(this,arguments);}_createClass(mE,[{key:"init",value:function init(){var _this189=this;var t=this.editor;var e=t.editing.view;var n=e.document;this._previouslySelected=new Set();this.editor.editing.downcastDispatcher.on("selection",function(e,n,o){var i=o.writer;var r=n.selection;if(r.isCollapsed){return;}var s=r.getSelectedElement();if(!s){return;}var a=t.editing.mapper.toViewElement(s);if(!Ex(a)){return;}if(!o.consumable.consume(r,"selection")){return;}i.setSelection(i.createRangeOn(a),{fake:true,label:Ix(a)});});this.editor.editing.downcastDispatcher.on("selection",function(t,e,n){_this189._clearPreviouslySelectedWidgets(n.writer);var o=n.writer;var i=o.document.selection;var r=null;var _iterator331=_createForOfIteratorHelper(i.getRanges()),_step331;try{for(_iterator331.s();!(_step331=_iterator331.n()).done;){var _t255=_step331.value;var _iterator332=_createForOfIteratorHelper(_t255),_step332;try{for(_iterator332.s();!(_step332=_iterator332.n()).done;){var _e231=_step332.value;var _t256=_e231.item;if(Ex(_t256)&&!bE(_t256,r)){o.addClass(xx,_t256);_this189._previouslySelected.add(_t256);r=_t256;}}}catch(err){_iterator332.e(err);}finally{_iterator332.f();}}}catch(err){_iterator331.e(err);}finally{_iterator331.f();}},{priority:"low"});e.addObserver(UC);this.listenTo(n,"mousedown",function(){return _this189._onMousedown.apply(_this189,arguments);});this.listenTo(n,"arrowKey",function(){_this189._handleSelectionChangeOnArrowKeyPress.apply(_this189,arguments);},{context:[Ex,"$text"]});this.listenTo(n,"arrowKey",function(){_this189._preventDefaultOnArrowKeyPress.apply(_this189,arguments);},{context:"$root"});this.listenTo(n,"arrowKey",sE(this.editor.editing),{context:"$text"});this.listenTo(n,"delete",function(t,e){if(_this189._handleDelete(e.direction=="forward")){e.preventDefault();t.stop();}},{context:"$root"});}},{key:"_onMousedown",value:function _onMousedown(t,e){var n=this.editor;var o=n.editing.view;var i=o.document;var r=e.target;if(kE(r)){if((Ed.isSafari||Ed.isGecko)&&e.domEvent.detail>=3){var _t257=n.editing.mapper;var _o159=r.is("attributeElement")?r.findAncestor(function(t){return!t.is("attributeElement");}):r;var _i126=_t257.toModelElement(_o159);e.preventDefault();this.editor.model.change(function(t){t.setSelection(_i126,"in");});}return;}if(!Ex(r)){r=r.findAncestor(Ex);if(!r){return;}}if(Ed.isAndroid){e.preventDefault();}if(!i.isFocused){o.focus();}var s=n.editing.mapper.toModelElement(r);this._setSelectionOverElement(s);}},{key:"_handleSelectionChangeOnArrowKeyPress",value:function _handleSelectionChangeOnArrowKeyPress(t,e){var n=e.keyCode;var o=this.editor.model;var i=o.schema;var r=o.document.selection;var s=r.getSelectedElement();var a=qd(n,this.editor.locale.contentLanguageDirection);var c=a=="down"||a=="right";var l=a=="up"||a=="down";if(s&&i.isObject(s)){var _n228=c?r.getLastPosition():r.getFirstPosition();var _s30=i.getNearestSelectionRange(_n228,c?"forward":"backward");if(_s30){o.change(function(t){t.setSelection(_s30);});e.preventDefault();t.stop();}return;}if(!r.isCollapsed&&!e.shiftKey){var _n229=r.getFirstPosition();var _s31=r.getLastPosition();var _a19=_n229.nodeAfter;var _l5=_s31.nodeBefore;if(_a19&&i.isObject(_a19)||_l5&&i.isObject(_l5)){o.change(function(t){t.setSelection(c?_s31:_n229);});e.preventDefault();t.stop();}return;}if(!r.isCollapsed){return;}var d=this._getObjectElementNextToSelection(c);if(d&&i.isObject(d)){if(i.isInline(d)&&l){return;}this._setSelectionOverElement(d);e.preventDefault();t.stop();}}},{key:"_preventDefaultOnArrowKeyPress",value:function _preventDefaultOnArrowKeyPress(t,e){var n=this.editor.model;var o=n.schema;var i=n.document.selection.getSelectedElement();if(i&&o.isObject(i)){e.preventDefault();t.stop();}}},{key:"_handleDelete",value:function _handleDelete(t){var _this190=this;if(this.editor.isReadOnly){return;}var e=this.editor.model.document;var n=e.selection;if(!n.isCollapsed){return;}var o=this._getObjectElementNextToSelection(t);if(o){this.editor.model.change(function(t){var e=n.anchor.parent;while(e.isEmpty){var _n230=e;e=_n230.parent;t.remove(_n230);}_this190._setSelectionOverElement(o);});return true;}}},{key:"_setSelectionOverElement",value:function _setSelectionOverElement(t){this.editor.model.change(function(e){e.setSelection(e.createRangeOn(t));});}},{key:"_getObjectElementNextToSelection",value:function _getObjectElementNextToSelection(t){var e=this.editor.model;var n=e.schema;var o=e.document.selection;var i=e.createSelection(o);e.modifySelection(i,{direction:t?"forward":"backward"});if(i.isEqual(o)){return null;}var r=t?i.focus.nodeBefore:i.focus.nodeAfter;if(!!r&&n.isObject(r)){return r;}return null;}},{key:"_clearPreviouslySelectedWidgets",value:function _clearPreviouslySelectedWidgets(t){var _iterator333=_createForOfIteratorHelper(this._previouslySelected),_step333;try{for(_iterator333.s();!(_step333=_iterator333.n()).done;){var _e232=_step333.value;t.removeClass(xx,_e232);}}catch(err){_iterator333.e(err);}finally{_iterator333.f();}this._previouslySelected.clear();}}],[{key:"pluginName",get:function get(){return"Widget";}},{key:"requires",get:function get(){return[eE,bx];}}]);return mE;}(go);function kE(t){while(t){if(t.is("editableElement")&&!t.is("rootElement")){return true;}if(Ex(t)){return false;}t=t.parent;}return false;}function bE(t,e){if(!e){return false;}return Array.from(t.getAncestors()).includes(e);}var wE="Expected a function";function _E(t,e,n){var o=true,i=true;if(typeof t!="function"){throw new TypeError(wE);}if(M(n)){o="leading"in n?!!n.leading:o;i="trailing"in n?!!n.trailing:i;}return Hf(t,e,{leading:o,maxWait:e,trailing:i});}var vE=_E;var AE=n(390);var CE={injectType:"singletonStyleTag",attributes:{"data-cke":true}};CE.insert="head";CE.singleton=true;var yE=Nh()(AE.Z,CE);var xE=AE.Z.locals||{};var EE=/*#__PURE__*/function(_go11){_inherits(EE,_go11);var _super103=_createSuper(EE);function EE(){_classCallCheck(this,EE);return _super103.apply(this,arguments);}_createClass(EE,[{key:"init",value:function init(){var _this191=this;var t=this.editor;var e=t.editing.view;this._draggedRange=null;this._draggingUid="";this._draggableElement=null;this._updateDropMarkerThrottled=vE(function(t){return _this191._updateDropMarker(t);},40);this._removeDropMarkerDelayed=OE(function(){return _this191._removeDropMarker();},40);this._clearDraggableAttributesDelayed=OE(function(){return _this191._clearDraggableAttributes();},40);e.addObserver(Yy);e.addObserver(UC);this._setupDragging();this._setupContentInsertionIntegration();this._setupClipboardInputIntegration();this._setupDropMarker();this._setupDraggableAttributeHandling();this.listenTo(t,"change:isReadOnly",function(t,e,n){if(n){_this191.forceDisabled("readOnlyMode");}else{_this191.clearForceDisabled("readOnlyMode");}});this.on("change:isEnabled",function(t,e,n){if(!n){_this191._finalizeDragging(false);}});if(Ed.isAndroid){this.forceDisabled("noAndroidSupport");}}},{key:"destroy",value:function destroy(){if(this._draggedRange){this._draggedRange.detach();this._draggedRange=null;}this._updateDropMarkerThrottled.cancel();this._removeDropMarkerDelayed.cancel();this._clearDraggableAttributesDelayed.cancel();return _get(_getPrototypeOf(EE.prototype),"destroy",this).call(this);}},{key:"_setupDragging",value:function _setupDragging(){var _this192=this;var t=this.editor;var e=t.model;var n=e.document;var o=t.editing.view;var i=o.document;this.listenTo(i,"dragstart",function(o,r){var a=n.selection;if(r.target&&r.target.is("editableElement")){r.preventDefault();return;}var c=r.target?zE(r.target):null;if(c){var _n231=t.editing.mapper.toModelElement(c);_this192._draggedRange=Ug.fromRange(e.createRangeOn(_n231));if(t.plugins.has("WidgetToolbarRepository")){t.plugins.get("WidgetToolbarRepository").forceDisabled("dragDrop");}}else if(!i.selection.isCollapsed){var _t258=i.selection.getSelectedElement();if(!_t258||!Ex(_t258)){_this192._draggedRange=Ug.fromRange(a.getFirstRange());}}if(!_this192._draggedRange){r.preventDefault();return;}_this192._draggingUid=s();r.dataTransfer.effectAllowed=_this192.isEnabled?"copyMove":"copy";r.dataTransfer.setData("application/ckeditor5-dragging-uid",_this192._draggingUid);var l=e.createSelection(_this192._draggedRange.toRange());var d=t.data.toView(e.getSelectedContent(l));i.fire("clipboardOutput",{dataTransfer:r.dataTransfer,content:d,method:o.name});if(!_this192.isEnabled){_this192._draggedRange.detach();_this192._draggedRange=null;_this192._draggingUid="";}},{priority:"low"});this.listenTo(i,"dragend",function(t,e){_this192._finalizeDragging(!e.dataTransfer.isCanceled&&e.dataTransfer.dropEffect=="move");},{priority:"low"});this.listenTo(i,"dragenter",function(){if(!_this192.isEnabled){return;}o.focus();});this.listenTo(i,"dragleave",function(){_this192._removeDropMarkerDelayed();});this.listenTo(i,"dragging",function(e,n){if(!_this192.isEnabled){n.dataTransfer.dropEffect="none";return;}_this192._removeDropMarkerDelayed.cancel();var o=DE(t,n.targetRanges,n.target);if(!_this192._draggedRange){n.dataTransfer.dropEffect="copy";}if(!Ed.isGecko){if(n.dataTransfer.effectAllowed=="copy"){n.dataTransfer.dropEffect="copy";}else if(["all","copyMove"].includes(n.dataTransfer.effectAllowed)){n.dataTransfer.dropEffect="move";}}if(o){_this192._updateDropMarkerThrottled(o);}},{priority:"low"});}},{key:"_setupClipboardInputIntegration",value:function _setupClipboardInputIntegration(){var _this193=this;var t=this.editor;var e=t.editing.view;var n=e.document;this.listenTo(n,"clipboardInput",function(e,n){if(n.method!="drop"){return;}var o=DE(t,n.targetRanges,n.target);_this193._removeDropMarker();if(!o){_this193._finalizeDragging(false);e.stop();return;}if(_this193._draggedRange&&_this193._draggingUid!=n.dataTransfer.getData("application/ckeditor5-dragging-uid")){_this193._draggedRange.detach();_this193._draggedRange=null;_this193._draggingUid="";}var i=RE(n.dataTransfer)=="move";if(i&&_this193._draggedRange&&_this193._draggedRange.containsRange(o,true)){_this193._finalizeDragging(false);e.stop();return;}n.targetRanges=[t.editing.mapper.toViewRange(o)];},{priority:"high"});}},{key:"_setupContentInsertionIntegration",value:function _setupContentInsertionIntegration(){var _this194=this;var t=this.editor.plugins.get(ox);t.on("contentInsertion",function(t,e){if(!_this194.isEnabled||e.method!=="drop"){return;}var n=e.targetRanges.map(function(t){return _this194.editor.editing.mapper.toModelRange(t);});_this194.editor.model.change(function(t){return t.setSelection(n);});},{priority:"high"});t.on("contentInsertion",function(t,e){if(!_this194.isEnabled||e.method!=="drop"){return;}var n=RE(e.dataTransfer)=="move";var o=!e.resultRange||!e.resultRange.isCollapsed;_this194._finalizeDragging(o&&n);},{priority:"lowest"});}},{key:"_setupDraggableAttributeHandling",value:function _setupDraggableAttributeHandling(){var _this195=this;var t=this.editor;var e=t.editing.view;var n=e.document;this.listenTo(n,"mousedown",function(o,i){if(Ed.isAndroid||!i){return;}_this195._clearDraggableAttributesDelayed.cancel();var r=zE(i.target);if(Ed.isBlink&&!t.isReadOnly&&!r&&!n.selection.isCollapsed){var _t259=n.selection.getSelectedElement();if(!_t259||!Ex(_t259)){r=n.selection.editableElement;}}if(r){e.change(function(t){t.setAttribute("draggable","true",r);});_this195._draggableElement=t.editing.mapper.toModelElement(r);}});this.listenTo(n,"mouseup",function(){if(!Ed.isAndroid){_this195._clearDraggableAttributesDelayed();}});}},{key:"_clearDraggableAttributes",value:function _clearDraggableAttributes(){var _this196=this;var t=this.editor.editing;t.view.change(function(e){if(_this196._draggableElement&&_this196._draggableElement.root.rootName!="$graveyard"){e.removeAttribute("draggable",t.mapper.toViewElement(_this196._draggableElement));}_this196._draggableElement=null;});}},{key:"_setupDropMarker",value:function _setupDropMarker(){var t=this.editor;t.conversion.for("editingDowncast").markerToHighlight({model:"drop-target",view:{classes:["ck-clipboard-drop-target-range"]}});t.conversion.for("editingDowncast").markerToElement({model:"drop-target",view:function view(e,_ref59){var n=_ref59.writer;var o=t.model.schema.checkChild(e.markerRange.start,"$text");if(!o){return;}return n.createUIElement("span",{class:"ck ck-clipboard-drop-target-position"},function(t){var e=this.toDomElement(t);e.innerHTML="&NoBreak;<span></span>&NoBreak;";return e;});}});}},{key:"_updateDropMarker",value:function _updateDropMarker(t){var e=this.editor;var n=e.model.markers;e.model.change(function(e){if(n.has("drop-target")){if(!n.get("drop-target").getRange().isEqual(t)){e.updateMarker("drop-target",{range:t});}}else{e.addMarker("drop-target",{range:t,usingOperation:false,affectsData:false});}});}},{key:"_removeDropMarker",value:function _removeDropMarker(){var t=this.editor.model;this._removeDropMarkerDelayed.cancel();this._updateDropMarkerThrottled.cancel();if(t.markers.has("drop-target")){t.change(function(t){t.removeMarker("drop-target");});}}},{key:"_finalizeDragging",value:function _finalizeDragging(t){var e=this.editor;var n=e.model;this._removeDropMarker();this._clearDraggableAttributes();if(e.plugins.has("WidgetToolbarRepository")){e.plugins.get("WidgetToolbarRepository").clearForceDisabled("dragDrop");}this._draggingUid="";if(!this._draggedRange){return;}if(t&&this.isEnabled){n.deleteContent(n.createSelection(this._draggedRange),{doNotAutoparagraph:true});}this._draggedRange.detach();this._draggedRange=null;}}],[{key:"pluginName",get:function get(){return"DragDrop";}},{key:"requires",get:function get(){return[ox,mE];}}]);return EE;}(go);function DE(t,e,n){var o=t.model;var i=t.editing.mapper;var r=null;var s=e?e[0].start:null;if(n.is("uiElement")){n=n.parent;}r=SE(t,n);if(r){return r;}var a=IE(t,n);var c=s?i.toModelPosition(s):null;if(!c){return PE(t,a);}r=TE(t,c,a);if(r){return r;}r=o.schema.getNearestSelectionRange(c,Ed.isGecko?"forward":"backward");if(r){return r;}return BE(t,c.parent);}function SE(t,e){var n=t.model;var o=t.editing.mapper;if(Ex(e)){return n.createRangeOn(o.toModelElement(e));}if(!e.is("editableElement")){var _t260=e.findAncestor(function(t){return Ex(t)||t.is("editableElement");});if(Ex(_t260)){return n.createRangeOn(o.toModelElement(_t260));}}return null;}function PE(t,e){var n=t.model;var o=n.schema;var i=n.createPositionAt(e,0);return o.getNearestSelectionRange(i,"forward");}function TE(t,e,n){var o=t.model;if(!o.schema.checkChild(n,"$block")){return null;}var i=o.createPositionAt(n,0);var r=e.path.slice(0,i.path.length);var s=o.createPositionFromPath(e.root,r);var a=s.nodeAfter;if(a&&o.schema.isObject(a)){return o.createRangeOn(a);}return null;}function BE(t,e){var n=t.model;while(e){if(n.schema.isObject(e)){return n.createRangeOn(e);}e=e.parent;}}function IE(t,e){var n=t.editing.mapper;var o=t.editing.view;var i=n.toModelElement(e);if(i){return i;}var r=o.createPositionBefore(e);var s=n.findMappedViewAncestor(r);return n.toModelElement(s);}function RE(t){if(Ed.isGecko){return t.dropEffect;}return["all","copyMove"].includes(t.effectAllowed)?"move":"copy";}function OE(t,e){var n;function o(){for(var _len21=arguments.length,i=new Array(_len21),_key21=0;_key21<_len21;_key21++){i[_key21]=arguments[_key21];}o.cancel();n=setTimeout(function(){return t.apply(void 0,i);},e);}o.cancel=function(){clearTimeout(n);};return o;}function zE(t){if(t.is("editableElement")){return null;}if(t.hasClass("ck-widget__selection-handle")){return t.findAncestor(Ex);}if(Ex(t)){return t;}var e=t.findAncestor(function(t){return Ex(t)||t.is("editableElement");});if(Ex(e)){return e;}return null;}var ME=/*#__PURE__*/function(_go12){_inherits(ME,_go12);var _super104=_createSuper(ME);function ME(){_classCallCheck(this,ME);return _super104.apply(this,arguments);}_createClass(ME,[{key:"init",value:function init(){var t=this.editor;var e=t.model;var n=t.editing.view;var o=n.document;var i=e.document.selection;var r=false;n.addObserver(Yy);this.listenTo(o,"keydown",function(t,e){r=e.shiftKey;});t.plugins.get(ox).on("contentInsertion",function(t,n){if(!r&&!NE(n.content,e.schema)){return;}e.change(function(t){var o=Array.from(i.getAttributes()).filter(function(_ref60){var _ref61=_slicedToArray(_ref60,1),t=_ref61[0];return e.schema.getAttributeProperties(t).isFormatting;});if(!i.isCollapsed){e.deleteContent(i,{doNotAutoparagraph:true});}o.push.apply(o,_toConsumableArray(i.getAttributes()));var r=t.createRangeIn(n.content);var _iterator334=_createForOfIteratorHelper(r.getItems()),_step334;try{for(_iterator334.s();!(_step334=_iterator334.n()).done;){var _e233=_step334.value;if(_e233.is("$textProxy")){t.setAttributes(o,_e233);}}}catch(err){_iterator334.e(err);}finally{_iterator334.f();}});});}}],[{key:"pluginName",get:function get(){return"PastePlainText";}},{key:"requires",get:function get(){return[ox];}}]);return ME;}(go);function NE(t,e){if(t.childCount>1){return false;}var n=t.getChild(0);if(e.isObject(n)){return false;}return _toConsumableArray(n.getAttributeKeys()).length==0;}var FE=/*#__PURE__*/function(_go13){_inherits(FE,_go13);var _super105=_createSuper(FE);function FE(){_classCallCheck(this,FE);return _super105.apply(this,arguments);}_createClass(FE,null,[{key:"pluginName",get:function get(){return"Clipboard";}},{key:"requires",get:function get(){return[ox,EE,ME];}}]);return FE;}(go);var VE=/*#__PURE__*/function(_mo4){_inherits(VE,_mo4);var _super106=_createSuper(VE);function VE(){_classCallCheck(this,VE);return _super106.apply(this,arguments);}_createClass(VE,[{key:"execute",value:function execute(){var _this197=this;var t=this.editor.model;var e=t.document;t.change(function(n){HE(t,n,e.selection);_this197.fire("afterExecute",{writer:n});});}},{key:"refresh",value:function refresh(){var t=this.editor.model;var e=t.document;this.isEnabled=LE(t.schema,e.selection);}}]);return VE;}(mo);function LE(t,e){if(e.rangeCount>1){return false;}var n=e.anchor;if(!n||!t.checkChild(n,"softBreak")){return false;}var o=e.getFirstRange();var i=o.start.parent;var r=o.end.parent;if((qE(i,t)||qE(r,t))&&i!==r){return false;}return true;}function HE(t,e,n){var o=n.isCollapsed;var i=n.getFirstRange();var r=i.start.parent;var s=i.end.parent;var a=r==s;if(o){var _o160=ix(t.schema,n.getAttributes());jE(t,e,i.end);e.removeSelectionAttribute(n.getAttributeKeys());e.setSelectionAttribute(_o160);}else{var _o161=!(i.start.isAtStart&&i.end.isAtEnd);t.deleteContent(n,{leaveUnmerged:_o161});if(a){jE(t,e,n.focus);}else{if(_o161){e.setSelection(s,0);}}}}function jE(t,e,n){var o=e.createElement("softBreak");t.insertContent(o,n);e.setSelection(o,"after");}function qE(t,e){if(t.is("rootElement")){return false;}return e.isLimit(t)||qE(t.parent,e);}var WE=/*#__PURE__*/function(_go14){_inherits(WE,_go14);var _super107=_createSuper(WE);function WE(){_classCallCheck(this,WE);return _super107.apply(this,arguments);}_createClass(WE,[{key:"init",value:function init(){var t=this.editor;var e=t.model.schema;var n=t.conversion;var o=t.editing.view;var i=o.document;e.register("softBreak",{allowWhere:"$text",isInline:true});n.for("upcast").elementToElement({model:"softBreak",view:"br"});n.for("downcast").elementToElement({model:"softBreak",view:function view(t,_ref62){var e=_ref62.writer;return e.createEmptyElement("br");}});o.addObserver(cx);t.commands.add("shiftEnter",new VE(t));this.listenTo(i,"enter",function(e,n){n.preventDefault();if(!n.isSoft){return;}t.execute("shiftEnter");o.scrollToTheSelection();},{priority:"low"});}}],[{key:"pluginName",get:function get(){return"ShiftEnter";}}]);return WE;}(go);var KE=/*#__PURE__*/function(_mo5){_inherits(KE,_mo5);var _super108=_createSuper(KE);function KE(t){var _this198;_classCallCheck(this,KE);_this198=_super108.call(this,t);_this198.affectsData=false;return _this198;}_createClass(KE,[{key:"execute",value:function execute(){var t=this.editor.model;var e=t.document.selection;var n=t.schema.getLimitElement(e);if(e.containsEntireContent(n)||!GE(t.schema,n)){do{n=n.parent;if(!n){return;}}while(!GE(t.schema,n));}t.change(function(t){t.setSelection(n,"in");});}}]);return KE;}(mo);function GE(t,e){return t.isLimit(e)&&(t.checkChild(e,"$text")||t.checkChild(e,"paragraph"));}var $E=Ld("Ctrl+A");var UE=/*#__PURE__*/function(_go15){_inherits(UE,_go15);var _super109=_createSuper(UE);function UE(){_classCallCheck(this,UE);return _super109.apply(this,arguments);}_createClass(UE,[{key:"init",value:function init(){var t=this.editor;var e=t.editing.view;var n=e.document;t.commands.add("selectAll",new KE(t));this.listenTo(n,"keydown",function(e,n){if(Vd(n)===$E){t.execute("selectAll");n.preventDefault();}});}}],[{key:"pluginName",get:function get(){return"SelectAllEditing";}}]);return UE;}(go);var JE='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M.75 15.5a.75.75 0 0 1 .75.75V18l.008.09A.5.5 0 0 0 2 18.5h1.75a.75.75 0 1 1 0 1.5H1.5l-.144-.007a1.5 1.5 0 0 1-1.35-1.349L0 18.5v-2.25a.75.75 0 0 1 .75-.75zm18.5 0a.75.75 0 0 1 .75.75v2.25l-.007.144a1.5 1.5 0 0 1-1.349 1.35L18.5 20h-2.25a.75.75 0 1 1 0-1.5H18a.5.5 0 0 0 .492-.41L18.5 18v-1.75a.75.75 0 0 1 .75-.75zm-10.45 3c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm.45-5.5a.75.75 0 1 1 0 1.5h-8.5a.75.75 0 1 1 0-1.5h8.5zM1.3 11c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5H4.75a.75.75 0 1 1 0-1.5h10.5zM1.3 7c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5h-2.5a.75.75 0 1 1 0-1.5h2.5zm-5 0a.75.75 0 1 1 0 1.5h-5.5a.75.75 0 0 1 0-1.5h5.5zm-6.5-5a.75.75 0 0 1 0 1.5H2a.5.5 0 0 0-.492.41L1.5 2v1.75a.75.75 0 0 1-1.5 0V1.5l.007-.144A1.5 1.5 0 0 1 1.356.006L1.5 0h2.25zM18.5 0l.144.007a1.5 1.5 0 0 1 1.35 1.349L20 1.5v2.25a.75.75 0 1 1-1.5 0V2l-.008-.09A.5.5 0 0 0 18 1.5h-1.75a.75.75 0 1 1 0-1.5h2.25zM8.8 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6z"/></svg>';var ZE=/*#__PURE__*/function(_go16){_inherits(ZE,_go16);var _super110=_createSuper(ZE);function ZE(){_classCallCheck(this,ZE);return _super110.apply(this,arguments);}_createClass(ZE,[{key:"init",value:function init(){var _this199=this;var t=this.editor;t.ui.componentFactory.add("selectAll",function(e){var n=t.commands.get("selectAll");var o=new B_(e);var i=e.t;o.set({label:i("Select all"),icon:JE,keystroke:"Ctrl+A",tooltip:true});o.bind("isOn","isEnabled").to(n,"value","isEnabled");_this199.listenTo(o,"execute",function(){t.execute("selectAll");t.editing.view.focus();});return o;});}}],[{key:"pluginName",get:function get(){return"SelectAllUI";}}]);return ZE;}(go);var YE=/*#__PURE__*/function(_go17){_inherits(YE,_go17);var _super111=_createSuper(YE);function YE(){_classCallCheck(this,YE);return _super111.apply(this,arguments);}_createClass(YE,null,[{key:"requires",get:function get(){return[UE,ZE];}},{key:"pluginName",get:function get(){return"SelectAll";}}]);return YE;}(go);var QE=/*#__PURE__*/function(_mo6){_inherits(QE,_mo6);var _super112=_createSuper(QE);function QE(t,e){var _this200;_classCallCheck(this,QE);_this200=_super112.call(this,t);_this200._buffer=new dx(t.model,e);return _this200;}_createClass(QE,[{key:"buffer",get:function get(){return this._buffer;}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(QE.prototype),"destroy",this).call(this);this._buffer.destroy();}},{key:"execute",value:function execute(){var _this201=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;var o=t.text||"";var i=o.length;var r=t.range?e.createSelection(t.range):n.selection;var s=t.resultRange;e.enqueueChange(this._buffer.batch,function(t){_this201._buffer.lock();e.deleteContent(r);if(o){e.insertContent(t.createText(o,n.selection.getAttributes()),r);}if(s){t.setSelection(s);}else if(!r.is("documentSelection")){t.setSelection(r);}_this201._buffer.unlock();_this201._buffer.input(i);});}}]);return QE;}(mo);function XE(t){t.editing.view.document.on("mutations",function(e,n,o){new tD(t).handle(n,o);});}var tD=/*#__PURE__*/function(){function tD(t){_classCallCheck(this,tD);this.editor=t;this.editing=this.editor.editing;}_createClass(tD,[{key:"handle",value:function handle(t,e){if(fx(t)){this._handleContainerChildrenMutations(t,e);}else{var _iterator335=_createForOfIteratorHelper(t),_step335;try{for(_iterator335.s();!(_step335=_iterator335.n()).done;){var _n232=_step335.value;this._handleTextMutation(_n232,e);this._handleTextNodeInsertion(_n232);}}catch(err){_iterator335.e(err);}finally{_iterator335.f();}}}},{key:"_handleContainerChildrenMutations",value:function _handleContainerChildrenMutations(t,e){var n=eD(t);if(!n){return;}var o=this.editor.editing.view.domConverter;var i=o.mapViewToDom(n);var r=new ru(this.editor.editing.view.document);var s=this.editor.data.toModel(r.domToView(i)).getChild(0);var a=this.editor.editing.mapper.toModelElement(n);if(!a){return;}var c=Array.from(s.getChildren());var l=Array.from(a.getChildren());var d=c[c.length-1];var h=l[l.length-1];var u=d&&d.is("element","softBreak");var f=h&&!h.is("element","softBreak");if(u&&f){c.pop();}var g=this.editor.model.schema;if(!nD(c,g)||!nD(l,g)){return;}var p=c.map(function(t){return t.is("$text")?t.data:"@";}).join("").replace(/\u00A0/g," ");var m=l.map(function(t){return t.is("$text")?t.data:"@";}).join("").replace(/\u00A0/g," ");if(m===p){return;}var k=Bh(m,p);var _oD=oD(k),b=_oD.firstChangeAt,w=_oD.insertions,_=_oD.deletions;var v=null;if(e){v=this.editing.mapper.toModelRange(e.getFirstRange());}var A=p.substr(b,w);var C=this.editor.model.createRange(this.editor.model.createPositionAt(a,b),this.editor.model.createPositionAt(a,b+_));this.editor.execute("input",{text:A,range:C,resultRange:v});}},{key:"_handleTextMutation",value:function _handleTextMutation(t,e){if(t.type!="text"){return;}var n=t.newText.replace(/\u00A0/g," ");var o=t.oldText.replace(/\u00A0/g," ");if(o===n){return;}var i=Bh(o,n);var _oD2=oD(i),r=_oD2.firstChangeAt,s=_oD2.insertions,a=_oD2.deletions;var c=null;if(e){c=this.editing.mapper.toModelRange(e.getFirstRange());}var l=this.editing.view.createPositionAt(t.node,r);var d=this.editing.mapper.toModelPosition(l);var h=this.editor.model.createRange(d,d.getShiftedBy(a));var u=n.substr(r,s);this.editor.execute("input",{text:u,range:h,resultRange:c});}},{key:"_handleTextNodeInsertion",value:function _handleTextNodeInsertion(t){if(t.type!="children"){return;}var e=gx(t);var n=this.editing.view.createPositionAt(t.node,e.index);var o=this.editing.mapper.toModelPosition(n);var i=e.values[0].data;this.editor.execute("input",{text:i.replace(/\u00A0/g," "),range:this.editor.model.createRange(o)});}}]);return tD;}();function eD(t){var e=t.map(function(t){return t.node;}).reduce(function(t,e){return t.getCommonAncestor(e,{includeSelf:true});});if(!e){return;}return e.getAncestors({includeSelf:true,parentFirst:true}).find(function(t){return t.is("containerElement")||t.is("rootElement");});}function nD(t,e){return t.every(function(t){return e.isInline(t);});}function oD(t){var e=null;var n=null;for(var _o162=0;_o162<t.length;_o162++){var _i127=t[_o162];if(_i127!="equal"){e=e===null?_o162:e;n=_o162;}}var o=0;var i=0;for(var _r59=e;_r59<=n;_r59++){if(t[_r59]!="insert"){o++;}if(t[_r59]!="delete"){i++;}}return{insertions:i,deletions:o,firstChangeAt:e};}var iD=/*#__PURE__*/function(_go18){_inherits(iD,_go18);var _super113=_createSuper(iD);function iD(){_classCallCheck(this,iD);return _super113.apply(this,arguments);}_createClass(iD,[{key:"init",value:function init(){var t=this.editor;var e=new QE(t,t.config.get("typing.undoStep")||20);t.commands.add("input",e);Wx(t);XE(t);}}],[{key:"pluginName",get:function get(){return"Input";}}]);return iD;}(go);var rD=/*#__PURE__*/function(_go19){_inherits(rD,_go19);var _super114=_createSuper(rD);function rD(){_classCallCheck(this,rD);return _super114.apply(this,arguments);}_createClass(rD,null,[{key:"requires",get:function get(){return[iD,bx];}},{key:"pluginName",get:function get(){return"Typing";}}]);return rD;}(go);function sD(t,e){var n=t.start;var o=Array.from(t.getItems()).reduce(function(t,o){if(!(o.is("$text")||o.is("$textProxy"))){n=e.createPositionAfter(o);return"";}return t+o.data;},"");return{text:o,range:e.createRange(n,t.end)};}var aD=/*#__PURE__*/function(){function aD(t,e){var _this202=this;_classCallCheck(this,aD);this.model=t;this.testCallback=e;this.hasMatch=false;this.set("isEnabled",true);this.on("change:isEnabled",function(){if(_this202.isEnabled){_this202._startListening();}else{_this202.stopListening(t.document.selection);_this202.stopListening(t.document);}});this._startListening();}_createClass(aD,[{key:"_startListening",value:function _startListening(){var _this203=this;var t=this.model;var e=t.document;this.listenTo(e.selection,"change:range",function(t,_ref63){var n=_ref63.directChange;if(!n){return;}if(!e.selection.isCollapsed){if(_this203.hasMatch){_this203.fire("unmatched");_this203.hasMatch=false;}return;}_this203._evaluateTextBeforeSelection("selection");});this.listenTo(e,"change:data",function(t,e){if(e.isUndo||!e.isLocal){return;}_this203._evaluateTextBeforeSelection("data",{batch:e});});}},{key:"_evaluateTextBeforeSelection",value:function _evaluateTextBeforeSelection(t){var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var n=this.model;var o=n.document;var i=o.selection;var r=n.createRange(n.createPositionAt(i.focus.parent,0),i.focus);var _sD=sD(r,n),s=_sD.text,a=_sD.range;var c=this.testCallback(s);if(!c&&this.hasMatch){this.fire("unmatched");}this.hasMatch=!!c;if(c){var _n233=Object.assign(e,{text:s,range:a});if(_typeof(c)=="object"){Object.assign(_n233,c);}this.fire("matched:".concat(t),_n233);}}}]);return aD;}();fo(aD,eo);var cD=/*#__PURE__*/function(_ref64){_inherits(cD,_ref64);var _super115=_createSuper(cD);function cD(t){var _this204;_classCallCheck(this,cD);_this204=_super115.call(this,t);_this204.attributes=new Set();_this204._overrideUid=null;return _this204;}_createClass(cD,[{key:"init",value:function init(){var _this205=this;var t=this.editor;var e=t.model;var n=t.editing.view;var o=t.locale;var i=e.document.selection;this.listenTo(n.document,"arrowKey",function(t,e){if(!i.isCollapsed){return;}if(e.shiftKey||e.altKey||e.ctrlKey){return;}var n=e.keyCode==keyCodes.arrowright;var r=e.keyCode==keyCodes.arrowleft;if(!n&&!r){return;}var s=o.contentLanguageDirection;var a=false;if(s==="ltr"&&n||s==="rtl"&&r){a=_this205._handleForwardMovement(e);}else{a=_this205._handleBackwardMovement(e);}if(a===true){t.stop();}},{context:"$text",priority:"highest"});this._isNextGravityRestorationSkipped=false;this.listenTo(i,"change:range",function(t,e){if(_this205._isNextGravityRestorationSkipped){_this205._isNextGravityRestorationSkipped=false;return;}if(!_this205._isGravityOverridden){return;}if(!e.directChange&&fD(i.getFirstPosition(),_this205.attributes)){return;}_this205._restoreGravity();});}},{key:"registerAttribute",value:function registerAttribute(t){this.attributes.add(t);}},{key:"_handleForwardMovement",value:function _handleForwardMovement(t){var e=this.attributes;var n=this.editor.model;var o=n.document.selection;var i=o.getFirstPosition();if(this._isGravityOverridden){return false;}if(i.isAtStart&&lD(o,e)){return false;}if(fD(i,e)){hD(t);this._overrideGravity();return true;}}},{key:"_handleBackwardMovement",value:function _handleBackwardMovement(t){var e=this.attributes;var n=this.editor.model;var o=n.document.selection;var i=o.getFirstPosition();if(this._isGravityOverridden){hD(t);this._restoreGravity();dD(n,e,i);return true;}else{if(i.isAtStart){if(lD(o,e)){hD(t);dD(n,e,i);return true;}return false;}if(uD(i,e)){if(i.isAtEnd&&!lD(o,e)&&fD(i,e)){hD(t);dD(n,e,i);return true;}this._isNextGravityRestorationSkipped=true;this._overrideGravity();return false;}}}},{key:"_isGravityOverridden",get:function get(){return!!this._overrideUid;}},{key:"_overrideGravity",value:function _overrideGravity(){this._overrideUid=this.editor.model.change(function(t){return t.overrideSelectionGravity();});}},{key:"_restoreGravity",value:function _restoreGravity(){var _this206=this;this.editor.model.change(function(t){t.restoreSelectionGravity(_this206._overrideUid);_this206._overrideUid=null;});}}],[{key:"pluginName",get:function get(){return"TwoStepCaretMovement";}}]);return cD;}(null&&Plugin);function lD(t,e){var _iterator336=_createForOfIteratorHelper(e),_step336;try{for(_iterator336.s();!(_step336=_iterator336.n()).done;){var _n234=_step336.value;if(t.hasAttribute(_n234)){return true;}}}catch(err){_iterator336.e(err);}finally{_iterator336.f();}return false;}function dD(t,e,n){var o=n.nodeBefore;t.change(function(t){if(o){t.setSelectionAttribute(o.getAttributes());}else{t.removeSelectionAttribute(e);}});}function hD(t){t.preventDefault();}function uD(t,e){var n=t.getShiftedBy(-1);return fD(n,e);}function fD(t,e){var n=t.nodeBefore,o=t.nodeAfter;var _iterator337=_createForOfIteratorHelper(e),_step337;try{for(_iterator337.s();!(_step337=_iterator337.n()).done;){var _t261=_step337.value;var _e234=n?n.getAttribute(_t261):undefined;var _i128=o?o.getAttribute(_t261):undefined;if(_i128!==_e234){return true;}}}catch(err){_iterator337.e(err);}finally{_iterator337.f();}return false;}var gD={copyright:{from:"(c)",to:"©"},registeredTrademark:{from:"(r)",to:"®"},trademark:{from:"(tm)",to:"™"},oneHalf:{from:/(^|[^/a-z0-9])(1\/2)([^/a-z0-9])$/i,to:[null,"½",null]},oneThird:{from:/(^|[^/a-z0-9])(1\/3)([^/a-z0-9])$/i,to:[null,"⅓",null]},twoThirds:{from:/(^|[^/a-z0-9])(2\/3)([^/a-z0-9])$/i,to:[null,"⅔",null]},oneForth:{from:/(^|[^/a-z0-9])(1\/4)([^/a-z0-9])$/i,to:[null,"¼",null]},threeQuarters:{from:/(^|[^/a-z0-9])(3\/4)([^/a-z0-9])$/i,to:[null,"¾",null]},lessThanOrEqual:{from:"<=",to:"≤"},greaterThanOrEqual:{from:">=",to:"≥"},notEqual:{from:"!=",to:"≠"},arrowLeft:{from:"<-",to:"←"},arrowRight:{from:"->",to:"→"},horizontalEllipsis:{from:"...",to:"…"},enDash:{from:/(^| )(--)( )$/,to:[null,"–",null]},emDash:{from:/(^| )(---)( )$/,to:[null,"—",null]},quotesPrimary:{from:vD('"'),to:[null,"“",null,"”"]},quotesSecondary:{from:vD("'"),to:[null,"‘",null,"’"]},quotesPrimaryEnGb:{from:vD("'"),to:[null,"‘",null,"’"]},quotesSecondaryEnGb:{from:vD('"'),to:[null,"“",null,"”"]},quotesPrimaryPl:{from:vD('"'),to:[null,"„",null,"”"]},quotesSecondaryPl:{from:vD("'"),to:[null,"‚",null,"’"]}};var pD={symbols:["copyright","registeredTrademark","trademark"],mathematical:["oneHalf","oneThird","twoThirds","oneForth","threeQuarters","lessThanOrEqual","greaterThanOrEqual","notEqual","arrowLeft","arrowRight"],typography:["horizontalEllipsis","enDash","emDash"],quotes:["quotesPrimary","quotesSecondary"]};var mD=null&&["symbols","mathematical","typography","quotes"];var kD=/*#__PURE__*/function(_ref65){_inherits(kD,_ref65);var _super116=_createSuper(kD);function kD(t){var _this207;_classCallCheck(this,kD);_this207=_super116.call(this,t);t.config.define("typing",{transformations:{include:mD}});return _this207;}_createClass(kD,[{key:"init",value:function init(){var _this208=this;var t=this.editor.model;var e=t.document.selection;e.on("change:range",function(){_this208.isEnabled=!e.anchor.parent.is("element","codeBlock");});this._enableTransformationWatchers();}},{key:"_enableTransformationWatchers",value:function _enableTransformationWatchers(){var t=this.editor;var e=t.model;var n=t.plugins.get("Delete");var o=AD(t.config.get("typing.transformations"));var i=function i(t){var _iterator338=_createForOfIteratorHelper(o),_step338;try{for(_iterator338.s();!(_step338=_iterator338.n()).done;){var _e235=_step338.value;var _n235=_e235.from;var _o163=_n235.test(t);if(_o163){return{normalizedTransformation:_e235};}}}catch(err){_iterator338.e(err);}finally{_iterator338.f();}};var r=function r(t,o){if(!o.batch.isTyping){return;}var _o$normalizedTransfor=o.normalizedTransformation,i=_o$normalizedTransfor.from,r=_o$normalizedTransfor.to;var s=i.exec(o.text);var a=r(s.slice(1));var c=o.range;var l=s.index;e.enqueueChange(function(t){for(var _n236=1;_n236<s.length;_n236++){var _o164=s[_n236];var _i129=a[_n236-1];if(_i129==null){l+=_o164.length;continue;}var _r60=c.start.getShiftedBy(l);var _d3=e.createRange(_r60,_r60.getShiftedBy(_o164.length));var _h3=_D(_r60);e.insertContent(t.createText(_i129,_h3),_d3);l+=_i129.length;}e.enqueueChange(function(){n.requestUndoOnBackspace();});});};var s=new TextWatcher(t.model,i);s.on("matched:data",r);s.bind("isEnabled").to(this);}}],[{key:"requires",get:function get(){return["Delete","Input"];}},{key:"pluginName",get:function get(){return"TextTransformation";}}]);return kD;}(null&&Plugin);function bD(t){if(typeof t=="string"){return new RegExp("(".concat(escapeRegExp(t),")$"));}return t;}function wD(t){if(typeof t=="string"){return function(){return[t];};}else if(t instanceof Array){return function(){return t;};}return t;}function _D(t){var e=t.textNode?t.textNode:t.nodeAfter;return e.getAttributes();}function vD(t){return new RegExp("(^|\\s)(".concat(t,")([^").concat(t,"]*)(").concat(t,")$"));}function AD(t){var e=t.extra||[];var n=t.remove||[];var o=function o(t){return!n.includes(t);};var i=t.include.concat(e).filter(o);return CD(i).filter(o).map(function(t){return gD[t]||t;}).filter(function(t){return _typeof(t)==="object";}).map(function(t){return{from:bD(t.from),to:wD(t.to)};});}function CD(t){var e=new Set();var _iterator339=_createForOfIteratorHelper(t),_step339;try{for(_iterator339.s();!(_step339=_iterator339.n()).done;){var _n237=_step339.value;if(pD[_n237]){var _iterator340=_createForOfIteratorHelper(pD[_n237]),_step340;try{for(_iterator340.s();!(_step340=_iterator340.n()).done;){var _t262=_step340.value;e.add(_t262);}}catch(err){_iterator340.e(err);}finally{_iterator340.f();}}else{e.add(_n237);}}}catch(err){_iterator339.e(err);}finally{_iterator339.f();}return Array.from(e);}var yD=/*#__PURE__*/function(_mo7){_inherits(yD,_mo7);var _super117=_createSuper(yD);function yD(t){var _this209;_classCallCheck(this,yD);_this209=_super117.call(this,t);_this209._stack=[];_this209._createdBatches=new WeakSet();_this209.refresh();_this209.listenTo(t.data,"set",function(t,e){e[1]=_objectSpread({},e[1]);var n=e[1];if(!n.batchType){n.batchType={isUndoable:false};}},{priority:"high"});_this209.listenTo(t.data,"set",function(t,e){var n=e[1];if(!n.batchType.isUndoable){_this209.clearStack();}});return _this209;}_createClass(yD,[{key:"refresh",value:function refresh(){this.isEnabled=this._stack.length>0;}},{key:"addBatch",value:function addBatch(t){var e=this.editor.model.document.selection;var n={ranges:e.hasOwnRange?Array.from(e.getRanges()):[],isBackward:e.isBackward};this._stack.push({batch:t,selection:n});this.refresh();}},{key:"clearStack",value:function clearStack(){this._stack=[];this.refresh();}},{key:"_restoreSelection",value:function _restoreSelection(t,e,n){var o=this.editor.model;var i=o.document;var r=[];var s=t.map(function(t){return t.getTransformedByOperations(n);});var a=s.flat();var _iterator341=_createForOfIteratorHelper(s),_step341;try{for(_iterator341.s();!(_step341=_iterator341.n()).done;){var _t263=_step341.value;var _e236=_t263.filter(function(t){return t.root!=i.graveyard;}).filter(function(t){return!ED(t,a);});if(!_e236.length){continue;}xD(_e236);r.push(_e236[0]);}}catch(err){_iterator341.e(err);}finally{_iterator341.f();}if(r.length){o.change(function(t){t.setSelection(r,{backward:e});});}}},{key:"_undo",value:function _undo(t,e){var n=this.editor.model;var o=n.document;this._createdBatches.add(e);var i=t.operations.slice().filter(function(t){return t.isDocumentOperation;});i.reverse();var _iterator342=_createForOfIteratorHelper(i),_step342;try{for(_iterator342.s();!(_step342=_iterator342.n()).done;){var _t264=_step342.value;var _i130=_t264.baseVersion+1;var _r61=Array.from(o.history.getOperations(_i130));var _s32=VC([_t264.getReversed()],_r61,{useRelations:true,document:this.editor.model.document,padWithNoOps:false,forceWeakRemove:true});var _a20=_s32.operationsA;var _iterator343=_createForOfIteratorHelper(_a20),_step343;try{for(_iterator343.s();!(_step343=_iterator343.n()).done;){var _i131=_step343.value;e.addOperation(_i131);n.applyOperation(_i131);o.history.setOperationAsUndone(_t264,_i131);}}catch(err){_iterator343.e(err);}finally{_iterator343.f();}}}catch(err){_iterator342.e(err);}finally{_iterator342.f();}}}]);return yD;}(mo);function xD(t){t.sort(function(t,e){return t.start.isBefore(e.start)?-1:1;});for(var _e237=1;_e237<t.length;_e237++){var _n238=t[_e237-1];var _o165=_n238.getJoined(t[_e237],true);if(_o165){_e237--;t.splice(_e237,2,_o165);}}}function ED(t,e){return e.some(function(e){return e!==t&&e.containsRange(t,true);});}var DD=/*#__PURE__*/function(_yD){_inherits(DD,_yD);var _super118=_createSuper(DD);function DD(){_classCallCheck(this,DD);return _super118.apply(this,arguments);}_createClass(DD,[{key:"execute",value:function execute(){var _this210=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var e=t?this._stack.findIndex(function(e){return e.batch==t;}):this._stack.length-1;var n=this._stack.splice(e,1)[0];var o=this.editor.model.createBatch({isUndo:true});this.editor.model.enqueueChange(o,function(){_this210._undo(n.batch,o);var t=_this210.editor.model.document.history.getOperations(n.batch.baseVersion);_this210._restoreSelection(n.selection.ranges,n.selection.isBackward,t);_this210.fire("revert",n.batch,o);});this.refresh();}}]);return DD;}(yD);var SD=/*#__PURE__*/function(_yD2){_inherits(SD,_yD2);var _super119=_createSuper(SD);function SD(){_classCallCheck(this,SD);return _super119.apply(this,arguments);}_createClass(SD,[{key:"execute",value:function execute(){var _this211=this;var t=this._stack.pop();var e=this.editor.model.createBatch({isUndo:true});this.editor.model.enqueueChange(e,function(){var n=t.batch.operations[t.batch.operations.length-1];var o=n.baseVersion+1;var i=_this211.editor.model.document.history.getOperations(o);_this211._restoreSelection(t.selection.ranges,t.selection.isBackward,i);_this211._undo(t.batch,e);});this.refresh();}}]);return SD;}(yD);var PD=/*#__PURE__*/function(_go20){_inherits(PD,_go20);var _super120=_createSuper(PD);function PD(t){var _this212;_classCallCheck(this,PD);_this212=_super120.call(this,t);_this212._batchRegistry=new WeakSet();return _this212;}_createClass(PD,[{key:"init",value:function init(){var _this213=this;var t=this.editor;this._undoCommand=new DD(t);this._redoCommand=new SD(t);t.commands.add("undo",this._undoCommand);t.commands.add("redo",this._redoCommand);this.listenTo(t.model,"applyOperation",function(t,e){var n=e[0];if(!n.isDocumentOperation){return;}var o=n.batch;var i=_this213._redoCommand._createdBatches.has(o);var r=_this213._undoCommand._createdBatches.has(o);var s=_this213._batchRegistry.has(o);if(s){return;}_this213._batchRegistry.add(o);if(!o.isUndoable){return;}if(i){_this213._undoCommand.addBatch(o);}else if(!r){_this213._undoCommand.addBatch(o);_this213._redoCommand.clearStack();}},{priority:"highest"});this.listenTo(this._undoCommand,"revert",function(t,e,n){_this213._redoCommand.addBatch(n);});t.keystrokes.set("CTRL+Z","undo");t.keystrokes.set("CTRL+Y","redo");t.keystrokes.set("CTRL+SHIFT+Z","redo");}}],[{key:"pluginName",get:function get(){return"UndoEditing";}}]);return PD;}(go);var TD='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m5.042 9.367 2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z"/></svg>';var BD='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m14.958 9.367-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z"/></svg>';var ID=/*#__PURE__*/function(_go21){_inherits(ID,_go21);var _super121=_createSuper(ID);function ID(){_classCallCheck(this,ID);return _super121.apply(this,arguments);}_createClass(ID,[{key:"init",value:function init(){var t=this.editor;var e=t.locale;var n=t.t;var o=e.uiLanguageDirection=="ltr"?TD:BD;var i=e.uiLanguageDirection=="ltr"?BD:TD;this._addButton("undo",n("Undo"),"CTRL+Z",o);this._addButton("redo",n("Redo"),"CTRL+Y",i);}},{key:"_addButton",value:function _addButton(t,e,n,o){var _this214=this;var i=this.editor;i.ui.componentFactory.add(t,function(r){var s=i.commands.get(t);var a=new B_(r);a.set({label:e,icon:o,keystroke:n,tooltip:true});a.bind("isEnabled").to(s,"isEnabled");_this214.listenTo(a,"execute",function(){i.execute(t);i.editing.view.focus();});return a;});}}],[{key:"pluginName",get:function get(){return"UndoUI";}}]);return ID;}(go);var RD=/*#__PURE__*/function(_go22){_inherits(RD,_go22);var _super122=_createSuper(RD);function RD(){_classCallCheck(this,RD);return _super122.apply(this,arguments);}_createClass(RD,null,[{key:"requires",get:function get(){return[PD,ID];}},{key:"pluginName",get:function get(){return"Undo";}}]);return RD;}(go);var OD=/*#__PURE__*/function(_go23){_inherits(OD,_go23);var _super123=_createSuper(OD);function OD(){_classCallCheck(this,OD);return _super123.apply(this,arguments);}_createClass(OD,null,[{key:"requires",get:function get(){return[FE,lx,YE,WE,rD,RD];}},{key:"pluginName",get:function get(){return"Essentials";}}]);return OD;}(go);var zD=/*#__PURE__*/function(_mo8){_inherits(zD,_mo8);var _super124=_createSuper(zD);function zD(t,e){var _this215;_classCallCheck(this,zD);_this215=_super124.call(this,t);_this215.attributeKey=e;return _this215;}_createClass(zD,[{key:"refresh",value:function refresh(){var t=this.editor.model;var e=t.document;this.value=e.selection.getAttribute(this.attributeKey);this.isEnabled=t.schema.checkAttributeInSelection(e.selection,this.attributeKey);}},{key:"execute",value:function execute(){var _this216=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;var o=n.selection;var i=t.value;e.change(function(t){if(o.isCollapsed){if(i){t.setSelectionAttribute(_this216.attributeKey,i);}else{t.removeSelectionAttribute(_this216.attributeKey);}}else{var _n239=e.schema.getValidRanges(o.getRanges(),_this216.attributeKey);var _iterator344=_createForOfIteratorHelper(_n239),_step344;try{for(_iterator344.s();!(_step344=_iterator344.n()).done;){var _e238=_step344.value;if(i){t.setAttribute(_this216.attributeKey,i,_e238);}else{t.removeAttribute(_this216.attributeKey,_e238);}}}catch(err){_iterator344.e(err);}finally{_iterator344.f();}}});}}]);return zD;}(mo);var MD=/*#__PURE__*/function(_Ja2){_inherits(MD,_Ja2);var _super125=_createSuper(MD);function MD(t){var _this217;_classCallCheck(this,MD);_this217=_super125.call(this,t);_this217.set("isEmpty",true);_this217.on("change",function(){_this217.set("isEmpty",_this217.length===0);});return _this217;}_createClass(MD,[{key:"add",value:function add(t,e){if(this.find(function(e){return e.color===t.color;})){return;}_get(_getPrototypeOf(MD.prototype),"add",this).call(this,t,e);}},{key:"hasColor",value:function hasColor(t){return!!this.find(function(e){return e.color===t;});}}]);return MD;}(Ja);fo(MD,eo);var ND=n(585);var FD={injectType:"singletonStyleTag",attributes:{"data-cke":true}};FD.insert="head";FD.singleton=true;var VD=Nh()(ND.Z,FD);var LD=ND.Z.locals||{};var HD=/*#__PURE__*/function(_Fw22){_inherits(HD,_Fw22);var _super126=_createSuper(HD);function HD(t,_ref66){var _this218;var e=_ref66.colors,n=_ref66.columns,o=_ref66.removeButtonLabel,i=_ref66.documentColorsLabel,r=_ref66.documentColorsCount;_classCallCheck(this,HD);_this218=_super126.call(this,t);_this218.items=_this218.createCollection();_this218.colorDefinitions=e;_this218.focusTracker=new kg();_this218.keystrokes=new bg();_this218.set("selectedColor");_this218.removeButtonLabel=o;_this218.columns=n;_this218.documentColors=new MD();_this218.documentColorsCount=r;_this218._focusCycler=new q_({focusables:_this218.items,focusTracker:_this218.focusTracker,keystrokeHandler:_this218.keystrokes,actions:{focusPrevious:"arrowup",focusNext:"arrowdown"}});_this218._documentColorsLabel=i;_this218.setTemplate({tag:"div",attributes:{class:["ck","ck-color-table"]},children:_this218.items});_this218.items.add(_this218._removeColorButton());return _this218;}_createClass(HD,[{key:"updateDocumentColors",value:function updateDocumentColors(t,e){var n=t.document;var o=this.documentColorsCount;this.documentColors.clear();var _iterator345=_createForOfIteratorHelper(n.getRootNames()),_step345;try{for(_iterator345.s();!(_step345=_iterator345.n()).done;){var _i132=_step345.value;var _r62=n.getRoot(_i132);var _s33=t.createRangeIn(_r62);var _iterator346=_createForOfIteratorHelper(_s33.getItems()),_step346;try{for(_iterator346.s();!(_step346=_iterator346.n()).done;){var _t265=_step346.value;if(_t265.is("$textProxy")&&_t265.hasAttribute(e)){this._addColorToDocumentColors(_t265.getAttribute(e));if(this.documentColors.length>=o){return;}}}}catch(err){_iterator346.e(err);}finally{_iterator346.f();}}}catch(err){_iterator345.e(err);}finally{_iterator345.f();}}},{key:"updateSelectedColors",value:function updateSelectedColors(){var t=this.documentColorsGrid;var e=this.staticColorsGrid;var n=this.selectedColor;e.selectedColor=n;if(t){t.selectedColor=n;}}},{key:"render",value:function render(){_get(_getPrototypeOf(HD.prototype),"render",this).call(this);var _iterator347=_createForOfIteratorHelper(this.items),_step347;try{for(_iterator347.s();!(_step347=_iterator347.n()).done;){var _t266=_step347.value;this.focusTracker.add(_t266.element);}}catch(err){_iterator347.e(err);}finally{_iterator347.f();}this.keystrokes.listenTo(this.element);}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(HD.prototype),"destroy",this).call(this);this.focusTracker.destroy();this.keystrokes.destroy();}},{key:"appendGrids",value:function appendGrids(){if(this.staticColorsGrid){return;}this.staticColorsGrid=this._createStaticColorsGrid();this.items.add(this.staticColorsGrid);if(this.documentColorsCount){var _t267=Lw.bind(this.documentColors,this.documentColors);var _e239=new rA(this.locale);_e239.text=this._documentColorsLabel;_e239.extendTemplate({attributes:{class:["ck","ck-color-grid__label",_t267.if("isEmpty","ck-hidden")]}});this.items.add(_e239);this.documentColorsGrid=this._createDocumentColorsGrid();this.items.add(this.documentColorsGrid);}}},{key:"focus",value:function focus(){this._focusCycler.focusFirst();}},{key:"focusLast",value:function focusLast(){this._focusCycler.focusLast();}},{key:"_removeColorButton",value:function _removeColorButton(){var _this219=this;var t=new B_();t.set({withText:true,icon:Sw.eraser,tooltip:true,label:this.removeButtonLabel});t.class="ck-color-table__remove-color";t.on("execute",function(){_this219.fire("execute",{value:null});});return t;}},{key:"_createStaticColorsGrid",value:function _createStaticColorsGrid(){var t=new J_(this.locale,{colorDefinitions:this.colorDefinitions,columns:this.columns});t.delegate("execute").to(this);return t;}},{key:"_createDocumentColorsGrid",value:function _createDocumentColorsGrid(){var _this220=this;var t=Lw.bind(this.documentColors,this.documentColors);var e=new J_(this.locale,{columns:this.columns});e.delegate("execute").to(this);e.extendTemplate({attributes:{class:t.if("isEmpty","ck-hidden")}});e.items.bindTo(this.documentColors).using(function(t){var e=new H_();e.set({color:t.color,hasBorder:t.options&&t.options.hasBorder});if(t.label){e.set({label:t.label,tooltip:true});}e.on("execute",function(){_this220.fire("execute",{value:t.color});});return e;});this.documentColors.on("change:isEmpty",function(t,n,o){if(o){e.selectedColor=null;}});return e;}},{key:"_addColorToDocumentColors",value:function _addColorToDocumentColors(t){var e=this.colorDefinitions.find(function(e){return e.color===t;});if(!e){this.documentColors.add({color:t,label:t,options:{hasBorder:false}});}else{this.documentColors.add(Object.assign({},e));}}}]);return HD;}(Fw);var jD="fontSize";var qD="fontFamily";var WD="fontColor";var KD="fontBackgroundColor";function GD(t,e){var n={model:{key:t,values:[]},view:{},upcastAlso:{}};var _iterator348=_createForOfIteratorHelper(e),_step348;try{for(_iterator348.s();!(_step348=_iterator348.n()).done;){var _t268=_step348.value;n.model.values.push(_t268.model);n.view[_t268.model]=_t268.view;if(_t268.upcastAlso){n.upcastAlso[_t268.model]=_t268.upcastAlso;}}}catch(err){_iterator348.e(err);}finally{_iterator348.f();}return n;}function $D(t){return function(e){return ZD(e.getStyle(t));};}function UD(t){return function(e,_ref67){var n=_ref67.writer;return n.createAttributeElement("span",{style:"".concat(t,":").concat(e)},{priority:7});};}function JD(_ref68){var t=_ref68.dropdownView,e=_ref68.colors,n=_ref68.columns,o=_ref68.removeButtonLabel,i=_ref68.documentColorsLabel,r=_ref68.documentColorsCount;var s=t.locale;var a=new HD(s,{colors:e,columns:n,removeButtonLabel:o,documentColorsLabel:i,documentColorsCount:r});t.colorTableView=a;t.panelView.children.add(a);a.delegate("execute").to(t,"execute");return a;}function ZD(t){return t.replace(/\s/g,"");}var YD=/*#__PURE__*/function(_zD){_inherits(YD,_zD);var _super127=_createSuper(YD);function YD(t){_classCallCheck(this,YD);return _super127.call(this,t,WD);}return _createClass(YD);}(zD);var QD=/*#__PURE__*/function(_go24){_inherits(QD,_go24);var _super128=_createSuper(QD);function QD(t){var _this221;_classCallCheck(this,QD);_this221=_super128.call(this,t);t.config.define(WD,{colors:[{color:"hsl(0, 0%, 0%)",label:"Black"},{color:"hsl(0, 0%, 30%)",label:"Dim grey"},{color:"hsl(0, 0%, 60%)",label:"Grey"},{color:"hsl(0, 0%, 90%)",label:"Light grey"},{color:"hsl(0, 0%, 100%)",label:"White",hasBorder:true},{color:"hsl(0, 75%, 60%)",label:"Red"},{color:"hsl(30, 75%, 60%)",label:"Orange"},{color:"hsl(60, 75%, 60%)",label:"Yellow"},{color:"hsl(90, 75%, 60%)",label:"Light green"},{color:"hsl(120, 75%, 60%)",label:"Green"},{color:"hsl(150, 75%, 60%)",label:"Aquamarine"},{color:"hsl(180, 75%, 60%)",label:"Turquoise"},{color:"hsl(210, 75%, 60%)",label:"Light blue"},{color:"hsl(240, 75%, 60%)",label:"Blue"},{color:"hsl(270, 75%, 60%)",label:"Purple"}],columns:5});t.conversion.for("upcast").elementToAttribute({view:{name:"span",styles:{color:/[\s\S]+/}},model:{key:WD,value:$D("color")}});t.conversion.for("upcast").elementToAttribute({view:{name:"font",attributes:{color:/^#?\w+$/}},model:{key:WD,value:function value(t){return t.getAttribute("color");}}});t.conversion.for("downcast").attributeToElement({model:WD,view:UD("color")});t.commands.add(WD,new YD(t));t.model.schema.extend("$text",{allowAttributes:WD});t.model.schema.setAttributeProperties(WD,{isFormatting:true,copyOnEnter:true});return _this221;}_createClass(QD,null,[{key:"pluginName",get:function get(){return"FontColorEditing";}}]);return QD;}(go);var XD=/*#__PURE__*/function(_go25){_inherits(XD,_go25);var _super129=_createSuper(XD);function XD(t,_ref69){var _this222;var e=_ref69.commandName,n=_ref69.icon,o=_ref69.componentName,i=_ref69.dropdownLabel;_classCallCheck(this,XD);_this222=_super129.call(this,t);_this222.commandName=e;_this222.componentName=o;_this222.icon=n;_this222.dropdownLabel=i;_this222.columns=t.config.get("".concat(_this222.componentName,".columns"));_this222.colorTableView=undefined;return _this222;}_createClass(XD,[{key:"init",value:function init(){var _this223=this;var t=this.editor;var e=t.locale;var n=e.t;var o=t.commands.get(this.commandName);var i=F_(t.config.get(this.componentName).colors);var r=N_(e,i);var s=t.config.get("".concat(this.componentName,".documentColors"));t.ui.componentFactory.add(this.componentName,function(e){var i=qv(e);_this223.colorTableView=JD({dropdownView:i,colors:r.map(function(t){return{label:t.label,color:t.model,options:{hasBorder:t.hasBorder}};}),columns:_this223.columns,removeButtonLabel:n("Remove color"),documentColorsLabel:s!==0?n("Document colors"):undefined,documentColorsCount:s===undefined?_this223.columns:s});_this223.colorTableView.bind("selectedColor").to(o,"value");i.buttonView.set({label:_this223.dropdownLabel,icon:_this223.icon,tooltip:true});i.extendTemplate({attributes:{class:"ck-color-ui-dropdown"}});i.bind("isEnabled").to(o);i.on("execute",function(e,n){t.execute(_this223.commandName,n);t.editing.view.focus();});i.on("change:isOpen",function(e,n,o){i.colorTableView.appendGrids();if(o){if(s!==0){_this223.colorTableView.updateDocumentColors(t.model,_this223.componentName);}_this223.colorTableView.updateSelectedColors();}});return i;});}}]);return XD;}(go);var tS='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.4 10.3 10 4.5l-2.4 5.8h4.8zm.5 1.2H7.1L5.7 15H4.2l5-12h1.6l5 12h-1.5L13 11.5zm3.1 7H4a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z"/></svg>';var eS=/*#__PURE__*/function(_XD){_inherits(eS,_XD);var _super130=_createSuper(eS);function eS(t){_classCallCheck(this,eS);var e=t.locale.t;return _super130.call(this,t,{commandName:WD,componentName:WD,icon:tS,dropdownLabel:e("Font Color")});}_createClass(eS,null,[{key:"pluginName",get:function get(){return"FontColorUI";}}]);return eS;}(XD);var nS=/*#__PURE__*/function(_go26){_inherits(nS,_go26);var _super131=_createSuper(nS);function nS(){_classCallCheck(this,nS);return _super131.apply(this,arguments);}_createClass(nS,null,[{key:"requires",get:function get(){return[QD,eS];}},{key:"pluginName",get:function get(){return"FontColor";}}]);return nS;}(go);var oS=/*#__PURE__*/function(_mo9){_inherits(oS,_mo9);var _super132=_createSuper(oS);function oS(){_classCallCheck(this,oS);return _super132.apply(this,arguments);}_createClass(oS,[{key:"refresh",value:function refresh(){var t=this.editor.model;var e=t.document;var n=mg(e.selection.getSelectedBlocks());this.value=!!n&&n.is("element","paragraph");this.isEnabled=!!n&&iS(n,t.schema);}},{key:"execute",value:function execute(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;e.change(function(o){var i=(t.selection||n.selection).getSelectedBlocks();var _iterator349=_createForOfIteratorHelper(i),_step349;try{for(_iterator349.s();!(_step349=_iterator349.n()).done;){var _t269=_step349.value;if(!_t269.is("element","paragraph")&&iS(_t269,e.schema)){o.rename(_t269,"paragraph");}}}catch(err){_iterator349.e(err);}finally{_iterator349.f();}});}}]);return oS;}(mo);function iS(t,e){return e.checkChild(t.parent,"paragraph")&&!e.isObject(t);}var rS=/*#__PURE__*/function(_mo10){_inherits(rS,_mo10);var _super133=_createSuper(rS);function rS(){_classCallCheck(this,rS);return _super133.apply(this,arguments);}_createClass(rS,[{key:"execute",value:function execute(t){var e=this.editor.model;var n=t.attributes;var o=t.position;e.change(function(t){var i=t.createElement("paragraph");if(n){e.schema.setAllowedAttributes(i,n,t);}if(!e.schema.checkChild(o.parent,i)){var _n240=e.schema.findAllowedParent(o,i);if(!_n240){return;}o=t.split(o,_n240).position;}e.insertContent(i,o);t.setSelection(i,"in");});}}]);return rS;}(mo);var sS=/*#__PURE__*/function(_go27){_inherits(sS,_go27);var _super134=_createSuper(sS);function sS(){_classCallCheck(this,sS);return _super134.apply(this,arguments);}_createClass(sS,[{key:"init",value:function init(){var t=this.editor;var e=t.model;t.commands.add("paragraph",new oS(t));t.commands.add("insertParagraph",new rS(t));e.schema.register("paragraph",{inheritAllFrom:"$block"});t.conversion.elementToElement({model:"paragraph",view:"p"});t.conversion.for("upcast").elementToElement({model:function model(t,_ref70){var e=_ref70.writer;if(!sS.paragraphLikeElements.has(t.name)){return null;}if(t.isEmpty){return null;}return e.createElement("paragraph");},view:/.+/,converterPriority:"low"});}}],[{key:"pluginName",get:function get(){return"Paragraph";}}]);return sS;}(go);sS.paragraphLikeElements=new Set(["blockquote","dd","div","dt","h1","h2","h3","h4","h5","h6","li","p","td","th"]);var aS=/*#__PURE__*/function(_ref71){_inherits(aS,_ref71);var _super135=_createSuper(aS);function aS(){_classCallCheck(this,aS);return _super135.apply(this,arguments);}_createClass(aS,[{key:"init",value:function init(){var t=this.editor;var e=t.t;t.ui.componentFactory.add("paragraph",function(n){var o=new ButtonView(n);var i=t.commands.get("paragraph");o.label=e("Paragraph");o.icon=icon;o.tooltip=true;o.isToggleable=true;o.bind("isEnabled").to(i);o.bind("isOn").to(i,"value");o.on("execute",function(){t.execute("paragraph");});return o;});}}]);return aS;}(null&&Plugin);var cS=/*#__PURE__*/function(_mo11){_inherits(cS,_mo11);var _super136=_createSuper(cS);function cS(t,e){var _this224;_classCallCheck(this,cS);_this224=_super136.call(this,t);_this224.modelElements=e;return _this224;}_createClass(cS,[{key:"refresh",value:function refresh(){var _this225=this;var t=mg(this.editor.model.document.selection.getSelectedBlocks());this.value=!!t&&this.modelElements.includes(t.name)&&t.name;this.isEnabled=!!t&&this.modelElements.some(function(e){return lS(t,e,_this225.editor.model.schema);});}},{key:"execute",value:function execute(t){var e=this.editor.model;var n=e.document;var o=t.value;e.change(function(t){var i=Array.from(n.selection.getSelectedBlocks()).filter(function(t){return lS(t,o,e.schema);});var _iterator350=_createForOfIteratorHelper(i),_step350;try{for(_iterator350.s();!(_step350=_iterator350.n()).done;){var _e240=_step350.value;if(!_e240.is("element",o)){t.rename(_e240,o);}}}catch(err){_iterator350.e(err);}finally{_iterator350.f();}});}}]);return cS;}(mo);function lS(t,e,n){return n.checkChild(t.parent,e)&&!n.isObject(t);}var dS="paragraph";var hS=/*#__PURE__*/function(_go28){_inherits(hS,_go28);var _super137=_createSuper(hS);function hS(t){var _this226;_classCallCheck(this,hS);_this226=_super137.call(this,t);t.config.define("heading",{options:[{model:"paragraph",title:"Paragraph",class:"ck-heading_paragraph"},{model:"heading1",view:"h2",title:"Heading 1",class:"ck-heading_heading1"},{model:"heading2",view:"h3",title:"Heading 2",class:"ck-heading_heading2"},{model:"heading3",view:"h4",title:"Heading 3",class:"ck-heading_heading3"}]});return _this226;}_createClass(hS,[{key:"init",value:function init(){var t=this.editor;var e=t.config.get("heading.options");var n=[];var _iterator351=_createForOfIteratorHelper(e),_step351;try{for(_iterator351.s();!(_step351=_iterator351.n()).done;){var _o166=_step351.value;if(_o166.model!==dS){t.model.schema.register(_o166.model,{inheritAllFrom:"$block"});t.conversion.elementToElement(_o166);n.push(_o166.model);}}}catch(err){_iterator351.e(err);}finally{_iterator351.f();}this._addDefaultH1Conversion(t);t.commands.add("heading",new cS(t,n));}},{key:"afterInit",value:function afterInit(){var t=this.editor;var e=t.commands.get("enter");var n=t.config.get("heading.options");if(e){this.listenTo(e,"afterExecute",function(e,o){var i=t.model.document.selection.getFirstPosition().parent;var r=n.some(function(t){return i.is("element",t.model);});if(r&&!i.is("element",dS)&&i.childCount===0){o.writer.rename(i,dS);}});}}},{key:"_addDefaultH1Conversion",value:function _addDefaultH1Conversion(t){t.conversion.for("upcast").elementToElement({model:"heading1",view:"h1",converterPriority:c.get("low")+1});}}],[{key:"pluginName",get:function get(){return"HeadingEditing";}},{key:"requires",get:function get(){return[sS];}}]);return hS;}(go);function uS(t){var e=t.t;var n={Paragraph:e("Paragraph"),"Heading 1":e("Heading 1"),"Heading 2":e("Heading 2"),"Heading 3":e("Heading 3"),"Heading 4":e("Heading 4"),"Heading 5":e("Heading 5"),"Heading 6":e("Heading 6")};return t.config.get("heading.options").map(function(t){var e=n[t.title];if(e&&e!=t.title){t.title=e;}return t;});}var fS=n(230);var gS={injectType:"singletonStyleTag",attributes:{"data-cke":true}};gS.insert="head";gS.singleton=true;var pS=Nh()(fS.Z,gS);var mS=fS.Z.locals||{};var kS=/*#__PURE__*/function(_go29){_inherits(kS,_go29);var _super138=_createSuper(kS);function kS(){_classCallCheck(this,kS);return _super138.apply(this,arguments);}_createClass(kS,[{key:"init",value:function init(){var _this227=this;var t=this.editor;var e=t.t;var n=uS(t);var o=e("Choose heading");var i=e("Heading");t.ui.componentFactory.add("heading",function(e){var r={};var s=new Ja();var a=t.commands.get("heading");var c=t.commands.get("paragraph");var l=[a];var _iterator352=_createForOfIteratorHelper(n),_step352;try{var _loop6=function _loop6(){var t=_step352.value;var e={type:"button",model:new IA({label:t.title,class:t.class,withText:true})};if(t.model==="paragraph"){e.model.bind("isOn").to(c,"value");e.model.set("commandName","paragraph");l.push(c);}else{e.model.bind("isOn").to(a,"value",function(e){return e===t.model;});e.model.set({commandName:"heading",commandValue:t.model});}s.add(e);r[t.model]=t.title;};for(_iterator352.s();!(_step352=_iterator352.n()).done;){_loop6();}}catch(err){_iterator352.e(err);}finally{_iterator352.f();}var d=qv(e);Kv(d,s);d.buttonView.set({isOn:false,withText:true,tooltip:i});d.extendTemplate({attributes:{class:["ck-heading-dropdown"]}});d.bind("isEnabled").toMany(l,"isEnabled",function(){for(var _len22=arguments.length,t=new Array(_len22),_key22=0;_key22<_len22;_key22++){t[_key22]=arguments[_key22];}return t.some(function(t){return t;});});d.buttonView.bind("label").to(a,"value",c,"value",function(t,e){var n=t||e&&"paragraph";return r[n]?r[n]:o;});_this227.listenTo(d,"execute",function(e){t.execute(e.source.commandName,e.source.commandValue?{value:e.source.commandValue}:undefined);t.editing.view.focus();});return d;});}}],[{key:"pluginName",get:function get(){return"HeadingUI";}}]);return kS;}(go);var bS=/*#__PURE__*/function(_go30){_inherits(bS,_go30);var _super139=_createSuper(bS);function bS(){_classCallCheck(this,bS);return _super139.apply(this,arguments);}_createClass(bS,null,[{key:"requires",get:function get(){return[hS,kS];}},{key:"pluginName",get:function get(){return"Heading";}}]);return bS;}(go);var wS=/*#__PURE__*/function(_ref72){_inherits(wS,_ref72);var _super140=_createSuper(wS);function wS(){_classCallCheck(this,wS);return _super140.apply(this,arguments);}_createClass(wS,[{key:"init",value:function init(){var _this228=this;var t=this.editor;if(t.plugins.has("BalloonToolbar")){var _e241=t.plugins.get("BalloonToolbar");this.listenTo(_e241,"show",function(e){if(AS(t.editing.view.document.selection)){e.stop();}},{priority:"high"});}this._toolbarDefinitions=new Map();this._balloon=this.editor.plugins.get("ContextualBalloon");this.on("change:isEnabled",function(){_this228._updateToolbarsVisibility();});this.listenTo(t.ui,"update",function(){_this228._updateToolbarsVisibility();});this.listenTo(t.ui.focusTracker,"change:isFocused",function(){_this228._updateToolbarsVisibility();},{priority:"low"});}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(wS.prototype),"destroy",this).call(this);var _iterator353=_createForOfIteratorHelper(this._toolbarDefinitions.values()),_step353;try{for(_iterator353.s();!(_step353=_iterator353.n()).done;){var _t270=_step353.value;_t270.view.destroy();}}catch(err){_iterator353.e(err);}finally{_iterator353.f();}}},{key:"register",value:function register(t,_ref73){var e=_ref73.ariaLabel,n=_ref73.items,o=_ref73.getRelatedElement,_ref73$balloonClassNa=_ref73.balloonClassName,i=_ref73$balloonClassNa===void 0?"ck-toolbar-container":_ref73$balloonClassNa;if(!n.length){logWarning("widget-toolbar-no-items",{toolbarId:t});return;}var r=this.editor;var s=r.t;var a=new ToolbarView(r.locale);a.ariaLabel=e||s("Widget toolbar");if(this._toolbarDefinitions.has(t)){throw new CKEditorError("widget-toolbar-duplicated",this,{toolbarId:t});}a.fillFromConfig(n,r.ui.componentFactory);this._toolbarDefinitions.set(t,{view:a,getRelatedElement:o,balloonClassName:i});}},{key:"_updateToolbarsVisibility",value:function _updateToolbarsVisibility(){var t=0;var e=null;var n=null;var _iterator354=_createForOfIteratorHelper(this._toolbarDefinitions.values()),_step354;try{for(_iterator354.s();!(_step354=_iterator354.n()).done;){var _o167=_step354.value;var _i133=_o167.getRelatedElement(this.editor.editing.view.document.selection);if(!this.isEnabled||!_i133){if(this._isToolbarInBalloon(_o167)){this._hideToolbar(_o167);}}else if(!this.editor.ui.focusTracker.isFocused){if(this._isToolbarVisible(_o167)){this._hideToolbar(_o167);}}else{var _r63=_i133.getAncestors().length;if(_r63>t){t=_r63;e=_i133;n=_o167;}}}}catch(err){_iterator354.e(err);}finally{_iterator354.f();}if(n){this._showToolbar(n,e);}}},{key:"_hideToolbar",value:function _hideToolbar(t){this._balloon.remove(t.view);this.stopListening(this._balloon,"change:visibleView");}},{key:"_showToolbar",value:function _showToolbar(t,e){var _this229=this;if(this._isToolbarVisible(t)){_S(this.editor,e);}else if(!this._isToolbarInBalloon(t)){this._balloon.add({view:t.view,position:vS(this.editor,e),balloonClassName:t.balloonClassName});this.listenTo(this._balloon,"change:visibleView",function(){var _iterator355=_createForOfIteratorHelper(_this229._toolbarDefinitions.values()),_step355;try{for(_iterator355.s();!(_step355=_iterator355.n()).done;){var _t271=_step355.value;if(_this229._isToolbarVisible(_t271)){var _e242=_t271.getRelatedElement(_this229.editor.editing.view.document.selection);_S(_this229.editor,_e242);}}}catch(err){_iterator355.e(err);}finally{_iterator355.f();}});}}},{key:"_isToolbarVisible",value:function _isToolbarVisible(t){return this._balloon.visibleView===t.view;}},{key:"_isToolbarInBalloon",value:function _isToolbarInBalloon(t){return this._balloon.hasView(t.view);}}],[{key:"requires",get:function get(){return[ContextualBalloon];}},{key:"pluginName",get:function get(){return"WidgetToolbarRepository";}}]);return wS;}(null&&Plugin);function _S(t,e){var n=t.plugins.get("ContextualBalloon");var o=vS(t,e);n.updatePosition(o);}function vS(t,e){var n=t.editing.view;var o=BalloonPanelView.defaultPositions;return{target:n.domConverter.mapViewToDom(e),positions:[o.northArrowSouth,o.northArrowSouthWest,o.northArrowSouthEast,o.southArrowNorth,o.southArrowNorthWest,o.southArrowNorthEast,o.viewportStickyNorth]};}function AS(t){var e=t.getSelectedElement();return!!(e&&isWidget(e));}var CS=/*#__PURE__*/function(){function CS(t){_classCallCheck(this,CS);this.set("activeHandlePosition",null);this.set("proposedWidthPercents",null);this.set("proposedWidth",null);this.set("proposedHeight",null);this.set("proposedHandleHostWidth",null);this.set("proposedHandleHostHeight",null);this._options=t;this._referenceCoordinates=null;}_createClass(CS,[{key:"begin",value:function begin(t,e,n){var o=new Yf(e);this.activeHandlePosition=DS(t);this._referenceCoordinates=xS(e,SS(this.activeHandlePosition));this.originalWidth=o.width;this.originalHeight=o.height;this.aspectRatio=o.width/o.height;var i=n.style.width;if(i&&i.match(/^\d+(\.\d*)?%$/)){this.originalWidthPercents=parseFloat(i);}else{this.originalWidthPercents=yS(n,o);}}},{key:"update",value:function update(t){this.proposedWidth=t.width;this.proposedHeight=t.height;this.proposedWidthPercents=t.widthPercents;this.proposedHandleHostWidth=t.handleHostWidth;this.proposedHandleHostHeight=t.handleHostHeight;}}]);return CS;}();fo(CS,eo);function yS(t,e){var n=t.parentElement;var o=parseFloat(n.ownerDocument.defaultView.getComputedStyle(n).width);return e.width/o*100;}function xS(t,e){var n=new Yf(t);var o=e.split("-");var i={x:o[1]=="right"?n.right:n.left,y:o[0]=="bottom"?n.bottom:n.top};i.x+=t.ownerDocument.defaultView.scrollX;i.y+=t.ownerDocument.defaultView.scrollY;return i;}function ES(t){return"ck-widget__resizer__handle-".concat(t);}function DS(t){var e=["top-left","top-right","bottom-right","bottom-left"];for(var _i134=0,_e243=e;_i134<_e243.length;_i134++){var _n241=_e243[_i134];if(t.classList.contains(ES(_n241))){return _n241;}}}function SS(t){var e=t.split("-");var n={top:"bottom",bottom:"top",left:"right",right:"left"};return"".concat(n[e[0]],"-").concat(n[e[1]]);}var PS=/*#__PURE__*/function(_Fw23){_inherits(PS,_Fw23);var _super141=_createSuper(PS);function PS(){var _this230;_classCallCheck(this,PS);_this230=_super141.call(this);var t=_this230.bindTemplate;_this230.setTemplate({tag:"div",attributes:{class:["ck","ck-size-view",t.to("_viewPosition",function(t){return t?"ck-orientation-".concat(t):"";})],style:{display:t.if("_isVisible","none",function(t){return!t;})}},children:[{text:t.to("_label")}]});return _this230;}_createClass(PS,[{key:"_bindToState",value:function _bindToState(t,e){this.bind("_isVisible").to(e,"proposedWidth",e,"proposedHeight",function(t,e){return t!==null&&e!==null;});this.bind("_label").to(e,"proposedHandleHostWidth",e,"proposedHandleHostHeight",e,"proposedWidthPercents",function(e,n,o){if(t.unit==="px"){return"".concat(e,"\xD7").concat(n);}else{return"".concat(o,"%");}});this.bind("_viewPosition").to(e,"activeHandlePosition",e,"proposedHandleHostWidth",e,"proposedHandleHostHeight",function(t,e,n){return e<50||n<50?"above-center":t;});}},{key:"_dismiss",value:function _dismiss(){this.unbind();this._isVisible=false;}}]);return PS;}(Fw);var TS=/*#__PURE__*/function(){function TS(t){var _this231=this;_classCallCheck(this,TS);this._options=t;this._viewResizerWrapper=null;this.set("isEnabled",true);this.decorate("begin");this.decorate("cancel");this.decorate("commit");this.decorate("updateSize");this.on("commit",function(t){if(!_this231.state.proposedWidth&&!_this231.state.proposedWidthPercents){_this231._cleanup();t.stop();}},{priority:"high"});this.on("change:isEnabled",function(){if(_this231.isEnabled){_this231.redraw();}});}_createClass(TS,[{key:"attach",value:function attach(){var _this232=this;var t=this;var e=this._options.viewElement;var n=this._options.editor.editing.view;n.change(function(n){var o=n.createUIElement("div",{class:"ck ck-reset_all ck-widget__resizer"},function(e){var n=this.toDomElement(e);t._appendHandles(n);t._appendSizeUI(n);t.on("change:isEnabled",function(t,e,o){n.style.display=o?"":"none";});n.style.display=t.isEnabled?"":"none";return n;});n.insert(n.createPositionAt(e,"end"),o);n.addClass("ck-widget_with-resizer",e);_this232._viewResizerWrapper=o;});}},{key:"begin",value:function begin(t){this.state=new CS(this._options);this._sizeView._bindToState(this._options,this.state);this._initialViewWidth=this._options.viewElement.getStyle("width");this.state.begin(t,this._getHandleHost(),this._getResizeHost());}},{key:"updateSize",value:function updateSize(t){var _this233=this;var e=this._proposeNewSize(t);var n=this._options.editor.editing.view;n.change(function(t){var n=_this233._options.unit||"%";var o=(n==="%"?e.widthPercents:e.width)+n;t.setStyle("width",o,_this233._options.viewElement);});var o=this._getHandleHost();var i=new Yf(o);e.handleHostWidth=Math.round(i.width);e.handleHostHeight=Math.round(i.height);var r=new Yf(o);e.width=Math.round(r.width);e.height=Math.round(r.height);this.redraw(i);this.state.update(e);}},{key:"commit",value:function commit(){var _this234=this;var t=this._options.unit||"%";var e=(t==="%"?this.state.proposedWidthPercents:this.state.proposedWidth)+t;this._options.editor.editing.view.change(function(){_this234._cleanup();_this234._options.onCommit(e);});}},{key:"cancel",value:function cancel(){this._cleanup();}},{key:"destroy",value:function destroy(){this.cancel();}},{key:"redraw",value:function redraw(t){var e=this._domResizerWrapper;if(!RS(e)){return;}var n=e.parentElement;var o=this._getHandleHost();var i=this._viewResizerWrapper;var r=[i.getStyle("width"),i.getStyle("height"),i.getStyle("left"),i.getStyle("top")];var s;if(n.isSameNode(o)){var _e244=t||new Yf(o);s=[_e244.width+"px",_e244.height+"px",undefined,undefined];}else{s=[o.offsetWidth+"px",o.offsetHeight+"px",o.offsetLeft+"px",o.offsetTop+"px"];}if(lc(r,s)!=="same"){this._options.editor.editing.view.change(function(t){t.setStyle({width:s[0],height:s[1],left:s[2],top:s[3]},i);});}}},{key:"containsHandle",value:function containsHandle(t){return this._domResizerWrapper.contains(t);}},{key:"_cleanup",value:function _cleanup(){var _this235=this;this._sizeView._dismiss();var t=this._options.editor.editing.view;t.change(function(t){t.setStyle("width",_this235._initialViewWidth,_this235._options.viewElement);});}},{key:"_proposeNewSize",value:function _proposeNewSize(t){var e=this.state;var n=IS(t);var o=this._options.isCentered?this._options.isCentered(this):true;var i={x:e._referenceCoordinates.x-(n.x+e.originalWidth),y:n.y-e.originalHeight-e._referenceCoordinates.y};if(o&&e.activeHandlePosition.endsWith("-right")){i.x=n.x-(e._referenceCoordinates.x+e.originalWidth);}if(o){i.x*=2;}var r={width:Math.abs(e.originalWidth+i.x),height:Math.abs(e.originalHeight+i.y)};r.dominant=r.width/e.aspectRatio>r.height?"width":"height";r.max=r[r.dominant];var s={width:r.width,height:r.height};if(r.dominant=="width"){s.height=s.width/e.aspectRatio;}else{s.width=s.height*e.aspectRatio;}return{width:Math.round(s.width),height:Math.round(s.height),widthPercents:Math.min(Math.round(e.originalWidthPercents/e.originalWidth*s.width*100)/100,100)};}},{key:"_getResizeHost",value:function _getResizeHost(){var t=this._domResizerWrapper.parentElement;return this._options.getResizeHost(t);}},{key:"_getHandleHost",value:function _getHandleHost(){var t=this._domResizerWrapper.parentElement;return this._options.getHandleHost(t);}},{key:"_domResizerWrapper",get:function get(){return this._options.editor.editing.view.domConverter.mapViewToDom(this._viewResizerWrapper);}},{key:"_appendHandles",value:function _appendHandles(t){var e=["top-left","top-right","bottom-right","bottom-left"];for(var _i135=0,_e245=e;_i135<_e245.length;_i135++){var _n242=_e245[_i135];t.appendChild(new Lw({tag:"div",attributes:{class:"ck-widget__resizer__handle ".concat(BS(_n242))}}).render());}}},{key:"_appendSizeUI",value:function _appendSizeUI(t){this._sizeView=new PS();this._sizeView.render();t.appendChild(this._sizeView.element);}}],[{key:"isResizeHandle",value:function isResizeHandle(t){return t.classList.contains("ck-widget__resizer__handle");}}]);return TS;}();fo(TS,eo);function BS(t){return"ck-widget__resizer__handle-".concat(t);}function IS(t){return{x:t.pageX,y:t.pageY};}function RS(t){return t&&t.ownerDocument&&t.ownerDocument.contains(t);}var OS=n(263);var zS={injectType:"singletonStyleTag",attributes:{"data-cke":true}};zS.insert="head";zS.singleton=true;var MS=Nh()(OS.Z,zS);var NS=OS.Z.locals||{};var FS=/*#__PURE__*/function(_go31){_inherits(FS,_go31);var _super142=_createSuper(FS);function FS(){_classCallCheck(this,FS);return _super142.apply(this,arguments);}_createClass(FS,[{key:"init",value:function init(){var _this236=this;var t=this.editor.editing;var e=Zh.window.document;this.set("visibleResizer",null);this.set("_activeResizer",null);this._resizers=new Map();t.view.addObserver(UC);this._observer=Object.create(fu);this.listenTo(t.view.document,"mousedown",this._mouseDownListener.bind(this),{priority:"high"});this._observer.listenTo(e,"mousemove",this._mouseMoveListener.bind(this));this._observer.listenTo(e,"mouseup",this._mouseUpListener.bind(this));var n=function n(){if(_this236.visibleResizer){_this236.visibleResizer.redraw();}};this._redrawFocusedResizerThrottled=vE(n,200);this.on("change:visibleResizer",n);this.editor.ui.on("update",this._redrawFocusedResizerThrottled);this.editor.model.document.on("change",function(){var _iterator356=_createForOfIteratorHelper(_this236._resizers),_step356;try{for(_iterator356.s();!(_step356=_iterator356.n()).done;){var _step356$value=_slicedToArray(_step356.value,2),_t272=_step356$value[0],_e246=_step356$value[1];if(!_t272.isAttached()){_this236._resizers.delete(_t272);_e246.destroy();}}}catch(err){_iterator356.e(err);}finally{_iterator356.f();}},{priority:"lowest"});this._observer.listenTo(Zh.window,"resize",this._redrawFocusedResizerThrottled);var o=this.editor.editing.view.document.selection;o.on("change",function(){var t=o.getSelectedElement();_this236.visibleResizer=_this236.getResizerByViewElement(t)||null;});}},{key:"destroy",value:function destroy(){this._observer.stopListening();var _iterator357=_createForOfIteratorHelper(this._resizers.values()),_step357;try{for(_iterator357.s();!(_step357=_iterator357.n()).done;){var _t273=_step357.value;_t273.destroy();}}catch(err){_iterator357.e(err);}finally{_iterator357.f();}this._redrawFocusedResizerThrottled.cancel();}},{key:"attachTo",value:function attachTo(t){var e=new TS(t);var n=this.editor.plugins;e.attach();if(n.has("WidgetToolbarRepository")){var _t274=n.get("WidgetToolbarRepository");e.on("begin",function(){_t274.forceDisabled("resize");},{priority:"lowest"});e.on("cancel",function(){_t274.clearForceDisabled("resize");},{priority:"highest"});e.on("commit",function(){_t274.clearForceDisabled("resize");},{priority:"highest"});}this._resizers.set(t.viewElement,e);var o=this.editor.editing.view.document.selection;var i=o.getSelectedElement();if(this.getResizerByViewElement(i)==e){this.visibleResizer=e;}return e;}},{key:"getResizerByViewElement",value:function getResizerByViewElement(t){return this._resizers.get(t);}},{key:"_getResizerByHandle",value:function _getResizerByHandle(t){var _iterator358=_createForOfIteratorHelper(this._resizers.values()),_step358;try{for(_iterator358.s();!(_step358=_iterator358.n()).done;){var _e247=_step358.value;if(_e247.containsHandle(t)){return _e247;}}}catch(err){_iterator358.e(err);}finally{_iterator358.f();}}},{key:"_mouseDownListener",value:function _mouseDownListener(t,e){var n=e.domTarget;if(!TS.isResizeHandle(n)){return;}this._activeResizer=this._getResizerByHandle(n);if(this._activeResizer){this._activeResizer.begin(n);t.stop();e.preventDefault();}}},{key:"_mouseMoveListener",value:function _mouseMoveListener(t,e){if(this._activeResizer){this._activeResizer.updateSize(e);}}},{key:"_mouseUpListener",value:function _mouseUpListener(){if(this._activeResizer){this._activeResizer.commit();this._activeResizer=null;}}}],[{key:"pluginName",get:function get(){return"WidgetResize";}}]);return FS;}(go);fo(FS,eo);var VS=/*#__PURE__*/function(_mo12){_inherits(VS,_mo12);var _super143=_createSuper(VS);function VS(){_classCallCheck(this,VS);return _super143.apply(this,arguments);}_createClass(VS,[{key:"refresh",value:function refresh(){var t=this.editor;var e=t.plugins.get("ImageUtils");var n=e.getClosestSelectedImageElement(this.editor.model.document.selection);this.isEnabled=!!n;if(this.isEnabled&&n.hasAttribute("alt")){this.value=n.getAttribute("alt");}else{this.value=false;}}},{key:"execute",value:function execute(t){var e=this.editor;var n=e.plugins.get("ImageUtils");var o=e.model;var i=n.getClosestSelectedImageElement(o.document.selection);o.change(function(e){e.setAttribute("alt",t.newValue,i);});}}]);return VS;}(mo);function LS(t){return t.createContainerElement("span",{class:"image-inline"},t.createEmptyElement("img"));}function HS(t){return t.createContainerElement("figure",{class:"image"},[t.createEmptyElement("img"),t.createSlot()]);}function jS(t,e){var n=t.plugins.get("ImageUtils");var o=t.plugins.has("ImageInlineEditing")&&t.plugins.has("ImageBlockEditing");return function(t){if(!n.isInlineImageView(t)){return null;}if(!o){return i(t);}var r=t.findAncestor(n.isBlockImageView)?"imageBlock":"imageInline";if(r!==e){return null;}return i(t);};function i(t){var e={name:true};if(t.hasAttribute("src")){e.attributes=["src"];}return e;}}function qS(t,e){var n=mg(e.getSelectedBlocks());if(!n||t.isObject(n)){return"imageBlock";}if(n.isEmpty&&n.name!="listItem"){return"imageBlock";}return"imageInline";}var WS=/*#__PURE__*/function(_go32){_inherits(WS,_go32);var _super144=_createSuper(WS);function WS(){_classCallCheck(this,WS);return _super144.apply(this,arguments);}_createClass(WS,[{key:"isImage",value:function isImage(t){return this.isInlineImage(t)||this.isBlockImage(t);}},{key:"isInlineImageView",value:function isInlineImageView(t){return!!t&&t.is("element","img");}},{key:"isBlockImageView",value:function isBlockImageView(t){return!!t&&t.is("element","figure")&&t.hasClass("image");}},{key:"insertImage",value:function insertImage(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var o=this.editor;var i=o.model;var r=i.document.selection;n=US(o,e||r,n);t=_objectSpread(_objectSpread({},Object.fromEntries(r.getAttributes())),t);for(var _e248 in t){if(!i.schema.checkAttribute(n,_e248)){delete t[_e248];}}return i.change(function(o){var r=o.createElement(n,t);i.insertObject(r,e,null,{setSelection:"on",findOptimalPosition:!e&&n!="imageInline"});if(r.parent){return r;}return null;});}},{key:"getClosestSelectedImageWidget",value:function getClosestSelectedImageWidget(t){var e=t.getSelectedElement();if(e&&this.isImageWidget(e)){return e;}var n=t.getFirstPosition().parent;while(n){if(n.is("element")&&this.isImageWidget(n)){return n;}n=n.parent;}return null;}},{key:"getClosestSelectedImageElement",value:function getClosestSelectedImageElement(t){var e=t.getSelectedElement();return this.isImage(e)?e:t.getFirstPosition().findAncestor("imageBlock");}},{key:"isImageAllowed",value:function isImageAllowed(){var t=this.editor.model;var e=t.document.selection;return KS(this.editor,e)&&GS(e);}},{key:"toImageWidget",value:function toImageWidget(t,e,n){var _this237=this;e.setCustomProperty("image",true,t);var o=function o(){var e=_this237.findViewImgElement(t);var o=e.getAttribute("alt");return o?"".concat(o," ").concat(n):n;};return Dx(t,e,{label:o});}},{key:"isImageWidget",value:function isImageWidget(t){return!!t.getCustomProperty("image")&&Ex(t);}},{key:"isBlockImage",value:function isBlockImage(t){return!!t&&t.is("element","imageBlock");}},{key:"isInlineImage",value:function isInlineImage(t){return!!t&&t.is("element","imageInline");}},{key:"findViewImgElement",value:function findViewImgElement(t){if(this.isInlineImageView(t)){return t;}var e=this.editor.editing.view;var _iterator359=_createForOfIteratorHelper(e.createRangeIn(t)),_step359;try{for(_iterator359.s();!(_step359=_iterator359.n()).done;){var _n243=_step359.value.item;if(this.isInlineImageView(_n243)){return _n243;}}}catch(err){_iterator359.e(err);}finally{_iterator359.f();}}}],[{key:"pluginName",get:function get(){return"ImageUtils";}}]);return WS;}(go);function KS(t,e){var n=US(t,e);if(n=="imageBlock"){var _n244=$S(e,t.model);if(t.model.schema.checkChild(_n244,"imageBlock")){return true;}}else if(t.model.schema.checkChild(e.focus,"imageInline")){return true;}return false;}function GS(t){return _toConsumableArray(t.focus.getAncestors()).every(function(t){return!t.is("element","imageBlock");});}function $S(t,e){var n=Ox(t,e);var o=n.start.parent;if(o.isEmpty&&!o.is("element","$root")){return o.parent;}return o;}function US(t,e,n){var o=t.model.schema;var i=t.config.get("image.insert.type");if(!t.plugins.has("ImageBlockEditing")){return"imageInline";}if(!t.plugins.has("ImageInlineEditing")){return"imageBlock";}if(n){return n;}if(i==="inline"){return"imageInline";}if(i==="block"){return"imageBlock";}if(e.is("selection")){return qS(o,e);}return o.checkChild(e,"imageInline")?"imageInline":"imageBlock";}var JS=/*#__PURE__*/function(_go33){_inherits(JS,_go33);var _super145=_createSuper(JS);function JS(){_classCallCheck(this,JS);return _super145.apply(this,arguments);}_createClass(JS,[{key:"init",value:function init(){this.editor.commands.add("imageTextAlternative",new VS(this.editor));}}],[{key:"requires",get:function get(){return[WS];}},{key:"pluginName",get:function get(){return"ImageTextAlternativeEditing";}}]);return JS;}(go);var ZS=n(831);var YS={injectType:"singletonStyleTag",attributes:{"data-cke":true}};YS.insert="head";YS.singleton=true;var QS=Nh()(ZS.Z,YS);var XS=ZS.Z.locals||{};var tP=n(590);var eP={injectType:"singletonStyleTag",attributes:{"data-cke":true}};eP.insert="head";eP.singleton=true;var nP=Nh()(tP.Z,eP);var oP=tP.Z.locals||{};var iP=/*#__PURE__*/function(_Fw24){_inherits(iP,_Fw24);var _super146=_createSuper(iP);function iP(t){var _this238;_classCallCheck(this,iP);_this238=_super146.call(this,t);var e=_this238.locale.t;_this238.focusTracker=new kg();_this238.keystrokes=new bg();_this238.labeledInput=_this238._createLabeledInputView();_this238.saveButtonView=_this238._createButton(e("Save"),Sw.check,"ck-button-save");_this238.saveButtonView.type="submit";_this238.cancelButtonView=_this238._createButton(e("Cancel"),Sw.cancel,"ck-button-cancel","cancel");_this238._focusables=new Iw();_this238._focusCycler=new q_({focusables:_this238._focusables,focusTracker:_this238.focusTracker,keystrokeHandler:_this238.keystrokes,actions:{focusPrevious:"shift + tab",focusNext:"tab"}});_this238.setTemplate({tag:"form",attributes:{class:["ck","ck-text-alternative-form","ck-responsive-form"],tabindex:"-1"},children:[_this238.labeledInput,_this238.saveButtonView,_this238.cancelButtonView]});Tw(_assertThisInitialized(_this238));return _this238;}_createClass(iP,[{key:"render",value:function render(){var _this239=this;_get(_getPrototypeOf(iP.prototype),"render",this).call(this);this.keystrokes.listenTo(this.element);Bw({view:this});[this.labeledInput,this.saveButtonView,this.cancelButtonView].forEach(function(t){_this239._focusables.add(t);_this239.focusTracker.add(t.element);});}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(iP.prototype),"destroy",this).call(this);this.focusTracker.destroy();this.keystrokes.destroy();}},{key:"_createButton",value:function _createButton(t,e,n,o){var i=new B_(this.locale);i.set({label:t,icon:e,tooltip:true});i.extendTemplate({attributes:{class:n}});if(o){i.delegate("execute").to(this,o);}return i;}},{key:"_createLabeledInputView",value:function _createLabeledInputView(){var t=this.locale.t;var e=new DA(this.locale,SA);e.label=t("Text alternative");return e;}}]);return iP;}(Fw);function rP(t){var e=t.plugins.get("ContextualBalloon");if(t.plugins.get("ImageUtils").getClosestSelectedImageWidget(t.editing.view.document.selection)){var _n245=sP(t);e.updatePosition(_n245);}}function sP(t){var e=t.editing.view;var n=LA.defaultPositions;var o=t.plugins.get("ImageUtils");return{target:e.domConverter.viewToDom(o.getClosestSelectedImageWidget(e.document.selection)),positions:[n.northArrowSouth,n.northArrowSouthWest,n.northArrowSouthEast,n.southArrowNorth,n.southArrowNorthWest,n.southArrowNorthEast,n.viewportStickyNorth]};}var aP=/*#__PURE__*/function(_go34){_inherits(aP,_go34);var _super147=_createSuper(aP);function aP(){_classCallCheck(this,aP);return _super147.apply(this,arguments);}_createClass(aP,[{key:"init",value:function init(){this._createButton();this._createForm();}},{key:"destroy",value:function destroy(){_get(_getPrototypeOf(aP.prototype),"destroy",this).call(this);this._form.destroy();}},{key:"_createButton",value:function _createButton(){var _this240=this;var t=this.editor;var e=t.t;t.ui.componentFactory.add("imageTextAlternative",function(n){var o=t.commands.get("imageTextAlternative");var i=new B_(n);i.set({label:e("Change image text alternative"),icon:Sw.lowVision,tooltip:true});i.bind("isEnabled").to(o,"isEnabled");_this240.listenTo(i,"execute",function(){_this240._showForm();});return i;});}},{key:"_createForm",value:function _createForm(){var _this241=this;var t=this.editor;var e=t.editing.view;var n=e.document;var o=t.plugins.get("ImageUtils");this._balloon=this.editor.plugins.get("ContextualBalloon");this._form=new iP(t.locale);this._form.render();this.listenTo(this._form,"submit",function(){t.execute("imageTextAlternative",{newValue:_this241._form.labeledInput.fieldView.element.value});_this241._hideForm(true);});this.listenTo(this._form,"cancel",function(){_this241._hideForm(true);});this._form.keystrokes.set("Esc",function(t,e){_this241._hideForm(true);e();});this.listenTo(t.ui,"update",function(){if(!o.getClosestSelectedImageWidget(n.selection)){_this241._hideForm(true);}else if(_this241._isVisible){rP(t);}});Pw({emitter:this._form,activator:function activator(){return _this241._isVisible;},contextElements:[this._balloon.view.element],callback:function callback(){return _this241._hideForm();}});}},{key:"_showForm",value:function _showForm(){if(this._isVisible){return;}var t=this.editor;var e=t.commands.get("imageTextAlternative");var n=this._form.labeledInput;this._form.disableCssTransitions();if(!this._isInBalloon){this._balloon.add({view:this._form,position:sP(t)});}n.fieldView.value=n.fieldView.element.value=e.value||"";this._form.labeledInput.fieldView.select();this._form.enableCssTransitions();}},{key:"_hideForm",value:function _hideForm(t){if(!this._isInBalloon){return;}if(this._form.focusTracker.isFocused){this._form.saveButtonView.focus();}this._balloon.remove(this._form);if(t){this.editor.editing.view.focus();}}},{key:"_isVisible",get:function get(){return this._balloon.visibleView===this._form;}},{key:"_isInBalloon",get:function get(){return this._balloon.hasView(this._form);}}],[{key:"requires",get:function get(){return[tC];}},{key:"pluginName",get:function get(){return"ImageTextAlternativeUI";}}]);return aP;}(go);var cP=/*#__PURE__*/function(_go35){_inherits(cP,_go35);var _super148=_createSuper(cP);function cP(){_classCallCheck(this,cP);return _super148.apply(this,arguments);}_createClass(cP,null,[{key:"requires",get:function get(){return[JS,aP];}},{key:"pluginName",get:function get(){return"ImageTextAlternative";}}]);return cP;}(go);function lP(t){return function(t){t.on("element:figure",e);};function e(e,n,o){if(!o.consumable.test(n.viewItem,{name:true,classes:"image"})){return;}var i=t.findViewImgElement(n.viewItem);if(!i||!o.consumable.test(i,{name:true})){return;}o.consumable.consume(n.viewItem,{name:true,classes:"image"});var r=o.convertItem(i,n.modelCursor);var s=mg(r.modelRange.getItems());if(!s){o.consumable.revert(n.viewItem,{name:true,classes:"image"});return;}o.convertChildren(n.viewItem,s);o.updateConversionResult(s,n);}}function dP(t){var e=["srcset","media","type"];return function(t){t.on("element:picture",n);};function n(n,o,i){var r=o.viewItem;if(!i.consumable.test(r,{name:true})){return;}var s=new Map();var _iterator360=_createForOfIteratorHelper(r.getChildren()),_step360;try{for(_iterator360.s();!(_step360=_iterator360.n()).done;){var _t276=_step360.value;if(_t276.is("element","source")){var _n246={};for(var _i136=0,_e249=e;_i136<_e249.length;_i136++){var _o168=_e249[_i136];if(_t276.hasAttribute(_o168)){if(i.consumable.test(_t276,{attributes:_o168})){_n246[_o168]=_t276.getAttribute(_o168);}}}if(Object.keys(_n246).length){s.set(_t276,_n246);}}}}catch(err){_iterator360.e(err);}finally{_iterator360.f();}var a=t.findViewImgElement(r);if(!a){return;}var c=o.modelCursor.parent;if(!c.is("element","imageBlock")){var _t275=i.convertItem(a,o.modelCursor);o.modelRange=_t275.modelRange;o.modelCursor=_t275.modelCursor;c=first(_t275.modelRange.getItems());}i.consumable.consume(r,{name:true});var _iterator361=_createForOfIteratorHelper(s),_step361;try{for(_iterator361.s();!(_step361=_iterator361.n()).done;){var _step361$value=_slicedToArray(_step361.value,2),_t277=_step361$value[0],_e250=_step361$value[1];i.consumable.consume(_t277,{attributes:Object.keys(_e250)});}}catch(err){_iterator361.e(err);}finally{_iterator361.f();}if(s.size){i.writer.setAttribute("sources",Array.from(s.values()),c);}i.convertChildren(r,c);}}function hP(t,e){return function(t){t.on("attribute:srcset:".concat(e),n);};function n(e,n,o){if(!o.consumable.consume(n.item,e.name)){return;}var i=o.writer;var r=o.mapper.toViewElement(n.item);var s=t.findViewImgElement(r);if(n.attributeNewValue===null){var _t278=n.attributeOldValue;if(_t278.data){i.removeAttribute("srcset",s);i.removeAttribute("sizes",s);if(_t278.width){i.removeAttribute("width",s);}}}else{var _t279=n.attributeNewValue;if(_t279.data){i.setAttribute("srcset",_t279.data,s);i.setAttribute("sizes","100vw",s);if(_t279.width){i.setAttribute("width",_t279.width,s);}}}}}function uP(t){return function(t){t.on("attribute:sources:imageBlock",e);t.on("attribute:sources:imageInline",e);};function e(e,n,o){if(!o.consumable.consume(n.item,e.name)){return;}var i=o.writer;var r=o.mapper.toViewElement(n.item);var s=t.findViewImgElement(r);if(n.attributeNewValue&&n.attributeNewValue.length){var _t280=i.createContainerElement("picture",null,n.attributeNewValue.map(function(t){return i.createEmptyElement("source",t);}));var _e251=[];var _o169=s.parent;while(_o169&&_o169.is("attributeElement")){var _t281=_o169.parent;i.unwrap(i.createRangeOn(s),_o169);_e251.unshift(_o169);_o169=_t281;}i.insert(i.createPositionBefore(s),_t280);i.move(i.createRangeOn(s),i.createPositionAt(_t280,"end"));for(var _i137=0,_e252=_e251;_i137<_e252.length;_i137++){var _n247=_e252[_i137];i.wrap(i.createRangeOn(_t280),_n247);}}else if(s.parent.is("element","picture")){var _t282=s.parent;i.move(i.createRangeOn(s),i.createPositionBefore(_t282));i.remove(_t282);}}}function fP(t,e,n){return function(t){t.on("attribute:".concat(n,":").concat(e),o);};function o(e,n,o){if(!o.consumable.consume(n.item,e.name)){return;}var i=o.writer;var r=o.mapper.toViewElement(n.item);var s=t.findViewImgElement(r);i.setAttribute(n.attributeKey,n.attributeNewValue||"",s);}}var gP=/*#__PURE__*/function(_ku9){_inherits(gP,_ku9);var _super149=_createSuper(gP);function gP(){_classCallCheck(this,gP);return _super149.apply(this,arguments);}_createClass(gP,[{key:"observe",value:function observe(t){var _this242=this;this.listenTo(t,"load",function(t,e){var n=e.target;if(_this242.checkShouldIgnoreEventFromTarget(n)){return;}if(n.tagName=="IMG"){_this242._fireEvents(e);}},{useCapture:true});}},{key:"_fireEvents",value:function _fireEvents(t){if(this.isEnabled){this.document.fire("layoutChanged");this.document.fire("imageLoaded",t);}}}]);return gP;}(ku);var pP=/*#__PURE__*/function(_mo13){_inherits(pP,_mo13);var _super150=_createSuper(pP);function pP(t){var _this243;_classCallCheck(this,pP);_this243=_super150.call(this,t);var e=t.config.get("image.insert.type");if(!t.plugins.has("ImageBlockEditing")){if(e==="block"){u("image-block-plugin-required");}}if(!t.plugins.has("ImageInlineEditing")){if(e==="inline"){u("image-inline-plugin-required");}}return _this243;}_createClass(pP,[{key:"refresh",value:function refresh(){this.isEnabled=this.editor.plugins.get("ImageUtils").isImageAllowed();}},{key:"execute",value:function execute(t){var _this244=this;var e=Ya(t.source);var n=this.editor.model.document.selection;var o=this.editor.plugins.get("ImageUtils");var i=Object.fromEntries(n.getAttributes());e.forEach(function(t,e){var r=n.getSelectedElement();if(typeof t==="string"){t={src:t};}if(e&&r&&o.isImage(r)){var _e253=_this244.editor.model.createPositionAfter(r);o.insertImage(_objectSpread(_objectSpread({},t),i),_e253);}else{o.insertImage(_objectSpread(_objectSpread({},t),i));}});}}]);return pP;}(mo);var mP=/*#__PURE__*/function(_go36){_inherits(mP,_go36);var _super151=_createSuper(mP);function mP(){_classCallCheck(this,mP);return _super151.apply(this,arguments);}_createClass(mP,[{key:"init",value:function init(){var t=this.editor;var e=t.conversion;t.editing.view.addObserver(gP);e.for("upcast").attributeToAttribute({view:{name:"img",key:"alt"},model:"alt"}).attributeToAttribute({view:{name:"img",key:"srcset"},model:{key:"srcset",value:function value(t){var e={data:t.getAttribute("srcset")};if(t.hasAttribute("width")){e.width=t.getAttribute("width");}return e;}}});var n=new pP(t);t.commands.add("insertImage",n);t.commands.add("imageInsert",n);}}],[{key:"requires",get:function get(){return[WS];}},{key:"pluginName",get:function get(){return"ImageEditing";}}]);return mP;}(go);var kP=/*#__PURE__*/function(_mo14){_inherits(kP,_mo14);var _super152=_createSuper(kP);function kP(t,e){var _this245;_classCallCheck(this,kP);_this245=_super152.call(this,t);_this245._modelElementName=e;return _this245;}_createClass(kP,[{key:"refresh",value:function refresh(){var t=this.editor;var e=t.plugins.get("ImageUtils");var n=e.getClosestSelectedImageElement(this.editor.model.document.selection);if(this._modelElementName==="imageBlock"){this.isEnabled=e.isInlineImage(n);}else{this.isEnabled=e.isBlockImage(n);}}},{key:"execute",value:function execute(){var _this246=this;var t=this.editor;var e=this.editor.model;var n=t.plugins.get("ImageUtils");var o=n.getClosestSelectedImageElement(e.document.selection);var i=Object.fromEntries(o.getAttributes());if(!i.src&&!i.uploadId){return null;}return e.change(function(t){var r=Array.from(e.markers).filter(function(t){return t.getRange().containsItem(o);});var s=n.insertImage(i,e.createSelection(o,"on"),_this246._modelElementName);if(!s){return null;}var a=t.createRangeOn(s);var _iterator362=_createForOfIteratorHelper(r),_step362;try{for(_iterator362.s();!(_step362=_iterator362.n()).done;){var _e254=_step362.value;var _n248=_e254.getRange();var _o170=_n248.root.rootName!="$graveyard"?_n248.getJoined(a,true):a;t.updateMarker(_e254,{range:_o170});}}catch(err){_iterator362.e(err);}finally{_iterator362.f();}return{oldElement:o,newElement:s};});}}]);return kP;}(mo);var bP=/*#__PURE__*/function(_go37){_inherits(bP,_go37);var _super153=_createSuper(bP);function bP(){_classCallCheck(this,bP);return _super153.apply(this,arguments);}_createClass(bP,[{key:"init",value:function init(){var t=this.editor;var e=t.model.schema;e.register("imageBlock",{inheritAllFrom:"$blockObject",allowAttributes:["alt","src","srcset"]});this._setupConversion();if(t.plugins.has("ImageInlineEditing")){t.commands.add("imageTypeBlock",new kP(this.editor,"imageBlock"));this._setupClipboardIntegration();}}},{key:"_setupConversion",value:function _setupConversion(){var t=this.editor;var e=t.t;var n=t.conversion;var o=t.plugins.get("ImageUtils");n.for("dataDowncast").elementToStructure({model:"imageBlock",view:function view(t,_ref74){var e=_ref74.writer;return HS(e);}});n.for("editingDowncast").elementToStructure({model:"imageBlock",view:function view(t,_ref75){var n=_ref75.writer;return o.toImageWidget(HS(n),n,e("image widget"));}});n.for("downcast").add(fP(o,"imageBlock","src")).add(fP(o,"imageBlock","alt")).add(hP(o,"imageBlock"));n.for("upcast").elementToElement({view:jS(t,"imageBlock"),model:function model(t,_ref76){var e=_ref76.writer;return e.createElement("imageBlock",t.hasAttribute("src")?{src:t.getAttribute("src")}:null);}}).add(lP(o));}},{key:"_setupClipboardIntegration",value:function _setupClipboardIntegration(){var t=this.editor;var e=t.model;var n=t.editing.view;var o=t.plugins.get("ImageUtils");this.listenTo(t.plugins.get("ClipboardPipeline"),"inputTransformation",function(i,r){var s=Array.from(r.content.getChildren());var a;if(!s.every(o.isInlineImageView)){return;}if(r.targetRanges){a=t.editing.mapper.toModelRange(r.targetRanges[0]);}else{a=e.document.selection.getFirstRange();}var c=e.createSelection(a);if(qS(e.schema,c)==="imageBlock"){var _t283=new JC(n.document);var _e255=s.map(function(e){return _t283.createElement("figure",{class:"image"},e);});r.content=_t283.createDocumentFragment(_e255);}});}}],[{key:"requires",get:function get(){return[mP,WS,ox];}},{key:"pluginName",get:function get(){return"ImageBlockEditing";}}]);return bP;}(go);var wP=n(48);var _P={injectType:"singletonStyleTag",attributes:{"data-cke":true}};_P.insert="head";_P.singleton=true;var vP=Nh()(wP.Z,_P);var AP=wP.Z.locals||{};var CP=/*#__PURE__*/function(_go38){_inherits(CP,_go38);var _super154=_createSuper(CP);function CP(){_classCallCheck(this,CP);return _super154.apply(this,arguments);}_createClass(CP,null,[{key:"requires",get:function get(){return[bP,mE,cP];}},{key:"pluginName",get:function get(){return"ImageBlock";}}]);return CP;}(go);var yP=/*#__PURE__*/function(_go39){_inherits(yP,_go39);var _super155=_createSuper(yP);function yP(){_classCallCheck(this,yP);return _super155.apply(this,arguments);}_createClass(yP,[{key:"init",value:function init(){var t=this.editor;var e=t.model.schema;e.register("imageInline",{inheritAllFrom:"$inlineObject",allowAttributes:["alt","src","srcset"]});e.addChildCheck(function(t,e){if(t.endsWith("caption")&&e.name==="imageInline"){return false;}});this._setupConversion();if(t.plugins.has("ImageBlockEditing")){t.commands.add("imageTypeInline",new kP(this.editor,"imageInline"));this._setupClipboardIntegration();}}},{key:"_setupConversion",value:function _setupConversion(){var t=this.editor;var e=t.t;var n=t.conversion;var o=t.plugins.get("ImageUtils");n.for("dataDowncast").elementToElement({model:"imageInline",view:function view(t,_ref77){var e=_ref77.writer;return e.createEmptyElement("img");}});n.for("editingDowncast").elementToStructure({model:"imageInline",view:function view(t,_ref78){var n=_ref78.writer;return o.toImageWidget(LS(n),n,e("image widget"));}});n.for("downcast").add(fP(o,"imageInline","src")).add(fP(o,"imageInline","alt")).add(hP(o,"imageInline"));n.for("upcast").elementToElement({view:jS(t,"imageInline"),model:function model(t,_ref79){var e=_ref79.writer;return e.createElement("imageInline",t.hasAttribute("src")?{src:t.getAttribute("src")}:null);}});}},{key:"_setupClipboardIntegration",value:function _setupClipboardIntegration(){var t=this.editor;var e=t.model;var n=t.editing.view;var o=t.plugins.get("ImageUtils");this.listenTo(t.plugins.get("ClipboardPipeline"),"inputTransformation",function(i,r){var s=Array.from(r.content.getChildren());var a;if(!s.every(o.isBlockImageView)){return;}if(r.targetRanges){a=t.editing.mapper.toModelRange(r.targetRanges[0]);}else{a=e.document.selection.getFirstRange();}var c=e.createSelection(a);if(qS(e.schema,c)==="imageInline"){var _t284=new JC(n.document);var _e256=s.map(function(e){if(e.childCount===1){Array.from(e.getAttributes()).forEach(function(n){return _t284.setAttribute.apply(_t284,_toConsumableArray(n).concat([o.findViewImgElement(e)]));});return e.getChild(0);}else{return e;}});r.content=_t284.createDocumentFragment(_e256);}});}}],[{key:"requires",get:function get(){return[mP,WS,ox];}},{key:"pluginName",get:function get(){return"ImageInlineEditing";}}]);return yP;}(go);var xP=/*#__PURE__*/function(_go40){_inherits(xP,_go40);var _super156=_createSuper(xP);function xP(){_classCallCheck(this,xP);return _super156.apply(this,arguments);}_createClass(xP,null,[{key:"requires",get:function get(){return[yP,mE,cP];}},{key:"pluginName",get:function get(){return"ImageInline";}}]);return xP;}(go);var EP=/*#__PURE__*/function(_go41){_inherits(EP,_go41);var _super157=_createSuper(EP);function EP(){_classCallCheck(this,EP);return _super157.apply(this,arguments);}_createClass(EP,null,[{key:"requires",get:function get(){return[CP,xP];}},{key:"pluginName",get:function get(){return"Image";}}]);return EP;}(go);var DP="italic";var SP=/*#__PURE__*/function(_go42){_inherits(SP,_go42);var _super158=_createSuper(SP);function SP(){_classCallCheck(this,SP);return _super158.apply(this,arguments);}_createClass(SP,[{key:"init",value:function init(){var t=this.editor;t.model.schema.extend("$text",{allowAttributes:DP});t.model.schema.setAttributeProperties(DP,{isFormatting:true,copyOnEnter:true});t.conversion.attributeToElement({model:DP,view:"i",upcastAlso:["em",{styles:{"font-style":"italic"}}]});t.commands.add(DP,new jy(t,DP));t.keystrokes.set("CTRL+I",DP);}}],[{key:"pluginName",get:function get(){return"ItalicEditing";}}]);return SP;}(go);var PP='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="m9.586 14.633.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z"/></svg>';var TP="italic";var BP=/*#__PURE__*/function(_go43){_inherits(BP,_go43);var _super159=_createSuper(BP);function BP(){_classCallCheck(this,BP);return _super159.apply(this,arguments);}_createClass(BP,[{key:"init",value:function init(){var _this247=this;var t=this.editor;var e=t.t;t.ui.componentFactory.add(TP,function(n){var o=t.commands.get(TP);var i=new B_(n);i.set({label:e("Italic"),icon:PP,keystroke:"CTRL+I",tooltip:true,isToggleable:true});i.bind("isOn","isEnabled").to(o,"value","isEnabled");_this247.listenTo(i,"execute",function(){t.execute(TP);t.editing.view.focus();});return i;});}}],[{key:"pluginName",get:function get(){return"ItalicUI";}}]);return BP;}(go);var IP=/*#__PURE__*/function(_go44){_inherits(IP,_go44);var _super160=_createSuper(IP);function IP(){_classCallCheck(this,IP);return _super160.apply(this,arguments);}_createClass(IP,null,[{key:"requires",get:function get(){return[SP,BP];}},{key:"pluginName",get:function get(){return"Italic";}}]);return IP;}(go);var RP=/*#__PURE__*/function(_mo15){_inherits(RP,_mo15);var _super161=_createSuper(RP);function RP(t,e){var _this248;_classCallCheck(this,RP);_this248=_super161.call(this,t);_this248.type=e;return _this248;}_createClass(RP,[{key:"refresh",value:function refresh(){this.value=this._getValue();this.isEnabled=this._checkEnabled();}},{key:"execute",value:function execute(){var _this249=this;var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var e=this.editor.model;var n=e.document;var o=Array.from(n.selection.getSelectedBlocks()).filter(function(t){return zP(t,e.schema);});var i=t.forceValue!==undefined?!t.forceValue:this.value;e.change(function(t){if(i){var _e257=o[o.length-1].nextSibling;var _n249=Number.POSITIVE_INFINITY;var _i138=[];while(_e257&&_e257.name=="listItem"&&_e257.getAttribute("listIndent")!==0){var _t285=_e257.getAttribute("listIndent");if(_t285<_n249){_n249=_t285;}var _o171=_t285-_n249;_i138.push({element:_e257,listIndent:_o171});_e257=_e257.nextSibling;}_i138=_i138.reverse();var _iterator363=_createForOfIteratorHelper(_i138),_step363;try{for(_iterator363.s();!(_step363=_iterator363.n()).done;){var _e258=_step363.value;t.setAttribute("listIndent",_e258.listIndent,_e258.element);}}catch(err){_iterator363.e(err);}finally{_iterator363.f();}}if(!i){var _t286=Number.POSITIVE_INFINITY;var _iterator364=_createForOfIteratorHelper(o),_step364;try{for(_iterator364.s();!(_step364=_iterator364.n()).done;){var _e259=_step364.value;if(_e259.is("element","listItem")&&_e259.getAttribute("listIndent")<_t286){_t286=_e259.getAttribute("listIndent");}}}catch(err){_iterator364.e(err);}finally{_iterator364.f();}_t286=_t286===0?1:_t286;OP(o,true,_t286);OP(o,false,_t286);}var _iterator365=_createForOfIteratorHelper(o.reverse()),_step365;try{for(_iterator365.s();!(_step365=_iterator365.n()).done;){var _e260=_step365.value;if(i&&_e260.name=="listItem"){t.rename(_e260,"paragraph");}else if(!i&&_e260.name!="listItem"){t.setAttributes({listType:_this249.type,listIndent:0},_e260);t.rename(_e260,"listItem");}else if(!i&&_e260.name=="listItem"&&_e260.getAttribute("listType")!=_this249.type){t.setAttribute("listType",_this249.type,_e260);}}}catch(err){_iterator365.e(err);}finally{_iterator365.f();}_this249.fire("_executeCleanup",o);});}},{key:"_getValue",value:function _getValue(){var t=mg(this.editor.model.document.selection.getSelectedBlocks());return!!t&&t.is("element","listItem")&&t.getAttribute("listType")==this.type;}},{key:"_checkEnabled",value:function _checkEnabled(){if(this.value){return true;}var t=this.editor.model.document.selection;var e=this.editor.model.schema;var n=mg(t.getSelectedBlocks());if(!n){return false;}return zP(n,e);}}]);return RP;}(mo);function OP(t,e,n){var o=e?t[0]:t[t.length-1];if(o.is("element","listItem")){var _i139=o[e?"previousSibling":"nextSibling"];var _r64=o.getAttribute("listIndent");while(_i139&&_i139.is("element","listItem")&&_i139.getAttribute("listIndent")>=n){if(_r64>_i139.getAttribute("listIndent")){_r64=_i139.getAttribute("listIndent");}if(_i139.getAttribute("listIndent")==_r64){t[e?"unshift":"push"](_i139);}_i139=_i139[e?"previousSibling":"nextSibling"];}}}function zP(t,e){return e.checkChild(t.parent,"listItem")&&!e.isObject(t);}var MP=/*#__PURE__*/function(_mo16){_inherits(MP,_mo16);var _super162=_createSuper(MP);function MP(t,e){var _this250;_classCallCheck(this,MP);_this250=_super162.call(this,t);_this250._indentBy=e=="forward"?1:-1;return _this250;}_createClass(MP,[{key:"refresh",value:function refresh(){this.isEnabled=this._checkEnabled();}},{key:"execute",value:function execute(){var _this251=this;var t=this.editor.model;var e=t.document;var n=Array.from(e.selection.getSelectedBlocks());t.change(function(t){var e=n[n.length-1];var o=e.nextSibling;while(o&&o.name=="listItem"&&o.getAttribute("listIndent")>e.getAttribute("listIndent")){n.push(o);o=o.nextSibling;}if(_this251._indentBy<0){n=n.reverse();}var _iterator366=_createForOfIteratorHelper(n),_step366;try{for(_iterator366.s();!(_step366=_iterator366.n()).done;){var _e261=_step366.value;var _n250=_e261.getAttribute("listIndent")+_this251._indentBy;if(_n250<0){t.rename(_e261,"paragraph");}else{t.setAttribute("listIndent",_n250,_e261);}}}catch(err){_iterator366.e(err);}finally{_iterator366.f();}_this251.fire("_executeCleanup",n);});}},{key:"_checkEnabled",value:function _checkEnabled(){var t=mg(this.editor.model.document.selection.getSelectedBlocks());if(!t||!t.is("element","listItem")){return false;}if(this._indentBy>0){var _e262=t.getAttribute("listIndent");var _n251=t.getAttribute("listType");var _o172=t.previousSibling;while(_o172&&_o172.is("element","listItem")&&_o172.getAttribute("listIndent")>=_e262){if(_o172.getAttribute("listIndent")==_e262){return _o172.getAttribute("listType")==_n251;}_o172=_o172.previousSibling;}return false;}return true;}}]);return MP;}(mo);function NP(t){var e=t.createContainerElement("li");e.getFillerOffset=ZP;return e;}function FP(t,e){var n=e.mapper;var o=e.writer;var i=t.getAttribute("listType")=="numbered"?"ol":"ul";var r=NP(o);var s=o.createContainerElement(i,null);o.insert(o.createPositionAt(s,0),r);n.bindElements(t,r);return r;}function VP(t,e,n,o){var i=e.parent;var r=n.mapper;var s=n.writer;var a=r.toViewPosition(o.createPositionBefore(t));var c=jP(t.previousSibling,{sameIndent:true,smallerIndent:true,listIndent:t.getAttribute("listIndent")});var l=t.previousSibling;if(c&&c.getAttribute("listIndent")==t.getAttribute("listIndent")){var _t287=r.toViewElement(c);a=s.breakContainer(s.createPositionAfter(_t287));}else{if(l&&l.name=="listItem"){a=r.toViewPosition(o.createPositionAt(l,"end"));var _t288=r.findMappedViewAncestor(a);var _e263=WP(_t288);if(_e263){a=s.createPositionBefore(_e263);}else{a=s.createPositionAt(_t288,"end");}}else{a=r.toViewPosition(o.createPositionBefore(t));}}a=HP(a);s.insert(a,i);if(l&&l.name=="listItem"){var _t289=r.toViewElement(l);var _n252=s.createRange(s.createPositionAt(_t289,0),a);var _o173=_n252.getWalker({ignoreElementEnd:true});var _iterator367=_createForOfIteratorHelper(_o173),_step367;try{for(_iterator367.s();!(_step367=_iterator367.n()).done;){var _t290=_step367.value;if(_t290.item.is("element","li")){var _n253=s.breakContainer(s.createPositionBefore(_t290.item));var _i140=_t290.item.parent;var _r65=s.createPositionAt(e,"end");LP(s,_r65.nodeBefore,_r65.nodeAfter);s.move(s.createRangeOn(_i140),_r65);_o173.position=_n253;}}}catch(err){_iterator367.e(err);}finally{_iterator367.f();}}else{var _n254=i.nextSibling;if(_n254&&(_n254.is("element","ul")||_n254.is("element","ol"))){var _o174=null;var _iterator368=_createForOfIteratorHelper(_n254.getChildren()),_step368;try{for(_iterator368.s();!(_step368=_iterator368.n()).done;){var _e264=_step368.value;var _n255=r.toModelElement(_e264);if(_n255&&_n255.getAttribute("listIndent")>t.getAttribute("listIndent")){_o174=_e264;}else{break;}}}catch(err){_iterator368.e(err);}finally{_iterator368.f();}if(_o174){s.breakContainer(s.createPositionAfter(_o174));s.move(s.createRangeOn(_o174.parent),s.createPositionAt(e,"end"));}}}LP(s,i,i.nextSibling);LP(s,i.previousSibling,i);}function LP(t,e,n){if(!e||!n||e.name!="ul"&&e.name!="ol"){return null;}if(e.name!=n.name||e.getAttribute("class")!==n.getAttribute("class")){return null;}return t.mergeContainers(t.createPositionAfter(e));}function HP(t){return t.getLastMatchingPosition(function(t){return t.item.is("uiElement");});}function jP(t,e){var n=!!e.sameIndent;var o=!!e.smallerIndent;var i=e.listIndent;var r=t;while(r&&r.name=="listItem"){var _t291=r.getAttribute("listIndent");if(n&&i==_t291||o&&i>_t291){return r;}if(e.direction==="forward"){r=r.nextSibling;}else{r=r.previousSibling;}}return null;}function qP(t,e,n,o){t.ui.componentFactory.add(e,function(i){var r=t.commands.get(e);var s=new B_(i);s.set({label:n,icon:o,tooltip:true,isToggleable:true});s.bind("isOn","isEnabled").to(r,"value","isEnabled");s.on("execute",function(){t.execute(e);t.editing.view.focus();});return s;});}function WP(t){var _iterator369=_createForOfIteratorHelper(t.getChildren()),_step369;try{for(_iterator369.s();!(_step369=_iterator369.n()).done;){var _e265=_step369.value;if(_e265.name=="ul"||_e265.name=="ol"){return _e265;}}}catch(err){_iterator369.e(err);}finally{_iterator369.f();}return null;}function KP(t,e){var n=[];var o=t.parent;var i={ignoreElementEnd:true,startPosition:t,shallow:true,direction:e};var r=o.getAttribute("listIndent");var s=_toConsumableArray(new TreeWalker(i)).filter(function(t){return t.item.is("element");}).map(function(t){return t.item;});var _iterator370=_createForOfIteratorHelper(s),_step370;try{for(_iterator370.s();!(_step370=_iterator370.n()).done;){var _t292=_step370.value;if(!_t292.is("element","listItem")){break;}if(_t292.getAttribute("listIndent")<r){break;}if(_t292.getAttribute("listIndent")>r){continue;}if(_t292.getAttribute("listType")!==o.getAttribute("listType")){break;}if(_t292.getAttribute("listStyle")!==o.getAttribute("listStyle")){break;}if(_t292.getAttribute("listReversed")!==o.getAttribute("listReversed")){break;}if(_t292.getAttribute("listStart")!==o.getAttribute("listStart")){break;}if(e==="backward"){n.unshift(_t292);}else{n.push(_t292);}}}catch(err){_iterator370.e(err);}finally{_iterator370.f();}return n;}function GP(t){var e=t.document;var n=_toConsumableArray(e.selection.getSelectedBlocks()).filter(function(t){return t.is("element","listItem");}).map(function(e){var n=t.change(function(t){return t.createPositionAt(e,0);});return[].concat(_toConsumableArray(KP(n,"backward")),_toConsumableArray(KP(n,"forward")));}).flat();n=_toConsumableArray(new Set(n));return n;}var $P=null&&["disc","circle","square"];var UP=null&&["decimal","decimal-leading-zero","lower-roman","upper-roman","lower-latin","upper-latin"];function JP(t){if($P.includes(t)){return"bulleted";}if(UP.includes(t)){return"numbered";}return null;}function ZP(){var t=!this.isEmpty&&(this.getChild(0).name=="ul"||this.getChild(0).name=="ol");if(this.isEmpty||t){return 0;}return Yl.call(this);}function YP(t){return function(e,n,o){var i=o.consumable;if(!i.test(n.item,"insert")||!i.test(n.item,"attribute:listType")||!i.test(n.item,"attribute:listIndent")){return;}i.consume(n.item,"insert");i.consume(n.item,"attribute:listType");i.consume(n.item,"attribute:listIndent");var r=n.item;var s=FP(r,o);VP(r,s,o,t);};}function QP(t){return function(e,n,o){var i=o.mapper.toViewPosition(n.position);var r=i.getLastMatchingPosition(function(t){return!t.item.is("element","li");});var s=r.nodeAfter;var a=o.writer;a.breakContainer(a.createPositionBefore(s));a.breakContainer(a.createPositionAfter(s));var c=s.parent;var l=c.previousSibling;var d=a.createRangeOn(c);var h=a.remove(d);if(l&&l.nextSibling){LP(a,l,l.nextSibling);}var u=o.mapper.toModelElement(s);fT(u.getAttribute("listIndent")+1,n.position,d.start,s,o,t);var _iterator371=_createForOfIteratorHelper(a.createRangeIn(h).getItems()),_step371;try{for(_iterator371.s();!(_step371=_iterator371.n()).done;){var _t293=_step371.value;o.mapper.unbindViewElement(_t293);}}catch(err){_iterator371.e(err);}finally{_iterator371.f();}e.stop();};}function XP(t,e,n){if(!n.consumable.test(e.item,t.name)){return;}var o=n.mapper.toViewElement(e.item);var i=n.writer;i.breakContainer(i.createPositionBefore(o));i.breakContainer(i.createPositionAfter(o));var r=o.parent;var s=e.attributeNewValue=="numbered"?"ol":"ul";i.rename(s,r);}function tT(t,e,n){n.consumable.consume(e.item,t.name);var o=n.mapper.toViewElement(e.item);var i=o.parent;var r=n.writer;LP(r,i,i.nextSibling);LP(r,i.previousSibling,i);}function eT(t){return function(e,n,o){if(!o.consumable.consume(n.item,"attribute:listIndent")){return;}var i=o.mapper.toViewElement(n.item);var r=o.writer;r.breakContainer(r.createPositionBefore(i));r.breakContainer(r.createPositionAfter(i));var s=i.parent;var a=s.previousSibling;var c=r.createRangeOn(s);r.remove(c);if(a&&a.nextSibling){LP(r,a,a.nextSibling);}fT(n.attributeOldValue+1,n.range.start,c.start,i,o,t);VP(n.item,i,o,t);var _iterator372=_createForOfIteratorHelper(n.item.getChildren()),_step372;try{for(_iterator372.s();!(_step372=_iterator372.n()).done;){var _t294=_step372.value;o.consumable.consume(_t294,"insert");}}catch(err){_iterator372.e(err);}finally{_iterator372.f();}};}function nT(t,e,n){if(!n.consumable.test(e.item,t.name)){return;}if(e.item.name!="listItem"){var _t295=n.mapper.toViewPosition(e.range.start);var _o175=n.writer;var _i141=[];while(_t295.parent.name=="ul"||_t295.parent.name=="ol"){_t295=_o175.breakContainer(_t295);if(_t295.parent.name!="li"){break;}var _e266=_t295;var _n256=_o175.createPositionAt(_t295.parent,"end");if(!_e266.isEqual(_n256)){var _t296=_o175.remove(_o175.createRange(_e266,_n256));_i141.push(_t296);}_t295=_o175.createPositionAfter(_t295.parent);}if(_i141.length>0){for(var _e267=0;_e267<_i141.length;_e267++){var _n257=_t295.nodeBefore;var _r66=_o175.insert(_t295,_i141[_e267]);_t295=_r66.end;if(_e267>0){var _e268=LP(_o175,_n257,_n257.nextSibling);if(_e268&&_e268.parent==_n257){_t295.offset--;}}}LP(_o175,_t295.nodeBefore,_t295.nodeAfter);}}}function oT(t,e,n){var o=n.mapper.toViewPosition(e.position);var i=o.nodeBefore;var r=o.nodeAfter;LP(n.writer,i,r);}function iT(t,e,n){if(n.consumable.consume(e.viewItem,{name:true})){var _t297=n.writer;var _o176=_t297.createElement("listItem");var _i142=pT(e.viewItem);_t297.setAttribute("listIndent",_i142,_o176);var _r67=e.viewItem.parent&&e.viewItem.parent.name=="ol"?"numbered":"bulleted";_t297.setAttribute("listType",_r67,_o176);if(!n.safeInsert(_o176,e.modelCursor)){return;}var _s34=hT(_o176,e.viewItem.getChildren(),n);e.modelRange=_t297.createRange(e.modelCursor,_s34);n.updateConversionResult(_o176,e);}}function rT(t,e,n){if(n.consumable.test(e.viewItem,{name:true})){var _t298=Array.from(e.viewItem.getChildren());for(var _i143=0,_t299=_t298;_i143<_t299.length;_i143++){var _e269=_t299[_i143];var _t300=!(_e269.is("element","li")||gT(_e269));if(_t300){_e269._remove();}}}}function sT(t,e,n){if(n.consumable.test(e.viewItem,{name:true})){if(e.viewItem.childCount===0){return;}var _t301=_toConsumableArray(e.viewItem.getChildren());var _n258=false;var _iterator373=_createForOfIteratorHelper(_t301),_step373;try{for(_iterator373.s();!(_step373=_iterator373.n()).done;){var _e270=_step373.value;if(_n258&&!gT(_e270)){_e270._remove();}if(gT(_e270)){_n258=true;}}}catch(err){_iterator373.e(err);}finally{_iterator373.f();}}}function aT(t){return function(e,n){if(n.isPhantom){return;}var o=n.modelPosition.nodeBefore;if(o&&o.is("element","listItem")){var _e271=n.mapper.toViewElement(o);var _i144=_e271.getAncestors().find(gT);var _r68=t.createPositionAt(_e271,0).getWalker();var _iterator374=_createForOfIteratorHelper(_r68),_step374;try{for(_iterator374.s();!(_step374=_iterator374.n()).done;){var _t302=_step374.value;if(_t302.type=="elementStart"&&_t302.item.is("element","li")){n.viewPosition=_t302.previousPosition;break;}else if(_t302.type=="elementEnd"&&_t302.item==_i144){n.viewPosition=_t302.nextPosition;break;}}}catch(err){_iterator374.e(err);}finally{_iterator374.f();}}};}function cT(t){return function(e,n){var o=n.viewPosition;var i=o.parent;var r=n.mapper;if(i.name=="ul"||i.name=="ol"){if(!o.isAtEnd){var _e272=r.toModelElement(o.nodeAfter);n.modelPosition=t.createPositionBefore(_e272);}else{var _e273=r.toModelElement(o.nodeBefore);var _i145=r.getModelLength(o.nodeBefore);n.modelPosition=t.createPositionBefore(_e273).getShiftedBy(_i145);}e.stop();}else if(i.name=="li"&&o.nodeBefore&&(o.nodeBefore.name=="ul"||o.nodeBefore.name=="ol")){var _s35=r.toModelElement(i);var _a21=1;var _c9=o.nodeBefore;while(_c9&&gT(_c9)){_a21+=r.getModelLength(_c9);_c9=_c9.previousSibling;}n.modelPosition=t.createPositionBefore(_s35).getShiftedBy(_a21);e.stop();}};}function lT(t,e){var n=t.document.differ.getChanges();var o=new Map();var i=false;var _iterator375=_createForOfIteratorHelper(n),_step375;try{for(_iterator375.s();!(_step375=_iterator375.n()).done;){var _o178=_step375.value;if(_o178.type=="insert"&&_o178.name=="listItem"){r(_o178.position);}else if(_o178.type=="insert"&&_o178.name!="listItem"){if(_o178.name!="$text"){var _n260=_o178.position.nodeAfter;if(_n260.hasAttribute("listIndent")){e.removeAttribute("listIndent",_n260);i=true;}if(_n260.hasAttribute("listType")){e.removeAttribute("listType",_n260);i=true;}if(_n260.hasAttribute("listStyle")){e.removeAttribute("listStyle",_n260);i=true;}if(_n260.hasAttribute("listReversed")){e.removeAttribute("listReversed",_n260);i=true;}if(_n260.hasAttribute("listStart")){e.removeAttribute("listStart",_n260);i=true;}var _iterator377=_createForOfIteratorHelper(Array.from(t.createRangeIn(_n260)).filter(function(t){return t.item.is("element","listItem");})),_step377;try{for(_iterator377.s();!(_step377=_iterator377.n()).done;){var _e276=_step377.value;r(_e276.previousPosition);}}catch(err){_iterator377.e(err);}finally{_iterator377.f();}}var _n259=_o178.position.getShiftedBy(_o178.length);r(_n259);}else if(_o178.type=="remove"&&_o178.name=="listItem"){r(_o178.position);}else if(_o178.type=="attribute"&&_o178.attributeKey=="listIndent"){r(_o178.range.start);}else if(_o178.type=="attribute"&&_o178.attributeKey=="listType"){r(_o178.range.start);}}}catch(err){_iterator375.e(err);}finally{_iterator375.f();}var _iterator376=_createForOfIteratorHelper(o.values()),_step376;try{for(_iterator376.s();!(_step376=_iterator376.n()).done;){var _t304=_step376.value;s(_t304);a(_t304);}}catch(err){_iterator376.e(err);}finally{_iterator376.f();}return i;function r(t){var e=t.nodeBefore;if(!e||!e.is("element","listItem")){var _e274=t.nodeAfter;if(_e274&&_e274.is("element","listItem")){o.set(_e274,_e274);}}else{var _t303=e;if(o.has(_t303)){return;}for(var _e275=_t303.previousSibling;_e275&&_e275.is("element","listItem");_e275=_t303.previousSibling){_t303=_e275;if(o.has(_t303)){return;}}o.set(e,_t303);}}function s(t){var n=0;var o=null;while(t&&t.is("element","listItem")){var _r69=t.getAttribute("listIndent");if(_r69>n){var _s36=void 0;if(o===null){o=_r69-n;_s36=n;}else{if(o>_r69){o=_r69;}_s36=_r69-o;}e.setAttribute("listIndent",_s36,t);i=true;}else{o=null;n=t.getAttribute("listIndent")+1;}t=t.nextSibling;}}function a(t){var n=[];var o=null;while(t&&t.is("element","listItem")){var _r70=t.getAttribute("listIndent");if(o&&o.getAttribute("listIndent")>_r70){n=n.slice(0,_r70+1);}if(_r70!=0){if(n[_r70]){var _o177=n[_r70];if(t.getAttribute("listType")!=_o177){e.setAttribute("listType",_o177,t);i=true;}}else{n[_r70]=t.getAttribute("listType");}}o=t;t=t.nextSibling;}}}function dT(t,_ref80){var _ref81=_slicedToArray(_ref80,2),e=_ref81[0],n=_ref81[1];var o=e.is("documentFragment")?e.getChild(0):e;var i;if(!n){i=this.document.selection;}else{i=this.createSelection(n);}if(o&&o.is("element","listItem")){var _t305=i.getFirstPosition();var _e277=null;if(_t305.parent.is("element","listItem")){_e277=_t305.parent;}else if(_t305.nodeBefore&&_t305.nodeBefore.is("element","listItem")){_e277=_t305.nodeBefore;}if(_e277){var _t306=_e277.getAttribute("listIndent");if(_t306>0){while(o&&o.is("element","listItem")){o._setAttribute("listIndent",o.getAttribute("listIndent")+_t306);o=o.nextSibling;}}}}}function hT(t,e,n){var o=n.writer,i=n.schema;var r=o.createPositionAfter(t);var _iterator378=_createForOfIteratorHelper(e),_step378;try{for(_iterator378.s();!(_step378=_iterator378.n()).done;){var _s37=_step378.value;if(_s37.name=="ul"||_s37.name=="ol"){r=n.convertItem(_s37,r).modelCursor;}else{var _e278=n.convertItem(_s37,o.createPositionAt(t,"end"));var _a22=_e278.modelRange.start.nodeAfter;var _c10=_a22&&_a22.is("element")&&!i.checkChild(t,_a22.name);if(_c10){if(_e278.modelCursor.parent.is("element","listItem")){t=_e278.modelCursor.parent;}else{t=uT(_e278.modelCursor);}r=o.createPositionAfter(t);}}}}catch(err){_iterator378.e(err);}finally{_iterator378.f();}return r;}function uT(t){var e=new Sg({startPosition:t});var n;do{n=e.next();}while(!n.value.item.is("element","listItem"));return n.value.item;}function fT(t,e,n,o,i,r){var s=jP(e.nodeBefore,{sameIndent:true,smallerIndent:true,listIndent:t,foo:"b"});var a=i.mapper;var c=i.writer;var l=s?s.getAttribute("listIndent"):null;var d;if(!s){d=n;}else if(l==t){var _t307=a.toViewElement(s).parent;d=c.createPositionAfter(_t307);}else{var _t308=r.createPositionAt(s,"end");d=a.toViewPosition(_t308);}d=HP(d);for(var _i146=0,_arr=_toConsumableArray(o.getChildren());_i146<_arr.length;_i146++){var _t309=_arr[_i146];if(gT(_t309)){d=c.move(c.createRangeOn(_t309),d).end;LP(c,_t309,_t309.nextSibling);LP(c,_t309.previousSibling,_t309);}}}function gT(t){return t.is("element","ol")||t.is("element","ul");}function pT(t){var e=0;var n=t.parent;while(n){if(n.is("element","li")){e++;}else{var _t310=n.previousSibling;if(_t310&&_t310.is("element","li")){e++;}}n=n.parent;}return e;}var mT=/*#__PURE__*/function(_go45){_inherits(mT,_go45);var _super163=_createSuper(mT);function mT(){_classCallCheck(this,mT);return _super163.apply(this,arguments);}_createClass(mT,[{key:"init",value:function init(){var _this252=this;var t=this.editor;t.model.schema.register("listItem",{inheritAllFrom:"$block",allowAttributes:["listType","listIndent"]});var e=t.data;var n=t.editing;t.model.document.registerPostFixer(function(e){return lT(t.model,e);});n.mapper.registerViewToModelLength("li",kT);e.mapper.registerViewToModelLength("li",kT);n.mapper.on("modelToViewPosition",aT(n.view));n.mapper.on("viewToModelPosition",cT(t.model));e.mapper.on("modelToViewPosition",aT(n.view));t.conversion.for("editingDowncast").add(function(e){e.on("insert",nT,{priority:"high"});e.on("insert:listItem",YP(t.model));e.on("attribute:listType:listItem",XP,{priority:"high"});e.on("attribute:listType:listItem",tT,{priority:"low"});e.on("attribute:listIndent:listItem",eT(t.model));e.on("remove:listItem",QP(t.model));e.on("remove",oT,{priority:"low"});});t.conversion.for("dataDowncast").add(function(e){e.on("insert",nT,{priority:"high"});e.on("insert:listItem",YP(t.model));});t.conversion.for("upcast").add(function(t){t.on("element:ul",rT,{priority:"high"});t.on("element:ol",rT,{priority:"high"});t.on("element:li",sT,{priority:"high"});t.on("element:li",iT);});t.model.on("insertContent",dT,{priority:"high"});t.commands.add("numberedList",new RP(t,"numbered"));t.commands.add("bulletedList",new RP(t,"bulleted"));t.commands.add("indentList",new MP(t,"forward"));t.commands.add("outdentList",new MP(t,"backward"));var o=n.view.document;this.listenTo(o,"enter",function(t,e){var n=_this252.editor.model.document;var o=n.selection.getLastPosition().parent;if(n.selection.isCollapsed&&o.name=="listItem"&&o.isEmpty){_this252.editor.execute("outdentList");e.preventDefault();t.stop();}},{context:"li"});this.listenTo(o,"delete",function(t,e){if(e.direction!=="backward"){return;}var n=_this252.editor.model.document.selection;if(!n.isCollapsed){return;}var o=n.getFirstPosition();if(!o.isAtStart){return;}var i=o.parent;if(i.name!=="listItem"){return;}var r=i.previousSibling&&i.previousSibling.name==="listItem";if(r){return;}_this252.editor.execute("outdentList");e.preventDefault();t.stop();},{context:"li"});this.listenTo(t.editing.view.document,"tab",function(e,n){var o=n.shiftKey?"outdentList":"indentList";var i=_this252.editor.commands.get(o);if(i.isEnabled){t.execute(o);n.stopPropagation();n.preventDefault();e.stop();}},{context:"li"});}},{key:"afterInit",value:function afterInit(){var t=this.editor.commands;var e=t.get("indent");var n=t.get("outdent");if(e){e.registerChildCommand(t.get("indentList"));}if(n){n.registerChildCommand(t.get("outdentList"));}}}],[{key:"pluginName",get:function get(){return"ListEditing";}},{key:"requires",get:function get(){return[lx,bx];}}]);return mT;}(go);function kT(t){var e=1;var _iterator379=_createForOfIteratorHelper(t.getChildren()),_step379;try{for(_iterator379.s();!(_step379=_iterator379.n()).done;){var _n261=_step379.value;if(_n261.name=="ul"||_n261.name=="ol"){var _iterator380=_createForOfIteratorHelper(_n261.getChildren()),_step380;try{for(_iterator380.s();!(_step380=_iterator380.n()).done;){var _t311=_step380.value;e+=kT(_t311);}}catch(err){_iterator380.e(err);}finally{_iterator380.f();}}}}catch(err){_iterator379.e(err);}finally{_iterator379.f();}return e;}var bT='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z"/></svg>';var wT='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z"/></svg>';var _T=/*#__PURE__*/function(_go46){_inherits(_T,_go46);var _super164=_createSuper(_T);function _T(){_classCallCheck(this,_T);return _super164.apply(this,arguments);}_createClass(_T,[{key:"init",value:function init(){var t=this.editor.t;qP(this.editor,"numberedList",t("Numbered List"),bT);qP(this.editor,"bulletedList",t("Bulleted List"),wT);}}],[{key:"pluginName",get:function get(){return"ListUI";}}]);return _T;}(go);var vT=/*#__PURE__*/function(_go47){_inherits(vT,_go47);var _super165=_createSuper(vT);function vT(){_classCallCheck(this,vT);return _super165.apply(this,arguments);}_createClass(vT,null,[{key:"requires",get:function get(){return[mT,_T];}},{key:"pluginName",get:function get(){return"List";}}]);return vT;}(go);var AT='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M8.69 14.915c.053.052.173.083.36.093a.366.366 0 0 1 .345.485l-.003.01a.738.738 0 0 1-.697.497h-2.67a.374.374 0 0 1-.353-.496l.013-.038a.681.681 0 0 1 .644-.458c.197-.012.325-.043.386-.093a.28.28 0 0 0 .072-.11L9.592 4.5H6.269c-.359-.017-.609.013-.75.09-.142.078-.289.265-.442.563-.192.29-.516.464-.864.464H4.17a.43.43 0 0 1-.407-.569L4.46 3h13.08l-.62 2.043a.81.81 0 0 1-.775.574h-.114a.486.486 0 0 1-.486-.486c.001-.284-.054-.464-.167-.54-.112-.076-.367-.106-.766-.091h-3.28l-2.68 10.257c-.006.074.007.127.038.158zM3 17h8a.5.5 0 1 1 0 1H3a.5.5 0 1 1 0-1zm11.299 1.17a.75.75 0 1 1-1.06-1.06l1.414-1.415-1.415-1.414a.75.75 0 0 1 1.06-1.06l1.415 1.414 1.414-1.415a.75.75 0 1 1 1.06 1.06l-1.413 1.415 1.414 1.415a.75.75 0 0 1-1.06 1.06l-1.415-1.414-1.414 1.414z"/></svg>';var CT="removeFormat";var yT=/*#__PURE__*/function(_go48){_inherits(yT,_go48);var _super166=_createSuper(yT);function yT(){_classCallCheck(this,yT);return _super166.apply(this,arguments);}_createClass(yT,[{key:"init",value:function init(){var _this253=this;var t=this.editor;var e=t.t;t.ui.componentFactory.add(CT,function(n){var o=t.commands.get(CT);var i=new B_(n);i.set({label:e("Remove Format"),icon:AT,tooltip:true});i.bind("isOn","isEnabled").to(o,"value","isEnabled");_this253.listenTo(i,"execute",function(){t.execute(CT);t.editing.view.focus();});return i;});}}],[{key:"pluginName",get:function get(){return"RemoveFormatUI";}}]);return yT;}(go);var xT=/*#__PURE__*/function(_mo17){_inherits(xT,_mo17);var _super167=_createSuper(xT);function xT(){_classCallCheck(this,xT);return _super167.apply(this,arguments);}_createClass(xT,[{key:"refresh",value:function refresh(){var t=this.editor.model;this.isEnabled=!!mg(this._getFormattingItems(t.document.selection,t.schema));}},{key:"execute",value:function execute(){var _this254=this;var t=this.editor.model;var e=t.schema;t.change(function(n){var _iterator381=_createForOfIteratorHelper(_this254._getFormattingItems(t.document.selection,e)),_step381;try{for(_iterator381.s();!(_step381=_iterator381.n()).done;){var _o179=_step381.value;if(_o179.is("selection")){var _iterator382=_createForOfIteratorHelper(_this254._getFormattingAttributes(_o179,e)),_step382;try{for(_iterator382.s();!(_step382=_iterator382.n()).done;){var _t312=_step382.value;n.removeSelectionAttribute(_t312);}}catch(err){_iterator382.e(err);}finally{_iterator382.f();}}else{var _t313=n.createRangeOn(_o179);var _iterator383=_createForOfIteratorHelper(_this254._getFormattingAttributes(_o179,e)),_step383;try{for(_iterator383.s();!(_step383=_iterator383.n()).done;){var _i147=_step383.value;n.removeAttribute(_i147,_t313);}}catch(err){_iterator383.e(err);}finally{_iterator383.f();}}}}catch(err){_iterator381.e(err);}finally{_iterator381.f();}});}},{key:"_getFormattingItems",value:/*#__PURE__*/regeneratorRuntime.mark(function _getFormattingItems(t,e){var _this255=this;var n,_iterator384,_step384,_o180,_iterator386,_step386,_t314,_iterator385,_step385,_e279;return regeneratorRuntime.wrap(function _getFormattingItems$(_context38){while(1){switch(_context38.prev=_context38.next){case 0:n=function n(t){return!!mg(_this255._getFormattingAttributes(t,e));};_iterator384=_createForOfIteratorHelper(t.getRanges());_context38.prev=2;_iterator384.s();case 4:if((_step384=_iterator384.n()).done){_context38.next=26;break;}_o180=_step384.value;_iterator386=_createForOfIteratorHelper(_o180.getItems());_context38.prev=7;_iterator386.s();case 9:if((_step386=_iterator386.n()).done){_context38.next=16;break;}_t314=_step386.value;if(!(!e.isBlock(_t314)&&n(_t314))){_context38.next=14;break;}_context38.next=14;return _t314;case 14:_context38.next=9;break;case 16:_context38.next=21;break;case 18:_context38.prev=18;_context38.t0=_context38["catch"](7);_iterator386.e(_context38.t0);case 21:_context38.prev=21;_iterator386.f();return _context38.finish(21);case 24:_context38.next=4;break;case 26:_context38.next=31;break;case 28:_context38.prev=28;_context38.t1=_context38["catch"](2);_iterator384.e(_context38.t1);case 31:_context38.prev=31;_iterator384.f();return _context38.finish(31);case 34:_iterator385=_createForOfIteratorHelper(t.getSelectedBlocks());_context38.prev=35;_iterator385.s();case 37:if((_step385=_iterator385.n()).done){_context38.next=44;break;}_e279=_step385.value;if(!n(_e279)){_context38.next=42;break;}_context38.next=42;return _e279;case 42:_context38.next=37;break;case 44:_context38.next=49;break;case 46:_context38.prev=46;_context38.t2=_context38["catch"](35);_iterator385.e(_context38.t2);case 49:_context38.prev=49;_iterator385.f();return _context38.finish(49);case 52:if(!n(t)){_context38.next=55;break;}_context38.next=55;return t;case 55:case"end":return _context38.stop();}}},_getFormattingItems,null,[[2,28,31,34],[7,18,21,24],[35,46,49,52]]);})},{key:"_getFormattingAttributes",value:/*#__PURE__*/regeneratorRuntime.mark(function _getFormattingAttributes(t,e){var _iterator387,_step387,_step387$value,_n262,_t315;return regeneratorRuntime.wrap(function _getFormattingAttributes$(_context39){while(1){switch(_context39.prev=_context39.next){case 0:_iterator387=_createForOfIteratorHelper(t.getAttributes());_context39.prev=1;_iterator387.s();case 3:if((_step387=_iterator387.n()).done){_context39.next=11;break;}_step387$value=_slicedToArray(_step387.value,1),_n262=_step387$value[0];_t315=e.getAttributeProperties(_n262);if(!(_t315&&_t315.isFormatting)){_context39.next=9;break;}_context39.next=9;return _n262;case 9:_context39.next=3;break;case 11:_context39.next=16;break;case 13:_context39.prev=13;_context39.t0=_context39["catch"](1);_iterator387.e(_context39.t0);case 16:_context39.prev=16;_iterator387.f();return _context39.finish(16);case 19:case"end":return _context39.stop();}}},_getFormattingAttributes,null,[[1,13,16,19]]);})}]);return xT;}(mo);var ET=/*#__PURE__*/function(_go49){_inherits(ET,_go49);var _super168=_createSuper(ET);function ET(){_classCallCheck(this,ET);return _super168.apply(this,arguments);}_createClass(ET,[{key:"init",value:function init(){var t=this.editor;t.commands.add("removeFormat",new xT(t));}}],[{key:"pluginName",get:function get(){return"RemoveFormatEditing";}}]);return ET;}(go);var DT=/*#__PURE__*/function(_go50){_inherits(DT,_go50);var _super169=_createSuper(DT);function DT(){_classCallCheck(this,DT);return _super169.apply(this,arguments);}_createClass(DT,null,[{key:"requires",get:function get(){return[ET,yT];}},{key:"pluginName",get:function get(){return"RemoveFormat";}}]);return DT;}(go);var ST=/*#__PURE__*/function(_Ly){_inherits(ST,_Ly);var _super170=_createSuper(ST);function ST(){_classCallCheck(this,ST);return _super170.apply(this,arguments);}return _createClass(ST);}(Ly);ST.builtinPlugins=[Uy,OD,nS,bS,EP,IP,vT,sS,DT];ST.defaultConfig={toolbar:{items:["undo","redo","|","|","|","|"]},language:"en"};var PT=ST;})();o=o["default"];return o;}();});"},null]}